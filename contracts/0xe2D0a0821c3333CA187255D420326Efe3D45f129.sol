contract main {




// =====================  Runtime code  =====================


#
#  - startSaving()
#
address storeAddress;
address underlyingAddress;
uint32 stor2;
address vaultAddress;
uint256 stor2;
mapping of uint8 stor3;
mapping of uint8 stor4;
array of address whitelistedStrategies;
array of address activeStrategies;
array of uint256 caps;
array of uint256 investmentRatioNumerators;
array of address withdrawalOrder;
address futureStrategyAddress;
uint256 strategyWhitelistTime;
uint256 investmentRatioDenominator;
uint256 whitelistStrategyTimeLock;
uint8 isInitialized;
array of address stor1546678032441257452667456735582814959992782782816731922691272282333561699760;

function whitelistedStrategies(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < whitelistedStrategies.length
    return whitelistedStrategies[arg1]
}

function withdrawalOrder(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < withdrawalOrder.length
    return address(withdrawalOrder[arg1])
}

function underlyingERC() payable {
    return underlyingAddress
}

function isInitialized() payable {
    return bool(isInitialized)
}

function unsalvagableTokens(address arg1) payable {
    require calldata.size - 4 >= 32
    return bool(stor3[arg1])
}

function futureStrategy() payable {
    return futureStrategyAddress
}

function underlying() payable {
    return underlyingAddress
}

function whitelistedStrategyCount() payable {
    return whitelistedStrategies.length
}

function whitelistStrategyTimeLock() payable {
    return whitelistStrategyTimeLock
}

function store() payable {
    return storeAddress
}

function isStrategyWhitelisted(address arg1) payable {
    require calldata.size - 4 >= 32
    return bool(stor4[arg1])
}

function activeStrategies(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < activeStrategies.length
    return address(activeStrategies[arg1])
}

function investmentRatioDenominator() payable {
    return investmentRatioDenominator
}

function strategyWhitelistTime() payable {
    return strategyWhitelistTime
}

function caps(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < caps.length
    return caps[arg1]
}

function investmentRatioNumerators(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < investmentRatioNumerators.length
    return investmentRatioNumerators[arg1]
}

function vault() payable {
    return address(vaultAddress)
}

function _fallback() payable {
    revert
}

function canWhitelistStrategy(address arg1) payable {
    require calldata.size - 4 >= 32
    if futureStrategyAddress != arg1:
        return (futureStrategyAddress == arg1)
    if block.timestamp <= strategyWhitelistTime:
        return (block.timestamp > strategyWhitelistTime)
    return (strategyWhitelistTime > 0)
}

function governance() payable {
    require ext_code.size(storeAddress)
    staticcall storeAddress.0x5aa6e675 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[12 len 20]
}

function controller() payable {
    require ext_code.size(storeAddress)
    staticcall storeAddress.0xf77c4791 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[12 len 20]
}

function finalizeStrategyWhitelist() payable {
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    strategyWhitelistTime = 0
    futureStrategyAddress = 0
}

function setStorage(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    if not arg1:
        revert with 0, 'new storage shouldn't be empty'
    storeAddress = arg1
}

function investedUnderlyingBalance() payable {
    idx = 0
    s = 0
    while idx < whitelistedStrategies.length:
        mem[0] = 5
        require ext_code.size(whitelistedStrategies[idx])
        staticcall whitelistedStrategies[idx].0x45d01e4a with:
                gas gas_remaining wei
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] + s < s:
            revert with 0, 'SafeMath: addition overflow'
        idx = idx + 1
        s = ext_call.return_data[0] + s
        continue 
    require ext_code.size(underlyingAddress)
    staticcall underlyingAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] + (_24 * whitelistedStrategies.length) < _24 * whitelistedStrategies.length:
        revert with 0, 'SafeMath: addition overflow'
    return (ext_call.return_data[0] + (_24 * whitelistedStrategies.length))
}

function startSaving(address arg1) payable {
    require calldata.size - 4 >= 32
    if address(vaultAddress) != msg.sender:
        require ext_code.size(storeAddress)
        staticcall storeAddress.0xf77c4791 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20] != msg.sender:
            require ext_code.size(storeAddress)
            staticcall storeAddress.0x5aa6e675 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[12 len 20] != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            58,
                            0x675468652073656e6465722068617320746f2062652074686520636f6e74726f6c6c6572206f72207661756c74206f7220676f7665726e616e63,
                            mem[222 len 6]
    require ext_code.size(arg1)
    call arg1.0x4983aecd with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function withdrawFromStrategy(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if address(vaultAddress) != msg.sender:
        require ext_code.size(storeAddress)
        staticcall storeAddress.0xf77c4791 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20] != msg.sender:
            require ext_code.size(storeAddress)
            staticcall storeAddress.0x5aa6e675 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[12 len 20] != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            58,
                            0x675468652073656e6465722068617320746f2062652074686520636f6e74726f6c6c6572206f72207661756c74206f7220676f7665726e616e63,
                            mem[222 len 6]
    if not stor4[address(arg1)]:
        revert with 0, 'strategy not whitelisted'
    require ext_code.size(arg1)
    call arg1.0xce8c42e8 with:
         gas gas_remaining wei
        args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function unwhitelistStrategy(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    if not arg1:
        revert with 0, '_strategy cannot be 0x0'
    if not stor4[address(arg1)]:
        revert with 0, '_strategy is not whitelisted'
    require ext_code.size(arg1)
    staticcall arg1.0x45d01e4a with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0x7463616e206f6e6c7920756e77686974656c69737420616e20656d7074792073747261746567,
                    mem[202 len 26]
    emit 0x94d1cdb7: arg1
    stor4[address(arg1)] = 0
    idx = 0
    while idx < whitelistedStrategies.length:
        mem[0] = 5
        if whitelistedStrategies[idx] != arg1:
            idx = idx + 1
            continue 
        if idx < whitelistedStrategies.length - 1:
            require whitelistedStrategies.length - 1 < whitelistedStrategies.length
            require idx < whitelistedStrategies.length
            whitelistedStrategies[idx] = whitelistedStrategies[whitelistedStrategies.length]
        require whitelistedStrategies.length
        whitelistedStrategies[whitelistedStrategies.length] = 0
        whitelistedStrategies.length--
}

function announceStrategyWhitelist(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    if not arg1:
        revert with 0, '_strategy cannot be 0x0'
    require ext_code.size(arg1)
    staticcall arg1.0x6f307dc3 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[12 len 20] != underlyingAddress:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    53,
                    0x65556e6465726c79696e67206f662073706c6974746572206d757374206d6174636820537472617465677920756e6465726c79696e,
                    mem[217 len 11]
    require ext_code.size(arg1)
    staticcall arg1.0xfbfa77cf with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[12 len 20] != this.address:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    45,
                    0x7754686520737472617465677920646f6573206e6f742062656c6f6e6720746f20746869732073706c69747465,
                    mem[209 len 19]
    if whitelistStrategyTimeLock + block.timestamp < block.timestamp:
        revert with 0, 'SafeMath: addition overflow'
    strategyWhitelistTime = whitelistStrategyTimeLock + block.timestamp
    futureStrategyAddress = arg1
    emit 0xb6eb131a: address(arg1), whitelistStrategyTimeLock + block.timestamp
}

function investIntoStrategy(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if msg.sender == address(vaultAddress):
        if not stor4[address(arg1)]:
            revert with 0, 'strategy not whitelisted'
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(underlyingAddress):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg1) << 64, 0, Mask(224, 32, arg2) >> 32
    else:
        require ext_code.size(storeAddress)
        staticcall storeAddress.0xf77c4791 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if msg.sender == ext_call.return_data[12 len 20]:
            if not stor4[address(arg1)]:
                revert with 0, 'strategy not whitelisted'
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(underlyingAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg1) << 64, 0, Mask(224, 32, arg2) >> 32
        else:
            require ext_code.size(storeAddress)
            staticcall storeAddress.0x5aa6e675 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[12 len 20] != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            58,
                            0x675468652073656e6465722068617320746f2062652074686520636f6e74726f6c6c6572206f72207661756c74206f7220676f7665726e616e63,
                            mem[222 len 6]
            if not stor4[address(arg1)]:
                revert with 0, 'strategy not whitelisted'
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(underlyingAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg1) << 64, 0, Mask(224, 32, arg2) >> 32
            mem[324 len 0] = 0
    call underlyingAddress with:
         gas gas_remaining wei
        args Mask(224, 32, arg2) << 224, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), address(arg1) << 64, 0, arg2
        if not unknown_0xa9059cbb(?????), address(arg1) << 64:
            revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
}

function whitelistStrategy(address arg1) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    if futureStrategyAddress != arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    58,
                    0x725468652073747261746567792065786973747320616e64207377697463682074696d656c6f636b20646964206e6f7420656c61707365207965,
                    mem[222 len 6]
    if block.timestamp <= strategyWhitelistTime:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    58,
                    0x725468652073747261746567792065786973747320616e64207377697463682074696d656c6f636b20646964206e6f7420656c61707365207965,
                    mem[222 len 6]
    if strategyWhitelistTime <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    58,
                    0x725468652073747261746567792065786973747320616e64207377697463682074696d656c6f636b20646964206e6f7420656c61707365207965,
                    mem[222 len 6]
    whitelistedStrategies.length++
    stor36B6[stor5.length] = arg1
    stor4[address(arg1)] = 1
    emit 0x6b583e2e: arg1
    require ext_code.size(underlyingAddress)
    staticcall underlyingAddress.0xdd62ed3e with:
            gas gas_remaining wei
           args this.address, arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    54,
                    0x645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e63,
                    mem[218 len 10]
    if eth.balance(this.address) < 0:
        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
    if not ext_code.size(underlyingAddress):
        revert with 0, 'Address: call to non-contract'
    mem[260 len 64] = approve(address arg1, uint256 arg2), address(arg1) << 64, 0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
    call underlyingAddress with:
         gas gas_remaining wei
        args 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with approve(address arg1, uint256 arg2), address(arg1) << 64, 0, -1
        if not approve(address arg1, uint256 arg2), address(arg1) << 64:
            revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    strategyWhitelistTime = 0
    futureStrategyAddress = 0
}

function salvage(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if msg.sender == address(vaultAddress):
        if stor3[address(arg2)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        35,
                        0x79746f6b656e20697320646566696e6564206173206e6f742073616c7661676561626c,
                        mem[199 len 29]
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(arg2):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg1) << 64, 0, Mask(224, 32, arg3) >> 32
    else:
        require ext_code.size(storeAddress)
        staticcall storeAddress.0xf77c4791 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if msg.sender == ext_call.return_data[12 len 20]:
            if stor3[address(arg2)]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            35,
                            0x79746f6b656e20697320646566696e6564206173206e6f742073616c7661676561626c,
                            mem[199 len 29]
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(arg2):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg1) << 64, 0, Mask(224, 32, arg3) >> 32
        else:
            require ext_code.size(storeAddress)
            staticcall storeAddress.0x5aa6e675 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[12 len 20] != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            58,
                            0x675468652073656e6465722068617320746f2062652074686520636f6e74726f6c6c6572206f72207661756c74206f7220676f7665726e616e63,
                            mem[222 len 6]
            if stor3[address(arg2)]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            35,
                            0x79746f6b656e20697320646566696e6564206173206e6f742073616c7661676561626c,
                            mem[199 len 29]
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(arg2):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), address(arg1) << 64, 0, Mask(224, 32, arg3) >> 32
            mem[324 len 0] = 0
    call arg2 with:
         gas gas_remaining wei
        args Mask(224, 32, arg3) << 224, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), address(arg1) << 64, 0, arg3
        if not unknown_0xa9059cbb(?????), address(arg1) << 64:
            revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
}

function configureStrategies(address[] arg1, uint256[] arg2, uint256[] arg3, address[] arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + (32 * arg1.length) + 36 <= calldata.size
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + (32 * arg2.length) + 36 <= calldata.size
    mem[(32 * arg1.length) + 128] = arg2.length
    mem[(32 * arg1.length) + 160 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    require arg3 <= 4294967296
    require arg3 + 36 <= calldata.size
    require arg3.length <= 4294967296 and arg3 + (32 * arg3.length) + 36 <= calldata.size
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = arg3.length
    mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + (32 * arg4.length) + 36 <= calldata.size
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 192] = arg4.length
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 224 len 32 * arg4.length] = call.data[arg4 + 36 len 32 * arg4.length]
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 228] = msg.sender
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 224] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    if arg1.length != arg2.length:
        revert with 0, 'investment ratios length invalid'
    if arg1.length != arg3.length:
        revert with 0, 'caps length invalid'
    if whitelistedStrategies.length != arg4.length:
        revert with 0, 'withdrawalOrder length invalid'
    activeStrategies.length = 0
    idx = 0
    while activeStrategies.length > idx:
        uint256(activeStrategies[idx]) = 0
        idx = idx + 1
        continue 
    investmentRatioNumerators.length = 0
    idx = 0
    while investmentRatioNumerators.length > idx:
        investmentRatioNumerators[idx] = 0
        idx = idx + 1
        continue 
    caps.length = 0
    idx = 0
    while caps.length > idx:
        caps[idx] = 0
        idx = idx + 1
        continue 
    idx = 0
    while idx < arg1.length:
        require idx < arg1.length
        mem[32] = 4
        if not stor4[mem[(32 * idx) + 140 len 20]]:
            revert with 0, 'strategy not whitelisted'
        require idx < arg1.length
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].0x6f307dc3 with:
                gas gas_remaining wei
        mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 224] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20] != underlyingAddress:
            revert with 0, 
                        32,
                        46,
                        0x6c756e6465726c79696e67206d757374206d6174636820666f722077686974656c69737465642073747261746567,
                        mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 338 len 18]
        require idx < arg1.length
        activeStrategies.length++
        address(activeStrategies[activeStrategies.length]) = mem[(32 * idx) + 140 len 20]
        require idx < arg2.length
        investmentRatioNumerators.length++
        investmentRatioNumerators[investmentRatioNumerators.length] = mem[(32 * idx) + (32 * arg1.length) + 160]
        require idx < arg3.length
        caps.length++
        mem[0] = 7
        caps[caps.length] = mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]
        idx = idx + 1
        continue 
    withdrawalOrder.length = 0
    idx = 0
    while withdrawalOrder.length > idx:
        uint256(withdrawalOrder[idx]) = 0
        idx = idx + 1
        continue 
    idx = 0
    while idx < arg4.length:
        require idx < arg4.length
        mem[32] = 4
        if not stor4[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 236 len 20]]:
            revert with 0, 
                        32,
                        35,
                        0x657769746864726177616c207374726174656779206e6f742077686974656c69737465,
                        mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 327 len 29]
        require idx < arg4.length
        withdrawalOrder.length++
        mem[0] = 9
        address(withdrawalOrder[withdrawalOrder.length]) = mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 236 len 20]
        idx = idx + 1
        continue 
}

function initSplitter(address arg1, address arg2, address[] arg3, uint256[] arg4, uint256[] arg5, address[] arg6) payable {
    require calldata.size - 4 >= 192
    require arg3 <= 4294967296
    require arg3 + 36 <= calldata.size
    require arg3.length <= 4294967296 and arg3 + (32 * arg3.length) + 36 <= calldata.size
    mem[128 len 32 * arg3.length] = call.data[arg3 + 36 len 32 * arg3.length]
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + (32 * arg4.length) + 36 <= calldata.size
    mem[(32 * arg3.length) + 128] = arg4.length
    mem[(32 * arg3.length) + 160 len 32 * arg4.length] = call.data[arg4 + 36 len 32 * arg4.length]
    require arg5 <= 4294967296
    require arg5 + 36 <= calldata.size
    require arg5.length <= 4294967296 and arg5 + (32 * arg5.length) + 36 <= calldata.size
    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = arg5.length
    mem[(32 * arg3.length) + (32 * arg4.length) + 192 len 32 * arg5.length] = call.data[arg5 + 36 len 32 * arg5.length]
    require arg6 <= 4294967296
    require arg6 + 36 <= calldata.size
    require arg6.length <= 4294967296 and arg6 + (32 * arg6.length) + 36 <= calldata.size
    mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 192] = arg6.length
    mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 224 len 32 * arg6.length] = call.data[arg6 + 36 len 32 * arg6.length]
    mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + (32 * arg6.length) + 228] = msg.sender
    require ext_code.size(storeAddress)
    staticcall storeAddress.isGovernance(address arg1) with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Not governance'
    if isInitialized:
        revert with 0, 'splitter is already initialized'
    isInitialized = 1
    if not arg1:
        revert with 0, '_underlying cannot be empty'
    if not arg2:
        revert with 0, '_vault cannot be empty'
    require ext_code.size(arg2)
    staticcall arg2.0x6f307dc3 with:
            gas gas_remaining wei
    mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + (32 * arg6.length) + 224] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[12 len 20] != arg1:
        revert with 0, 'underlying must match'
    stor3[address(arg1)] = 1
    underlyingAddress = arg1
    address(vaultAddress) = arg2
    idx = 0
    while idx < arg3.length:
        require idx < arg3.length
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].0x6f307dc3 with:
                gas gas_remaining wei
        mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + (32 * arg6.length) + 224] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20] != arg1:
            revert with 0, 
                        32,
                        46,
                        0x6c756e6465726c79696e67206d757374206d6174636820666f722077686974656c69737465642073747261746567,
                        mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + (32 * arg6.length) + 338 len 18]
        require idx < arg3.length
        whitelistedStrategies.length++
        whitelistedStrategies[whitelistedStrategies.length] = mem[(32 * idx) + 140 len 20]
        require idx < arg3.length
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 4
        stor4[mem[(32 * idx) + 140 len 20]] = 1
        idx = idx + 1
        continue 
    if arg3.length != arg4.length:
        revert with 0, 'investment ratios length invalid'
    if arg3.length != arg5.length:
        revert with 0, 'caps length invalid'
    if whitelistedStrategies.length != arg6.length:
        revert with 0, 'withdrawalOrder length invalid'
    activeStrategies.length = 0
    idx = 0
    while activeStrategies.length > idx:
        uint256(activeStrategies[idx]) = 0
        idx = idx + 1
        continue 
    investmentRatioNumerators.length = 0
    idx = 0
    while investmentRatioNumerators.length > idx:
        investmentRatioNumerators[idx] = 0
        idx = idx + 1
        continue 
    caps.length = 0
    idx = 0
    while caps.length > idx:
        caps[idx] = 0
        idx = idx + 1
        continue 
    idx = 0
    while idx < arg3.length:
        require idx < arg3.length
        mem[32] = 4
        if not stor4[mem[(32 * idx) + 140 len 20]]:
            revert with 0, 'strategy not whitelisted'
        require idx < arg3.length
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].0x6f307dc3 with:
                gas gas_remaining wei
        mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + (32 * arg6.length) + 224] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20] != underlyingAddress:
            revert with 0, 
                        32,
                        46,
                        0x6c756e6465726c79696e67206d757374206d6174636820666f722077686974656c69737465642073747261746567,
                        mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + (32 * arg6.length) + 338 len 18]
        require idx < arg3.length
        activeStrategies.length++
        address(activeStrategies[activeStrategies.length]) = mem[(32 * idx) + 140 len 20]
        require idx < arg4.length
        investmentRatioNumerators.length++
        investmentRatioNumerators[investmentRatioNumerators.length] = mem[(32 * idx) + (32 * arg3.length) + 160]
        require idx < arg5.length
        caps.length++
        mem[0] = 7
        caps[caps.length] = mem[(32 * idx) + (32 * arg3.length) + (32 * arg4.length) + 192]
        idx = idx + 1
        continue 
    withdrawalOrder.length = 0
    idx = 0
    while withdrawalOrder.length > idx:
        uint256(withdrawalOrder[idx]) = 0
        idx = idx + 1
        continue 
    idx = 0
    while idx < arg6.length:
        require idx < arg6.length
        mem[32] = 4
        if not stor4[mem[(32 * idx) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 236 len 20]]:
            revert with 0, 
                        32,
                        35,
                        0x657769746864726177616c207374726174656779206e6f742077686974656c69737465,
                        mem[(32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + (32 * arg6.length) + 327 len 29]
        require idx < arg6.length
        withdrawalOrder.length++
        mem[0] = 9
        address(withdrawalOrder[withdrawalOrder.length]) = mem[(32 * idx) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 236 len 20]
        idx = idx + 1
        continue 
}

function withdrawAllToVault() payable {
    if msg.sender == address(vaultAddress):
        idx = 0
        while idx < withdrawalOrder.length:
            mem[0] = 9
            require ext_code.size(address(withdrawalOrder[idx]))
            staticcall address(withdrawalOrder[idx]).0x45d01e4a with:
                    gas gas_remaining wei
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                require idx < withdrawalOrder.length
                mem[0] = 9
                mem[96] = 0xbfd131f100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(withdrawalOrder[idx]))
                call address(withdrawalOrder[idx]).0xbfd131f1 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        require ext_code.size(underlyingAddress)
        staticcall underlyingAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(underlyingAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor2), uint32(stor2), ext_call.return_data[0 len 28]
            mem[324 len 0] = 0
            call underlyingAddress with:
               funct uint32(stor2)
                 gas gas_remaining wei
                args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with unknown_0xa9059cbb(?????), Mask(224, 0, stor2), uint32(stor2), ext_call.return_data[0]
                if not unknown_0xa9059cbb(?????), Mask(224, 0, stor2):
                    revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            else:
                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[292]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 371 len 22]
    else:
        require ext_code.size(storeAddress)
        staticcall storeAddress.0xf77c4791 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[12 len 20] != msg.sender:
            require ext_code.size(storeAddress)
            staticcall storeAddress.0x5aa6e675 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[12 len 20] != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            58,
                            0x675468652073656e6465722068617320746f2062652074686520636f6e74726f6c6c6572206f72207661756c74206f7220676f7665726e616e63,
                            mem[222 len 6]
        idx = 0
        while idx < withdrawalOrder.length:
            mem[0] = 9
            require ext_code.size(address(withdrawalOrder[idx]))
            staticcall address(withdrawalOrder[idx]).0x45d01e4a with:
                    gas gas_remaining wei
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > 0:
                require idx < withdrawalOrder.length
                mem[0] = 9
                mem[96] = 0xbfd131f100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(withdrawalOrder[idx]))
                call address(withdrawalOrder[idx]).0xbfd131f1 with:
                     gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        require ext_code.size(underlyingAddress)
        staticcall underlyingAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0]:
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(underlyingAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = unknown_0xa9059cbb(?????), Mask(224, 0, stor2), uint32(stor2), ext_call.return_data[0 len 28]
            call underlyingAddress with:
               funct uint32(stor2)
                 gas gas_remaining wei
                args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with unknown_0xa9059cbb(?????), Mask(224, 0, stor2), uint32(stor2), ext_call.return_data[0]
                if not unknown_0xa9059cbb(?????), Mask(224, 0, stor2):
                    revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            else:
                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if return_data.size:
                    require return_data.size >= 32
                    if not mem[292]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 371 len 22]
}

function withdrawToVault(uint256 arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if msg.sender == address(vaultAddress):
        if arg1 <= 0:
            revert with 0, 'amount must be greater than 0'
        idx = 0
        while idx < withdrawalOrder.length:
            mem[100] = this.address
            require ext_code.size(underlyingAddress)
            staticcall underlyingAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < arg1:
                require idx < withdrawalOrder.length
                mem[0] = 9
                require ext_code.size(address(withdrawalOrder[idx]))
                staticcall address(withdrawalOrder[idx]).0x45d01e4a with:
                        gas gas_remaining wei
                mem[96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    require idx < withdrawalOrder.length
                    mem[0] = 9
                    if ext_call.return_data[0] > arg1:
                        revert with 0, 'SafeMath: subtraction overflow'
                    mem[96] = 0xce8c42e800000000000000000000000000000000000000000000000000000000
                    if arg1 - ext_call.return_data[0] < ext_call.return_data[0]:
                        mem[100] = arg1 - ext_call.return_data[0]
                        require ext_code.size(address(withdrawalOrder[idx]))
                        call address(withdrawalOrder[idx]).0xce8c42e8 with:
                             gas gas_remaining wei
                            args (arg1 - ext_call.return_data[0])
                    else:
                        mem[100] = ext_call.return_data[0]
                        require ext_code.size(address(withdrawalOrder[idx]))
                        call address(withdrawalOrder[idx]).0xce8c42e8 with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            require ext_code.size(underlyingAddress)
            staticcall underlyingAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < arg1:
                revert with 0, 32, 41, 0xfe73706c697474657220646f6573206e6f7420686176652073756666696369656e742062616c616e63, mem[205 len 23]
            mem[132] = address(vaultAddress)
            mem[164] = arg1
            mem[96] = 68
            mem[128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or Mask(224, 0, stor2)
            mem[64] = 260
            mem[196] = 32
            mem[228] = 'SafeERC20: low-level call failed'
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(underlyingAddress):
                revert with 0, 'Address: call to non-contract'
            t = 128
            u = 260
            s = 68
            while s >= 32:
                mem[u] = mem[t]
                t = t + 32
                u = u + 32
                s = s - 32
                continue 
            mem[324] = 0 or Mask(224, 32, mem[324])
            call underlyingAddress.mem[260 len 4] with:
                 gas gas_remaining wei
                args mem[264 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or Mask(224, 0, stor2), uint32(stor2), arg1
                if False and not Mask(224, 0, stor2):
                    revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                mem[264] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[260] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = 0
                while idx < activeStrategies.length:
                    require idx < investmentRatioNumerators.length
                    mem[0] = 8
                    if not ext_call.return_data[0]:
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / investmentRatioDenominator >= ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43232 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43233 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43233 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43233 + 36 len 28]
                                mem[64] = _43232 + 164
                                mem[_43232 + 100] = 32
                                mem[_43232 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43232 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44366 = mem[_43233]
                                t = _43233 + 32
                                u = _43232 + 164
                                s = mem[_43233]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43232 + floor32(mem[_43233]) + 164] = mem[_43233 + -(mem[_43233] % 32) + floor32(mem[_43233]) + 64 len mem[_43233] % 32] or Mask(8 * -(mem[_43233] % 32) + 32, -(8 * -(mem[_43233] % 32) + 32) + 256, mem[_43232 + floor32(mem[_43233]) + 164])
                                call underlyingAddress.mem[_43232 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43232 + 168 len _44366 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43232 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43232 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43232 + 168] = 32
                                    mem[_43232 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43232 + 232] = mem[idx + _43232 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43232 + -mem[64] + 264
                                mem[64] = _43232 + ceil32(return_data.size) + 165
                                mem[_43232 + 164] = return_data.size
                                mem[_43232 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43232 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43232 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43232 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43232 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43232 + ceil32(return_data.size) + 233] = mem[idx + _43232 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43232 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45104 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45105 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45105 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45105 + 36 len 28]
                                mem[64] = _45104 + 164
                                mem[_45104 + 100] = 32
                                mem[_45104 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45104 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47780 = mem[_45105]
                                t = _45105 + 32
                                u = _45104 + 164
                                s = mem[_45105]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45104 + floor32(mem[_45105]) + 164] = mem[_45105 + -(mem[_45105] % 32) + floor32(mem[_45105]) + 64 len mem[_45105] % 32] or Mask(8 * -(mem[_45105] % 32) + 32, -(8 * -(mem[_45105] % 32) + 32) + 256, mem[_45104 + floor32(mem[_45105]) + 164])
                                call underlyingAddress.mem[_45104 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45104 + 168 len _47780 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45104 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45104 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45104 + 168] = 32
                                    mem[_45104 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45104 + 232] = mem[idx + _45104 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45104 + -mem[64] + 264
                                mem[64] = _45104 + ceil32(return_data.size) + 165
                                mem[_45104 + 164] = return_data.size
                                mem[_45104 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45104 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45104 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45104 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45104 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45104 + ceil32(return_data.size) + 233] = mem[idx + _45104 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45104 + ceil32(return_data.size) + 233]
                            _45470 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45471 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45471 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45471 + 36 len 28]
                            mem[64] = _45470 + 164
                            mem[_45470 + 100] = 32
                            mem[_45470 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45470 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48512 = mem[_45471]
                            t = _45471 + 32
                            u = _45470 + 164
                            s = mem[_45471]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45470 + floor32(mem[_45471]) + 164] = mem[_45471 + -(mem[_45471] % 32) + floor32(mem[_45471]) + 64 len mem[_45471] % 32] or Mask(8 * -(mem[_45471] % 32) + 32, -(8 * -(mem[_45471] % 32) + 32) + 256, mem[_45470 + floor32(mem[_45471]) + 164])
                            call underlyingAddress.mem[_45470 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45470 + 168 len _48512 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45470 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45470 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45470 + 168] = 32
                                mem[_45470 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45470 + 232] = mem[idx + _45470 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45470 + -mem[64] + 264
                            mem[64] = _45470 + ceil32(return_data.size) + 165
                            mem[_45470 + 164] = return_data.size
                            mem[_45470 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45470 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45470 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45470 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45470 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45470 + ceil32(return_data.size) + 233] = mem[idx + _45470 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45470 + ceil32(return_data.size) + 233]
                        if not 0 / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _42958 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = 0 / investmentRatioDenominator
                            _42959 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_42959 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_42959 + 36 len 28]
                            mem[64] = _42958 + 164
                            mem[_42958 + 100] = 32
                            mem[_42958 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_42958 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44185 = mem[_42959]
                            t = _42959 + 32
                            u = _42958 + 164
                            s = mem[_42959]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_42958 + floor32(mem[_42959]) + 164] = mem[_42959 + -(mem[_42959] % 32) + floor32(mem[_42959]) + 64 len mem[_42959] % 32] or Mask(8 * -(mem[_42959] % 32) + 32, -(8 * -(mem[_42959] % 32) + 32) + 256, mem[_42958 + floor32(mem[_42959]) + 164])
                            call underlyingAddress.mem[_42958 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_42958 + 168 len _44185 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_42958 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_42958 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_42958 + 168] = 32
                                mem[_42958 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _42958 + 232] = mem[idx + _42958 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _42958 + -mem[64] + 264
                            mem[64] = _42958 + ceil32(return_data.size) + 165
                            mem[_42958 + 164] = return_data.size
                            mem[_42958 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_42958 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_42958 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_42958 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_42958 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _42958 + ceil32(return_data.size) + 233] = mem[idx + _42958 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_42958 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                            _44788 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _44789 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_44789 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44789 + 36 len 28]
                            mem[64] = _44788 + 164
                            mem[_44788 + 100] = 32
                            mem[_44788 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44788 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47310 = mem[_44789]
                            t = _44789 + 32
                            u = _44788 + 164
                            s = mem[_44789]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_44788 + floor32(mem[_44789]) + 164] = mem[_44789 + -(mem[_44789] % 32) + floor32(mem[_44789]) + 64 len mem[_44789] % 32] or Mask(8 * -(mem[_44789] % 32) + 32, -(8 * -(mem[_44789] % 32) + 32) + 256, mem[_44788 + floor32(mem[_44789]) + 164])
                            call underlyingAddress.mem[_44788 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_44788 + 168 len _47310 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_44788 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_44788 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_44788 + 168] = 32
                                mem[_44788 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _44788 + 232] = mem[idx + _44788 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _44788 + -mem[64] + 264
                            mem[64] = _44788 + ceil32(return_data.size) + 165
                            mem[_44788 + 164] = return_data.size
                            mem[_44788 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_44788 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_44788 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_44788 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_44788 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _44788 + ceil32(return_data.size) + 233] = mem[idx + _44788 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_44788 + ceil32(return_data.size) + 233]
                        _45100 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = 0 / investmentRatioDenominator
                        _45101 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45101 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45101 + 36 len 28]
                        mem[64] = _45100 + 164
                        mem[_45100 + 100] = 32
                        mem[_45100 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45100 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _47770 = mem[_45101]
                        t = _45101 + 32
                        u = mem[64]
                        s = mem[_45101]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45101])] = mem[_45101 + floor32(mem[_45101]) + -(mem[_45101] % 32) + 64 len mem[_45101] % 32] or Mask(8 * -(mem[_45101] % 32) + 32, -(8 * -(mem[_45101] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45101])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _47770 + _45100 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58611 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45100 + 100]
                            _58613 = mem[_45100 + 100]
                            idx = 0
                            while idx < _58613:
                                mem[idx + _58611 + 68] = mem[idx + _45100 + 132]
                                idx = idx + 32
                                continue 
                            if not _58613 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58613 + _58611 + -mem[64] + 68
                            mem[floor32(_58613) + _58611 + 68] = mem[floor32(_58613) + _58611 + -(_58613 % 32) + 100 len _58613 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58613) + _58611 + -mem[64] + 100
                        _57271 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57271] = return_data.size
                        mem[_57271 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57271 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58615 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45100 + 100]
                        _58617 = mem[_45100 + 100]
                        idx = 0
                        while idx < _58617:
                            mem[idx + _58615 + 68] = mem[idx + _45100 + 132]
                            idx = idx + 32
                            continue 
                        if not _58617 % 32:
                            revert with memory
                              from mem[64]
                               len _58617 + _58615 + -mem[64] + 68
                        mem[floor32(_58617) + _58615 + 68] = mem[floor32(_58617) + _58615 + -(_58617 % 32) + 100 len _58617 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58617) + _58615 + -mem[64] + 100
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                        revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if investmentRatioDenominator <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require investmentRatioDenominator
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator >= ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43493 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43494 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43494 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43494 + 36 len 28]
                            mem[64] = _43493 + 164
                            mem[_43493 + 100] = 32
                            mem[_43493 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43493 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44572 = mem[_43494]
                            t = _43494 + 32
                            u = _43493 + 164
                            s = mem[_43494]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43493 + floor32(mem[_43494]) + 164] = mem[_43494 + -(mem[_43494] % 32) + floor32(mem[_43494]) + 64 len mem[_43494] % 32] or Mask(8 * -(mem[_43494] % 32) + 32, -(8 * -(mem[_43494] % 32) + 32) + 256, mem[_43493 + floor32(mem[_43494]) + 164])
                            call underlyingAddress.mem[_43493 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43493 + 168 len _44572 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43493 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43493 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43493 + 168] = 32
                                mem[_43493 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43493 + 232] = mem[idx + _43493 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43493 + -mem[64] + 264
                            mem[64] = _43493 + ceil32(return_data.size) + 165
                            mem[_43493 + 164] = return_data.size
                            mem[_43493 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43493 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43493 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43493 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43493 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43493 + ceil32(return_data.size) + 233] = mem[idx + _43493 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43493 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45465 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45466 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45466 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45466 + 36 len 28]
                            mem[64] = _45465 + 164
                            mem[_45465 + 100] = 32
                            mem[_45465 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45465 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48498 = mem[_45466]
                            t = _45466 + 32
                            u = _45465 + 164
                            s = mem[_45466]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45465 + floor32(mem[_45466]) + 164] = mem[_45466 + -(mem[_45466] % 32) + floor32(mem[_45466]) + 64 len mem[_45466] % 32] or Mask(8 * -(mem[_45466] % 32) + 32, -(8 * -(mem[_45466] % 32) + 32) + 256, mem[_45465 + floor32(mem[_45466]) + 164])
                            call underlyingAddress.mem[_45465 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45465 + 168 len _48498 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45465 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45465 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45465 + 168] = 32
                                mem[_45465 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45465 + 232] = mem[idx + _45465 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45465 + -mem[64] + 264
                            mem[64] = _45465 + ceil32(return_data.size) + 165
                            mem[_45465 + 164] = return_data.size
                            mem[_45465 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45465 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45465 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45465 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45465 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45465 + ceil32(return_data.size) + 233] = mem[idx + _45465 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45465 + ceil32(return_data.size) + 233]
                        _45749 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45750 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45750 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45750 + 36 len 28]
                        mem[64] = _45749 + 164
                        mem[_45749 + 100] = 32
                        mem[_45749 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45749 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _49247 = mem[_45750]
                        t = _45750 + 32
                        u = _45749 + 164
                        s = mem[_45750]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45749 + floor32(mem[_45750]) + 164] = mem[_45750 + -(mem[_45750] % 32) + floor32(mem[_45750]) + 64 len mem[_45750] % 32] or Mask(8 * -(mem[_45750] % 32) + 32, -(8 * -(mem[_45750] % 32) + 32) + 256, mem[_45749 + floor32(mem[_45750]) + 164])
                        call underlyingAddress.mem[_45749 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45749 + 168 len _49247 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45749 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45749 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45749 + 168] = 32
                            mem[_45749 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45749 + 232] = mem[idx + _45749 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45749 + -mem[64] + 264
                        mem[64] = _45749 + ceil32(return_data.size) + 165
                        mem[_45749 + 164] = return_data.size
                        mem[_45749 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45749 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45749 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45749 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45749 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45749 + ceil32(return_data.size) + 233] = mem[idx + _45749 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45749 + ceil32(return_data.size) + 233]
                    if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    if caps[idx] <= 0:
                        mem[0] = 6
                        _43223 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                        _43224 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_43224 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43224 + 36 len 28]
                        mem[64] = _43223 + 164
                        mem[_43223 + 100] = 32
                        mem[_43223 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43223 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _44361 = mem[_43224]
                        t = _43224 + 32
                        u = _43223 + 164
                        s = mem[_43224]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_43223 + floor32(mem[_43224]) + 164] = mem[_43224 + -(mem[_43224] % 32) + floor32(mem[_43224]) + 64 len mem[_43224] % 32] or Mask(8 * -(mem[_43224] % 32) + 32, -(8 * -(mem[_43224] % 32) + 32) + 256, mem[_43223 + floor32(mem[_43224]) + 164])
                        call underlyingAddress.mem[_43223 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_43223 + 168 len _44361 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43223 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_43223 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43223 + 168] = 32
                            mem[_43223 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43223 + 232] = mem[idx + _43223 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _43223 + -mem[64] + 264
                        mem[64] = _43223 + ceil32(return_data.size) + 165
                        mem[_43223 + 164] = return_data.size
                        mem[_43223 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_43223 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_43223 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_43223 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_43223 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _43223 + ceil32(return_data.size) + 233] = mem[idx + _43223 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_43223 + ceil32(return_data.size) + 233]
                    require ext_code.size(address(activeStrategies[idx]))
                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require idx < caps.length
                    mem[0] = 7
                    if ext_call.return_data[0] >= caps[idx]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    mem[0] = 6
                    if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                        _45092 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45093 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45093 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45093 + 36 len 28]
                        mem[64] = _45092 + 164
                        mem[_45092 + 100] = 32
                        mem[_45092 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45092 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _47760 = mem[_45093]
                        t = _45093 + 32
                        u = _45092 + 164
                        s = mem[_45093]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45092 + floor32(mem[_45093]) + 164] = mem[_45093 + -(mem[_45093] % 32) + floor32(mem[_45093]) + 64 len mem[_45093] % 32] or Mask(8 * -(mem[_45093] % 32) + 32, -(8 * -(mem[_45093] % 32) + 32) + 256, mem[_45092 + floor32(mem[_45093]) + 164])
                        call underlyingAddress.mem[_45092 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45092 + 168 len _47760 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45092 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45092 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45092 + 168] = 32
                            mem[_45092 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45092 + 232] = mem[idx + _45092 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45092 + -mem[64] + 264
                        mem[64] = _45092 + ceil32(return_data.size) + 165
                        mem[_45092 + 164] = return_data.size
                        mem[_45092 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45092 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45092 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45092 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45092 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45092 + ceil32(return_data.size) + 233] = mem[idx + _45092 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45092 + ceil32(return_data.size) + 233]
                    _45461 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                    _45462 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_45462 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45462 + 36 len 28]
                    mem[64] = _45461 + 164
                    mem[_45461 + 100] = 32
                    mem[_45461 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45461 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _48488 = mem[_45462]
                    t = _45462 + 32
                    u = mem[64]
                    s = mem[_45462]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[mem[64] + floor32(mem[_45462])] = mem[_45462 + floor32(mem[_45462]) + -(mem[_45462] % 32) + 64 len mem[_45462] % 32] or Mask(8 * -(mem[_45462] % 32) + 32, -(8 * -(mem[_45462] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45462])])
                    call underlyingAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _48488 + _45461 + -mem[64] + 160]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        _58563 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45461 + 100]
                        _58565 = mem[_45461 + 100]
                        idx = 0
                        while idx < _58565:
                            mem[idx + _58563 + 68] = mem[idx + _45461 + 132]
                            idx = idx + 32
                            continue 
                        if not _58565 % 32:
                            revert with memory
                              from mem[64]
                               len _58565 + _58563 + -mem[64] + 68
                        mem[floor32(_58565) + _58563 + 68] = mem[floor32(_58565) + _58563 + -(_58565 % 32) + 100 len _58565 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58565) + _58563 + -mem[64] + 100
                    _57265 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_57265] = return_data.size
                    mem[_57265 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_57265 + 32]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    _58567 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_45461 + 100]
                    _58569 = mem[_45461 + 100]
                    idx = 0
                    while idx < _58569:
                        mem[idx + _58567 + 68] = mem[idx + _45461 + 132]
                        idx = idx + 32
                        continue 
                    if not _58569 % 32:
                        revert with memory
                          from mem[64]
                           len _58569 + _58567 + -mem[64] + 68
                    mem[floor32(_58569) + _58567 + 68] = mem[floor32(_58569) + _58567 + -(_58569 % 32) + 100 len _58569 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_58569) + _58567 + -mem[64] + 100
            else:
                mem[64] = ceil32(return_data.size) + 261
                mem[260] = return_data.size
                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[ceil32(return_data.size) + 265] = 32
                    idx = 0
                    while idx < 32:
                        mem[idx + ceil32(return_data.size) + 329] = mem[idx + 228]
                        idx = idx + 32
                        continue 
                    revert with 0, 32, 32, mem[ceil32(return_data.size) + 329]
                if not return_data.size:
                    mem[ceil32(return_data.size) + 265] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _42969 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _42970 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_42970 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_42970 + 36 len 28]
                                    mem[64] = _42969 + 164
                                    mem[_42969 + 100] = 32
                                    mem[_42969 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_42969 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44192 = mem[_42970]
                                    t = _42970 + 32
                                    u = _42969 + 164
                                    s = mem[_42970]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_42969 + floor32(mem[_42970]) + 164] = mem[_42970 + -(mem[_42970] % 32) + floor32(mem[_42970]) + 64 len mem[_42970] % 32] or Mask(8 * -(mem[_42970] % 32) + 32, -(8 * -(mem[_42970] % 32) + 32) + 256, mem[_42969 + floor32(mem[_42970]) + 164])
                                    call underlyingAddress.mem[_42969 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_42969 + 168 len _44192 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_42969 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_42969 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_42969 + 168] = 32
                                        mem[_42969 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _42969 + 232] = mem[idx + _42969 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _42969 + -mem[64] + 264
                                    mem[64] = _42969 + ceil32(return_data.size) + 165
                                    mem[_42969 + 164] = return_data.size
                                    mem[_42969 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_42969 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_42969 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_42969 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_42969 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _42969 + ceil32(return_data.size) + 233] = mem[idx + _42969 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_42969 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                    _44800 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _44801 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_44801 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44801 + 36 len 28]
                                    mem[64] = _44800 + 164
                                    mem[_44800 + 100] = 32
                                    mem[_44800 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44800 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _47326 = mem[_44801]
                                    t = _44801 + 32
                                    u = _44800 + 164
                                    s = mem[_44801]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_44800 + floor32(mem[_44801]) + 164] = mem[_44801 + -(mem[_44801] % 32) + floor32(mem[_44801]) + 64 len mem[_44801] % 32] or Mask(8 * -(mem[_44801] % 32) + 32, -(8 * -(mem[_44801] % 32) + 32) + 256, mem[_44800 + floor32(mem[_44801]) + 164])
                                    call underlyingAddress.mem[_44800 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_44800 + 168 len _47326 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_44800 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_44800 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_44800 + 168] = 32
                                        mem[_44800 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _44800 + 232] = mem[idx + _44800 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _44800 + -mem[64] + 264
                                    mem[64] = _44800 + ceil32(return_data.size) + 165
                                    mem[_44800 + 164] = return_data.size
                                    mem[_44800 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_44800 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44800 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_44800 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44800 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44800 + ceil32(return_data.size) + 233] = mem[idx + _44800 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_44800 + ceil32(return_data.size) + 233]
                                _45116 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _45117 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45117 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45117 + 36 len 28]
                                mem[64] = _45116 + 164
                                mem[_45116 + 100] = 32
                                mem[_45116 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45116 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47800 = mem[_45117]
                                t = _45117 + 32
                                u = mem[64]
                                s = mem[_45117]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45117])] = mem[_45117 + floor32(mem[_45117]) + -(mem[_45117] % 32) + 64 len mem[_45117] % 32] or Mask(8 * -(mem[_45117] % 32) + 32, -(8 * -(mem[_45117] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45117])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47800 + _45116 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _58707 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45116 + 100]
                                    _58709 = mem[_45116 + 100]
                                    idx = 0
                                    while idx < _58709:
                                        mem[idx + _58707 + 68] = mem[idx + _45116 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _58709 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _58709 + _58707 + -mem[64] + 68
                                    mem[floor32(_58709) + _58707 + 68] = mem[floor32(_58709) + _58707 + -(_58709 % 32) + 100 len _58709 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_58709) + _58707 + -mem[64] + 100
                                _57283 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57283] = return_data.size
                                mem[_57283 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57283 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _58711 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45116 + 100]
                                _58713 = mem[_45116 + 100]
                                idx = 0
                                while idx < _58713:
                                    mem[idx + _58711 + 68] = mem[idx + _45116 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58713 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58713 + _58711 + -mem[64] + 68
                                mem[floor32(_58713) + _58711 + 68] = mem[floor32(_58713) + _58711 + -(_58713 % 32) + 100 len _58713 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58713) + _58711 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43244 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43245 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43245 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43245 + 36 len 28]
                                mem[64] = _43244 + 164
                                mem[_43244 + 100] = 32
                                mem[_43244 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43244 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44375 = mem[_43245]
                                t = _43245 + 32
                                u = mem[64]
                                s = mem[_43245]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_43245])] = mem[_43245 + floor32(mem[_43245]) + -(mem[_43245] % 32) + 64 len mem[_43245] % 32] or Mask(8 * -(mem[_43245] % 32) + 32, -(8 * -(mem[_43245] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43245])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _44375 + _43244 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _58715 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43244 + 100]
                                    _58717 = mem[_43244 + 100]
                                    idx = 0
                                    while idx < _58717:
                                        mem[idx + _58715 + 68] = mem[idx + _43244 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _58717 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _58717 + _58715 + -mem[64] + 68
                                    mem[floor32(_58717) + _58715 + 68] = mem[floor32(_58717) + _58715 + -(_58717 % 32) + 100 len _58717 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_58717) + _58715 + -mem[64] + 100
                                _57284 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57284] = return_data.size
                                mem[_57284 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57284 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _58719 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43244 + 100]
                                _58721 = mem[_43244 + 100]
                                idx = 0
                                while idx < _58721:
                                    mem[idx + _58719 + 68] = mem[idx + _43244 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58721 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58721 + _58719 + -mem[64] + 68
                                mem[floor32(_58721) + _58719 + 68] = mem[floor32(_58721) + _58719 + -(_58721 % 32) + 100 len _58721 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58721) + _58719 + -mem[64] + 100
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                _45483 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45484 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45484 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45484 + 36 len 28]
                                mem[64] = _45483 + 164
                                mem[_45483 + 100] = 32
                                mem[_45483 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45483 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48544 = mem[_45484]
                                t = _45484 + 32
                                u = _45483 + 164
                                s = mem[_45484]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45483 + floor32(mem[_45484]) + 164] = mem[_45484 + -(mem[_45484] % 32) + floor32(mem[_45484]) + 64 len mem[_45484] % 32] or Mask(8 * -(mem[_45484] % 32) + 32, -(8 * -(mem[_45484] % 32) + 32) + 256, mem[_45483 + floor32(mem[_45484]) + 164])
                                call underlyingAddress.mem[_45483 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45483 + 168 len _48544 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45483 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45483 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45483 + 168] = 32
                                    mem[_45483 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45483 + 232] = mem[idx + _45483 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45483 + -mem[64] + 264
                                mem[64] = _45483 + ceil32(return_data.size) + 165
                                mem[_45483 + 164] = return_data.size
                                mem[_45483 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45483 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45483 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45483 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45483 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45483 + ceil32(return_data.size) + 233] = mem[idx + _45483 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45483 + ceil32(return_data.size) + 233]
                            _45120 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45121 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45121 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45121 + 36 len 28]
                            mem[64] = _45120 + 164
                            mem[_45120 + 100] = 32
                            mem[_45120 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45120 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47810 = mem[_45121]
                            t = _45121 + 32
                            u = mem[64]
                            s = mem[_45121]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45121])] = mem[_45121 + floor32(mem[_45121]) + -(mem[_45121] % 32) + 64 len mem[_45121] % 32] or Mask(8 * -(mem[_45121] % 32) + 32, -(8 * -(mem[_45121] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45121])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _47810 + _45120 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _58723 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45120 + 100]
                                _58725 = mem[_45120 + 100]
                                idx = 0
                                while idx < _58725:
                                    mem[idx + _58723 + 68] = mem[idx + _45120 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58725 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58725 + _58723 + -mem[64] + 68
                                mem[floor32(_58725) + _58723 + 68] = mem[floor32(_58725) + _58723 + -(_58725 % 32) + 100 len _58725 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58725) + _58723 + -mem[64] + 100
                            _57285 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57285] = return_data.size
                            mem[_57285 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57285 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _58727 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45120 + 100]
                            _58729 = mem[_45120 + 100]
                            idx = 0
                            while idx < _58729:
                                mem[idx + _58727 + 68] = mem[idx + _45120 + 132]
                                idx = idx + 32
                                continue 
                            if not _58729 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58729 + _58727 + -mem[64] + 68
                            mem[floor32(_58729) + _58727 + 68] = mem[floor32(_58729) + _58727 + -(_58729 % 32) + 100 len _58729 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58729) + _58727 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                            if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43235 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _43236 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43236 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43236 + 36 len 28]
                                mem[64] = _43235 + 164
                                mem[_43235 + 100] = 32
                                mem[_43235 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43235 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44370 = mem[_43236]
                                t = _43236 + 32
                                u = _43235 + 164
                                s = mem[_43236]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43235 + floor32(mem[_43236]) + 164] = mem[_43236 + -(mem[_43236] % 32) + floor32(mem[_43236]) + 64 len mem[_43236] % 32] or Mask(8 * -(mem[_43236] % 32) + 32, -(8 * -(mem[_43236] % 32) + 32) + 256, mem[_43235 + floor32(mem[_43236]) + 164])
                                call underlyingAddress.mem[_43235 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43235 + 168 len _44370 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43235 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43235 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43235 + 168] = 32
                                    mem[_43235 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43235 + 232] = mem[idx + _43235 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43235 + -mem[64] + 264
                                mem[64] = _43235 + ceil32(return_data.size) + 165
                                mem[_43235 + 164] = return_data.size
                                mem[_43235 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43235 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43235 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43235 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43235 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43235 + ceil32(return_data.size) + 233] = mem[idx + _43235 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43235 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                _45108 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45109 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45109 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45109 + 36 len 28]
                                mem[64] = _45108 + 164
                                mem[_45108 + 100] = 32
                                mem[_45108 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45108 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47790 = mem[_45109]
                                t = _45109 + 32
                                u = _45108 + 164
                                s = mem[_45109]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45108 + floor32(mem[_45109]) + 164] = mem[_45109 + -(mem[_45109] % 32) + floor32(mem[_45109]) + 64 len mem[_45109] % 32] or Mask(8 * -(mem[_45109] % 32) + 32, -(8 * -(mem[_45109] % 32) + 32) + 256, mem[_45108 + floor32(mem[_45109]) + 164])
                                call underlyingAddress.mem[_45108 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45108 + 168 len _47790 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45108 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45108 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45108 + 168] = 32
                                    mem[_45108 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45108 + 232] = mem[idx + _45108 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45108 + -mem[64] + 264
                                mem[64] = _45108 + ceil32(return_data.size) + 165
                                mem[_45108 + 164] = return_data.size
                                mem[_45108 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45108 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45108 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45108 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45108 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45108 + ceil32(return_data.size) + 233] = mem[idx + _45108 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45108 + ceil32(return_data.size) + 233]
                            _45474 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _45475 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45475 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45475 + 36 len 28]
                            mem[64] = _45474 + 164
                            mem[_45474 + 100] = 32
                            mem[_45474 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45474 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48520 = mem[_45475]
                            t = _45475 + 32
                            u = _45474 + 164
                            s = mem[_45475]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45474 + floor32(mem[_45475]) + 164] = mem[_45475 + -(mem[_45475] % 32) + floor32(mem[_45475]) + 64 len mem[_45475] % 32] or Mask(8 * -(mem[_45475] % 32) + 32, -(8 * -(mem[_45475] % 32) + 32) + 256, mem[_45474 + floor32(mem[_45475]) + 164])
                            call underlyingAddress.mem[_45474 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45474 + 168 len _48520 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45474 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45474 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45474 + 168] = 32
                                mem[_45474 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45474 + 232] = mem[idx + _45474 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45474 + -mem[64] + 264
                            mem[64] = _45474 + ceil32(return_data.size) + 165
                            mem[_45474 + 164] = return_data.size
                            mem[_45474 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45474 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45474 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45474 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45474 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45474 + ceil32(return_data.size) + 233] = mem[idx + _45474 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45474 + ceil32(return_data.size) + 233]
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43501 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43502 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43502 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43502 + 36 len 28]
                            mem[64] = _43501 + 164
                            mem[_43501 + 100] = 32
                            mem[_43501 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43501 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44580 = mem[_43502]
                            t = _43502 + 32
                            u = _43501 + 164
                            s = mem[_43502]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43501 + floor32(mem[_43502]) + 164] = mem[_43502 + -(mem[_43502] % 32) + floor32(mem[_43502]) + 64 len mem[_43502] % 32] or Mask(8 * -(mem[_43502] % 32) + 32, -(8 * -(mem[_43502] % 32) + 32) + 256, mem[_43501 + floor32(mem[_43502]) + 164])
                            call underlyingAddress.mem[_43501 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43501 + 168 len _44580 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43501 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43501 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43501 + 168] = 32
                                mem[_43501 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43501 + 232] = mem[idx + _43501 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43501 + -mem[64] + 264
                            mem[64] = _43501 + ceil32(return_data.size) + 165
                            mem[_43501 + 164] = return_data.size
                            mem[_43501 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43501 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43501 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43501 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43501 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43501 + ceil32(return_data.size) + 233] = mem[idx + _43501 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43501 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                            _45757 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45758 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45758 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45758 + 36 len 28]
                            mem[64] = _45757 + 164
                            mem[_45757 + 100] = 32
                            mem[_45757 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45757 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49276 = mem[_45758]
                            t = _45758 + 32
                            u = _45757 + 164
                            s = mem[_45758]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45757 + floor32(mem[_45758]) + 164] = mem[_45758 + -(mem[_45758] % 32) + floor32(mem[_45758]) + 64 len mem[_45758] % 32] or Mask(8 * -(mem[_45758] % 32) + 32, -(8 * -(mem[_45758] % 32) + 32) + 256, mem[_45757 + floor32(mem[_45758]) + 164])
                            call underlyingAddress.mem[_45757 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45757 + 168 len _49276 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45757 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45757 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45757 + 168] = 32
                                mem[_45757 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45757 + 232] = mem[idx + _45757 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45757 + -mem[64] + 264
                            mem[64] = _45757 + ceil32(return_data.size) + 165
                            mem[_45757 + 164] = return_data.size
                            mem[_45757 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45757 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45757 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45757 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45757 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45757 + ceil32(return_data.size) + 233] = mem[idx + _45757 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45757 + ceil32(return_data.size) + 233]
                        _45478 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45479 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45479 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45479 + 36 len 28]
                        mem[64] = _45478 + 164
                        mem[_45478 + 100] = 32
                        mem[_45478 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45478 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48530 = mem[_45479]
                        t = _45479 + 32
                        u = mem[64]
                        s = mem[_45479]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45479])] = mem[_45479 + floor32(mem[_45479]) + -(mem[_45479] % 32) + 64 len mem[_45479] % 32] or Mask(8 * -(mem[_45479] % 32) + 32, -(8 * -(mem[_45479] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45479])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48530 + _45478 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58675 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45478 + 100]
                            _58677 = mem[_45478 + 100]
                            idx = 0
                            while idx < _58677:
                                mem[idx + _58675 + 68] = mem[idx + _45478 + 132]
                                idx = idx + 32
                                continue 
                            if not _58677 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58677 + _58675 + -mem[64] + 68
                            mem[floor32(_58677) + _58675 + 68] = mem[floor32(_58677) + _58675 + -(_58677 % 32) + 100 len _58677 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58677) + _58675 + -mem[64] + 100
                        _57279 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57279] = return_data.size
                        mem[_57279 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57279 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58679 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45478 + 100]
                        _58681 = mem[_45478 + 100]
                        idx = 0
                        while idx < _58681:
                            mem[idx + _58679 + 68] = mem[idx + _45478 + 132]
                            idx = idx + 32
                            continue 
                        if not _58681 % 32:
                            revert with memory
                              from mem[64]
                               len _58681 + _58679 + -mem[64] + 68
                        mem[floor32(_58681) + _58679 + 68] = mem[floor32(_58681) + _58679 + -(_58681 % 32) + 100 len _58681 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58681) + _58679 + -mem[64] + 100
                else:
                    require return_data.size >= 32
                    if not mem[292]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 371 len 22]
                    mem[ceil32(return_data.size) + 265] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _42980 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _42981 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_42981 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_42981 + 36 len 28]
                                    mem[64] = _42980 + 164
                                    mem[_42980 + 100] = 32
                                    mem[_42980 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_42980 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44199 = mem[_42981]
                                    t = _42981 + 32
                                    u = _42980 + 164
                                    s = mem[_42981]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_42980 + floor32(mem[_42981]) + 164] = mem[_42981 + -(mem[_42981] % 32) + floor32(mem[_42981]) + 64 len mem[_42981] % 32] or Mask(8 * -(mem[_42981] % 32) + 32, -(8 * -(mem[_42981] % 32) + 32) + 256, mem[_42980 + floor32(mem[_42981]) + 164])
                                    call underlyingAddress.mem[_42980 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_42980 + 168 len _44199 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_42980 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_42980 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_42980 + 168] = 32
                                        mem[_42980 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _42980 + 232] = mem[idx + _42980 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _42980 + -mem[64] + 264
                                    mem[64] = _42980 + ceil32(return_data.size) + 165
                                    mem[_42980 + 164] = return_data.size
                                    mem[_42980 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_42980 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_42980 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_42980 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_42980 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _42980 + ceil32(return_data.size) + 233] = mem[idx + _42980 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_42980 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                    _44812 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _44813 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_44813 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44813 + 36 len 28]
                                    mem[64] = _44812 + 164
                                    mem[_44812 + 100] = 32
                                    mem[_44812 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44812 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _47342 = mem[_44813]
                                    t = _44813 + 32
                                    u = _44812 + 164
                                    s = mem[_44813]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_44812 + floor32(mem[_44813]) + 164] = mem[_44813 + -(mem[_44813] % 32) + floor32(mem[_44813]) + 64 len mem[_44813] % 32] or Mask(8 * -(mem[_44813] % 32) + 32, -(8 * -(mem[_44813] % 32) + 32) + 256, mem[_44812 + floor32(mem[_44813]) + 164])
                                    call underlyingAddress.mem[_44812 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_44812 + 168 len _47342 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_44812 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_44812 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_44812 + 168] = 32
                                        mem[_44812 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _44812 + 232] = mem[idx + _44812 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _44812 + -mem[64] + 264
                                    mem[64] = _44812 + ceil32(return_data.size) + 165
                                    mem[_44812 + 164] = return_data.size
                                    mem[_44812 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_44812 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44812 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_44812 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44812 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44812 + ceil32(return_data.size) + 233] = mem[idx + _44812 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_44812 + ceil32(return_data.size) + 233]
                                _45132 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _45133 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45133 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45133 + 36 len 28]
                                mem[64] = _45132 + 164
                                mem[_45132 + 100] = 32
                                mem[_45132 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45132 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47830 = mem[_45133]
                                t = _45133 + 32
                                u = mem[64]
                                s = mem[_45133]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45133])] = mem[_45133 + floor32(mem[_45133]) + -(mem[_45133] % 32) + 64 len mem[_45133] % 32] or Mask(8 * -(mem[_45133] % 32) + 32, -(8 * -(mem[_45133] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45133])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47830 + _45132 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _58803 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45132 + 100]
                                    _58805 = mem[_45132 + 100]
                                    idx = 0
                                    while idx < _58805:
                                        mem[idx + _58803 + 68] = mem[idx + _45132 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _58805 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _58805 + _58803 + -mem[64] + 68
                                    mem[floor32(_58805) + _58803 + 68] = mem[floor32(_58805) + _58803 + -(_58805 % 32) + 100 len _58805 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_58805) + _58803 + -mem[64] + 100
                                _57295 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57295] = return_data.size
                                mem[_57295 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57295 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _58807 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45132 + 100]
                                _58809 = mem[_45132 + 100]
                                idx = 0
                                while idx < _58809:
                                    mem[idx + _58807 + 68] = mem[idx + _45132 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58809 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58809 + _58807 + -mem[64] + 68
                                mem[floor32(_58809) + _58807 + 68] = mem[floor32(_58809) + _58807 + -(_58809 % 32) + 100 len _58809 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58809) + _58807 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43256 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43257 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43257 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43257 + 36 len 28]
                                mem[64] = _43256 + 164
                                mem[_43256 + 100] = 32
                                mem[_43256 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43256 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44384 = mem[_43257]
                                t = _43257 + 32
                                u = _43256 + 164
                                s = mem[_43257]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43256 + floor32(mem[_43257]) + 164] = mem[_43257 + -(mem[_43257] % 32) + floor32(mem[_43257]) + 64 len mem[_43257] % 32] or Mask(8 * -(mem[_43257] % 32) + 32, -(8 * -(mem[_43257] % 32) + 32) + 256, mem[_43256 + floor32(mem[_43257]) + 164])
                                call underlyingAddress.mem[_43256 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43256 + 168 len _44384 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43256 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43256 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43256 + 168] = 32
                                    mem[_43256 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43256 + 232] = mem[idx + _43256 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43256 + -mem[64] + 264
                                mem[64] = _43256 + ceil32(return_data.size) + 165
                                mem[_43256 + 164] = return_data.size
                                mem[_43256 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43256 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43256 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43256 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43256 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43256 + ceil32(return_data.size) + 233] = mem[idx + _43256 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43256 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45136 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45137 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45137 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45137 + 36 len 28]
                                mem[64] = _45136 + 164
                                mem[_45136 + 100] = 32
                                mem[_45136 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45136 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47840 = mem[_45137]
                                t = _45137 + 32
                                u = mem[64]
                                s = mem[_45137]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45137])] = mem[_45137 + floor32(mem[_45137]) + -(mem[_45137] % 32) + 64 len mem[_45137] % 32] or Mask(8 * -(mem[_45137] % 32) + 32, -(8 * -(mem[_45137] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45137])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47840 + _45136 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _58819 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45136 + 100]
                                    _58821 = mem[_45136 + 100]
                                    idx = 0
                                    while idx < _58821:
                                        mem[idx + _58819 + 68] = mem[idx + _45136 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _58821 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _58821 + _58819 + -mem[64] + 68
                                    mem[floor32(_58821) + _58819 + 68] = mem[floor32(_58821) + _58819 + -(_58821 % 32) + 100 len _58821 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_58821) + _58819 + -mem[64] + 100
                                _57297 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57297] = return_data.size
                                mem[_57297 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57297 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _58823 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45136 + 100]
                                _58825 = mem[_45136 + 100]
                                idx = 0
                                while idx < _58825:
                                    mem[idx + _58823 + 68] = mem[idx + _45136 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58825 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58825 + _58823 + -mem[64] + 68
                                mem[floor32(_58825) + _58823 + 68] = mem[floor32(_58825) + _58823 + -(_58825 % 32) + 100 len _58825 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58825) + _58823 + -mem[64] + 100
                            _45496 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45497 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45497 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45497 + 36 len 28]
                            mem[64] = _45496 + 164
                            mem[_45496 + 100] = 32
                            mem[_45496 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45496 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48576 = mem[_45497]
                            t = _45497 + 32
                            u = mem[64]
                            s = mem[_45497]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45497])] = mem[_45497 + floor32(mem[_45497]) + -(mem[_45497] % 32) + 64 len mem[_45497] % 32] or Mask(8 * -(mem[_45497] % 32) + 32, -(8 * -(mem[_45497] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45497])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48576 + _45496 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _58827 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45496 + 100]
                                _58829 = mem[_45496 + 100]
                                idx = 0
                                while idx < _58829:
                                    mem[idx + _58827 + 68] = mem[idx + _45496 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58829 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58829 + _58827 + -mem[64] + 68
                                mem[floor32(_58829) + _58827 + 68] = mem[floor32(_58829) + _58827 + -(_58829 % 32) + 100 len _58829 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58829) + _58827 + -mem[64] + 100
                            _57298 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57298] = return_data.size
                            mem[_57298 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57298 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _58831 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45496 + 100]
                            _58833 = mem[_45496 + 100]
                            idx = 0
                            while idx < _58833:
                                mem[idx + _58831 + 68] = mem[idx + _45496 + 132]
                                idx = idx + 32
                                continue 
                            if not _58833 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58833 + _58831 + -mem[64] + 68
                            mem[floor32(_58833) + _58831 + 68] = mem[floor32(_58833) + _58831 + -(_58833 % 32) + 100 len _58833 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58833) + _58831 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                            if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43247 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _43248 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43248 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43248 + 36 len 28]
                                mem[64] = _43247 + 164
                                mem[_43247 + 100] = 32
                                mem[_43247 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43247 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44379 = mem[_43248]
                                t = _43248 + 32
                                u = _43247 + 164
                                s = mem[_43248]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43247 + floor32(mem[_43248]) + 164] = mem[_43248 + -(mem[_43248] % 32) + floor32(mem[_43248]) + 64 len mem[_43248] % 32] or Mask(8 * -(mem[_43248] % 32) + 32, -(8 * -(mem[_43248] % 32) + 32) + 256, mem[_43247 + floor32(mem[_43248]) + 164])
                                call underlyingAddress.mem[_43247 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43247 + 168 len _44379 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43247 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43247 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43247 + 168] = 32
                                    mem[_43247 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43247 + 232] = mem[idx + _43247 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43247 + -mem[64] + 264
                                mem[64] = _43247 + ceil32(return_data.size) + 165
                                mem[_43247 + 164] = return_data.size
                                mem[_43247 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43247 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43247 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43247 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43247 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43247 + ceil32(return_data.size) + 233] = mem[idx + _43247 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43247 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                _45487 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _45488 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45488 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45488 + 36 len 28]
                                mem[64] = _45487 + 164
                                mem[_45487 + 100] = 32
                                mem[_45487 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45487 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48552 = mem[_45488]
                                t = _45488 + 32
                                u = _45487 + 164
                                s = mem[_45488]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45487 + floor32(mem[_45488]) + 164] = mem[_45488 + -(mem[_45488] % 32) + floor32(mem[_45488]) + 64 len mem[_45488] % 32] or Mask(8 * -(mem[_45488] % 32) + 32, -(8 * -(mem[_45488] % 32) + 32) + 256, mem[_45487 + floor32(mem[_45488]) + 164])
                                call underlyingAddress.mem[_45487 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45487 + 168 len _48552 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45487 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45487 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45487 + 168] = 32
                                    mem[_45487 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45487 + 232] = mem[idx + _45487 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45487 + -mem[64] + 264
                                mem[64] = _45487 + ceil32(return_data.size) + 165
                                mem[_45487 + 164] = return_data.size
                                mem[_45487 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45487 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45487 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45487 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45487 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45487 + ceil32(return_data.size) + 233] = mem[idx + _45487 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45487 + ceil32(return_data.size) + 233]
                            _45124 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45125 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45125 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45125 + 36 len 28]
                            mem[64] = _45124 + 164
                            mem[_45124 + 100] = 32
                            mem[_45124 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45124 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47820 = mem[_45125]
                            t = _45125 + 32
                            u = mem[64]
                            s = mem[_45125]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45125])] = mem[_45125 + floor32(mem[_45125]) + -(mem[_45125] % 32) + 64 len mem[_45125] % 32] or Mask(8 * -(mem[_45125] % 32) + 32, -(8 * -(mem[_45125] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45125])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _47820 + _45124 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _58747 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45124 + 100]
                                _58749 = mem[_45124 + 100]
                                idx = 0
                                while idx < _58749:
                                    mem[idx + _58747 + 68] = mem[idx + _45124 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58749 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58749 + _58747 + -mem[64] + 68
                                mem[floor32(_58749) + _58747 + 68] = mem[floor32(_58749) + _58747 + -(_58749 % 32) + 100 len _58749 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58749) + _58747 + -mem[64] + 100
                            _57288 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57288] = return_data.size
                            mem[_57288 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57288 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _58751 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45124 + 100]
                            _58753 = mem[_45124 + 100]
                            idx = 0
                            while idx < _58753:
                                mem[idx + _58751 + 68] = mem[idx + _45124 + 132]
                                idx = idx + 32
                                continue 
                            if not _58753 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58753 + _58751 + -mem[64] + 68
                            mem[floor32(_58753) + _58751 + 68] = mem[floor32(_58753) + _58751 + -(_58753 % 32) + 100 len _58753 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58753) + _58751 + -mem[64] + 100
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43509 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43510 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43510 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43510 + 36 len 28]
                            mem[64] = _43509 + 164
                            mem[_43509 + 100] = 32
                            mem[_43509 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43509 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44588 = mem[_43510]
                            t = _43510 + 32
                            u = _43509 + 164
                            s = mem[_43510]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43509 + floor32(mem[_43510]) + 164] = mem[_43510 + -(mem[_43510] % 32) + floor32(mem[_43510]) + 64 len mem[_43510] % 32] or Mask(8 * -(mem[_43510] % 32) + 32, -(8 * -(mem[_43510] % 32) + 32) + 256, mem[_43509 + floor32(mem[_43510]) + 164])
                            call underlyingAddress.mem[_43509 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43509 + 168 len _44588 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43509 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43509 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43509 + 168] = 32
                                mem[_43509 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43509 + 232] = mem[idx + _43509 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43509 + -mem[64] + 264
                            mem[64] = _43509 + ceil32(return_data.size) + 165
                            mem[_43509 + 164] = return_data.size
                            mem[_43509 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43509 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43509 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43509 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43509 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43509 + ceil32(return_data.size) + 233] = mem[idx + _43509 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43509 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45491 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45492 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45492 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45492 + 36 len 28]
                            mem[64] = _45491 + 164
                            mem[_45491 + 100] = 32
                            mem[_45491 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45491 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48562 = mem[_45492]
                            t = _45492 + 32
                            u = mem[64]
                            s = mem[_45492]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45492])] = mem[_45492 + floor32(mem[_45492]) + -(mem[_45492] % 32) + 64 len mem[_45492] % 32] or Mask(8 * -(mem[_45492] % 32) + 32, -(8 * -(mem[_45492] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45492])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48562 + _45491 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _58771 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45491 + 100]
                                _58773 = mem[_45491 + 100]
                                idx = 0
                                while idx < _58773:
                                    mem[idx + _58771 + 68] = mem[idx + _45491 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58773 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58773 + _58771 + -mem[64] + 68
                                mem[floor32(_58773) + _58771 + 68] = mem[floor32(_58773) + _58771 + -(_58773 % 32) + 100 len _58773 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58773) + _58771 + -mem[64] + 100
                            _57291 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57291] = return_data.size
                            mem[_57291 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57291 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _58775 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45491 + 100]
                            _58777 = mem[_45491 + 100]
                            idx = 0
                            while idx < _58777:
                                mem[idx + _58775 + 68] = mem[idx + _45491 + 132]
                                idx = idx + 32
                                continue 
                            if not _58777 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58777 + _58775 + -mem[64] + 68
                            mem[floor32(_58777) + _58775 + 68] = mem[floor32(_58777) + _58775 + -(_58777 % 32) + 100 len _58777 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58777) + _58775 + -mem[64] + 100
                        _45765 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45766 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45766 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45766 + 36 len 28]
                        mem[64] = _45765 + 164
                        mem[_45765 + 100] = 32
                        mem[_45765 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45765 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _49305 = mem[_45766]
                        t = _45766 + 32
                        u = mem[64]
                        s = mem[_45766]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45766])] = mem[_45766 + floor32(mem[_45766]) + -(mem[_45766] % 32) + 64 len mem[_45766] % 32] or Mask(8 * -(mem[_45766] % 32) + 32, -(8 * -(mem[_45766] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45766])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _49305 + _45765 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58779 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45765 + 100]
                            _58781 = mem[_45765 + 100]
                            idx = 0
                            while idx < _58781:
                                mem[idx + _58779 + 68] = mem[idx + _45765 + 132]
                                idx = idx + 32
                                continue 
                            if not _58781 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58781 + _58779 + -mem[64] + 68
                            mem[floor32(_58781) + _58779 + 68] = mem[floor32(_58781) + _58779 + -(_58781 % 32) + 100 len _58781 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58781) + _58779 + -mem[64] + 100
                        _57292 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57292] = return_data.size
                        mem[_57292 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57292 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58783 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45765 + 100]
                        _58785 = mem[_45765 + 100]
                        idx = 0
                        while idx < _58785:
                            mem[idx + _58783 + 68] = mem[idx + _45765 + 132]
                            idx = idx + 32
                            continue 
                        if not _58785 % 32:
                            revert with memory
                              from mem[64]
                               len _58785 + _58783 + -mem[64] + 68
                        mem[floor32(_58785) + _58783 + 68] = mem[floor32(_58785) + _58783 + -(_58785 % 32) + 100 len _58785 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58785) + _58783 + -mem[64] + 100
        require ext_code.size(underlyingAddress)
        staticcall underlyingAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < arg1:
            revert with 0, 32, 41, 0xfe73706c697474657220646f6573206e6f7420686176652073756666696369656e742062616c616e63, mem[205 len 23]
        mem[132] = address(vaultAddress)
        mem[164] = arg1
        mem[96] = 68
        mem[128 len 4] = unknown_0xa9059cbb(?????)
        mem[64] = 260
        mem[196] = 32
        mem[228] = 'SafeERC20: low-level call failed'
        if eth.balance(this.address) < 0:
            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
        if not ext_code.size(underlyingAddress):
            revert with 0, 'Address: call to non-contract'
        mem[260 len 64] = 0, address(vaultAddress), Mask(224, 32, arg1) >> 32
        mem[352 len 4] = 0
        call underlyingAddress with:
           funct uint32(stor2)
             gas gas_remaining wei
            args arg1, 0, mem[324 len 4]
        if not return_data.size:
            if not ext_call.success:
                revert with unknown_0xa9059cbb(?????), address(vaultAddress), arg1
            if not uint32(this.address), Mask(224, 0, stor2):
                revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
            mem[264] = this.address
            require ext_code.size(underlyingAddress)
            staticcall underlyingAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[260] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            idx = 0
            while idx < activeStrategies.length:
                require idx < investmentRatioNumerators.length
                mem[0] = 8
                if not ext_call.return_data[0]:
                    if investmentRatioDenominator <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require investmentRatioDenominator
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                        if not 0 / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _42914 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = 0 / investmentRatioDenominator
                            _42915 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_42915 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_42915 + 36 len 28]
                            mem[64] = _42914 + 164
                            mem[_42914 + 100] = 32
                            mem[_42914 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_42914 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44157 = mem[_42915]
                            t = _42915 + 32
                            u = mem[64]
                            s = mem[_42915]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_42915])] = mem[_42915 + floor32(mem[_42915]) + -(mem[_42915] % 32) + 64 len mem[_42915] % 32] or Mask(8 * -(mem[_42915] % 32) + 32, -(8 * -(mem[_42915] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_42915])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _44157 + _42914 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _58211 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_42914 + 100]
                                _58213 = mem[_42914 + 100]
                                idx = 0
                                while idx < _58213:
                                    mem[idx + _58211 + 68] = mem[idx + _42914 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58213 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58213 + _58211 + -mem[64] + 68
                                mem[floor32(_58213) + _58211 + 68] = mem[floor32(_58213) + _58211 + -(_58213 % 32) + 100 len _58213 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58213) + _58211 + -mem[64] + 100
                            _57221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57221] = return_data.size
                            mem[_57221 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57221 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _58215 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_42914 + 100]
                            _58217 = mem[_42914 + 100]
                            idx = 0
                            while idx < _58217:
                                mem[idx + _58215 + 68] = mem[idx + _42914 + 132]
                                idx = idx + 32
                                continue 
                            if not _58217 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58217 + _58215 + -mem[64] + 68
                            mem[floor32(_58217) + _58215 + 68] = mem[floor32(_58217) + _58215 + -(_58217 % 32) + 100 len _58217 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58217) + _58215 + -mem[64] + 100
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] >= 0 / investmentRatioDenominator:
                            _45036 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = 0 / investmentRatioDenominator
                            _45037 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45037 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45037 + 36 len 28]
                            mem[64] = _45036 + 164
                            mem[_45036 + 100] = 32
                            mem[_45036 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45036 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47650 = mem[_45037]
                            t = _45037 + 32
                            u = _45036 + 164
                            s = mem[_45037]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45036 + floor32(mem[_45037]) + 164] = mem[_45037 + -(mem[_45037] % 32) + floor32(mem[_45037]) + 64 len mem[_45037] % 32] or Mask(8 * -(mem[_45037] % 32) + 32, -(8 * -(mem[_45037] % 32) + 32) + 256, mem[_45036 + floor32(mem[_45037]) + 164])
                            call underlyingAddress.mem[_45036 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45036 + 168 len _47650 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45036 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45036 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45036 + 168] = 32
                                mem[_45036 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45036 + 232] = mem[idx + _45036 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45036 + -mem[64] + 264
                            mem[64] = _45036 + ceil32(return_data.size) + 165
                            mem[_45036 + 164] = return_data.size
                            mem[_45036 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45036 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45036 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45036 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45036 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45036 + ceil32(return_data.size) + 233] = mem[idx + _45036 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45036 + ceil32(return_data.size) + 233]
                        _44740 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _44741 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_44741 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44741 + 36 len 28]
                        mem[64] = _44740 + 164
                        mem[_44740 + 100] = 32
                        mem[_44740 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44740 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _47246 = mem[_44741]
                        t = _44741 + 32
                        u = mem[64]
                        s = mem[_44741]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_44741])] = mem[_44741 + floor32(mem[_44741]) + -(mem[_44741] % 32) + 64 len mem[_44741] % 32] or Mask(8 * -(mem[_44741] % 32) + 32, -(8 * -(mem[_44741] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44741])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _47246 + _44740 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58219 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_44740 + 100]
                            _58221 = mem[_44740 + 100]
                            idx = 0
                            while idx < _58221:
                                mem[idx + _58219 + 68] = mem[idx + _44740 + 132]
                                idx = idx + 32
                                continue 
                            if not _58221 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58221 + _58219 + -mem[64] + 68
                            mem[floor32(_58221) + _58219 + 68] = mem[floor32(_58221) + _58219 + -(_58221 % 32) + 100 len _58221 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58221) + _58219 + -mem[64] + 100
                        _57222 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57222] = return_data.size
                        mem[_57222 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57222 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58223 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_44740 + 100]
                        _58225 = mem[_44740 + 100]
                        idx = 0
                        while idx < _58225:
                            mem[idx + _58223 + 68] = mem[idx + _44740 + 132]
                            idx = idx + 32
                            continue 
                        if not _58225 % 32:
                            revert with memory
                              from mem[64]
                               len _58225 + _58223 + -mem[64] + 68
                        mem[floor32(_58225) + _58223 + 68] = mem[floor32(_58225) + _58223 + -(_58225 % 32) + 100 len _58225 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58225) + _58223 + -mem[64] + 100
                    if not ext_call.return_data[0]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    if caps[idx] <= 0:
                        mem[0] = 6
                        _43184 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _43185 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_43185 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43185 + 36 len 28]
                        mem[64] = _43184 + 164
                        mem[_43184 + 100] = 32
                        mem[_43184 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43184 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _44330 = mem[_43185]
                        t = _43185 + 32
                        u = _43184 + 164
                        s = mem[_43185]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_43184 + floor32(mem[_43185]) + 164] = mem[_43185 + -(mem[_43185] % 32) + floor32(mem[_43185]) + 64 len mem[_43185] % 32] or Mask(8 * -(mem[_43185] % 32) + 32, -(8 * -(mem[_43185] % 32) + 32) + 256, mem[_43184 + floor32(mem[_43185]) + 164])
                        call underlyingAddress.mem[_43184 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_43184 + 168 len _44330 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43184 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_43184 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43184 + 168] = 32
                            mem[_43184 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43184 + 232] = mem[idx + _43184 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _43184 + -mem[64] + 264
                        mem[64] = _43184 + ceil32(return_data.size) + 165
                        mem[_43184 + 164] = return_data.size
                        mem[_43184 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_43184 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_43184 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_43184 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_43184 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _43184 + ceil32(return_data.size) + 233] = mem[idx + _43184 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_43184 + ceil32(return_data.size) + 233]
                    require ext_code.size(address(activeStrategies[idx]))
                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require idx < caps.length
                    mem[0] = 7
                    if ext_call.return_data[0] >= caps[idx]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    mem[0] = 6
                    if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                        _45040 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45041 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45041 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45041 + 36 len 28]
                        mem[64] = _45040 + 164
                        mem[_45040 + 100] = 32
                        mem[_45040 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45040 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _47660 = mem[_45041]
                        t = _45041 + 32
                        u = _45040 + 164
                        s = mem[_45041]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45040 + floor32(mem[_45041]) + 164] = mem[_45041 + -(mem[_45041] % 32) + floor32(mem[_45041]) + 64 len mem[_45041] % 32] or Mask(8 * -(mem[_45041] % 32) + 32, -(8 * -(mem[_45041] % 32) + 32) + 256, mem[_45040 + floor32(mem[_45041]) + 164])
                        call underlyingAddress.mem[_45040 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45040 + 168 len _47660 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45040 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45040 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45040 + 168] = 32
                            mem[_45040 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45040 + 232] = mem[idx + _45040 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45040 + -mem[64] + 264
                        mem[64] = _45040 + ceil32(return_data.size) + 165
                        mem[_45040 + 164] = return_data.size
                        mem[_45040 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45040 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45040 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45040 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45040 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45040 + ceil32(return_data.size) + 233] = mem[idx + _45040 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45040 + ceil32(return_data.size) + 233]
                    _45418 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    _45419 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_45419 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45419 + 36 len 28]
                    mem[64] = _45418 + 164
                    mem[_45418 + 100] = 32
                    mem[_45418 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45418 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _48384 = mem[_45419]
                    t = _45419 + 32
                    u = mem[64]
                    s = mem[_45419]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[mem[64] + floor32(mem[_45419])] = mem[_45419 + floor32(mem[_45419]) + -(mem[_45419] % 32) + 64 len mem[_45419] % 32] or Mask(8 * -(mem[_45419] % 32) + 32, -(8 * -(mem[_45419] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45419])])
                    call underlyingAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _48384 + _45418 + -mem[64] + 160]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        _58251 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45418 + 100]
                        _58253 = mem[_45418 + 100]
                        idx = 0
                        while idx < _58253:
                            mem[idx + _58251 + 68] = mem[idx + _45418 + 132]
                            idx = idx + 32
                            continue 
                        if not _58253 % 32:
                            revert with memory
                              from mem[64]
                               len _58253 + _58251 + -mem[64] + 68
                        mem[floor32(_58253) + _58251 + 68] = mem[floor32(_58253) + _58251 + -(_58253 % 32) + 100 len _58253 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58253) + _58251 + -mem[64] + 100
                    _57226 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_57226] = return_data.size
                    mem[_57226 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_57226 + 32]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    _58255 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_45418 + 100]
                    _58257 = mem[_45418 + 100]
                    idx = 0
                    while idx < _58257:
                        mem[idx + _58255 + 68] = mem[idx + _45418 + 132]
                        idx = idx + 32
                        continue 
                    if not _58257 % 32:
                        revert with memory
                          from mem[64]
                           len _58257 + _58255 + -mem[64] + 68
                    mem[floor32(_58257) + _58255 + 68] = mem[floor32(_58257) + _58255 + -(_58257 % 32) + 100 len _58257 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_58257) + _58255 + -mem[64] + 100
                if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                    revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if investmentRatioDenominator <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require investmentRatioDenominator
                mem[mem[64] + 4] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                    if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    if caps[idx] <= 0:
                        mem[0] = 6
                        _43175 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                        _43176 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_43176 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43176 + 36 len 28]
                        mem[64] = _43175 + 164
                        mem[_43175 + 100] = 32
                        mem[_43175 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43175 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _44325 = mem[_43176]
                        t = _43176 + 32
                        u = _43175 + 164
                        s = mem[_43176]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_43175 + floor32(mem[_43176]) + 164] = mem[_43176 + -(mem[_43176] % 32) + floor32(mem[_43176]) + 64 len mem[_43176] % 32] or Mask(8 * -(mem[_43176] % 32) + 32, -(8 * -(mem[_43176] % 32) + 32) + 256, mem[_43175 + floor32(mem[_43176]) + 164])
                        call underlyingAddress.mem[_43175 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_43175 + 168 len _44325 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43175 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_43175 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43175 + 168] = 32
                            mem[_43175 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43175 + 232] = mem[idx + _43175 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _43175 + -mem[64] + 264
                        mem[64] = _43175 + ceil32(return_data.size) + 165
                        mem[_43175 + 164] = return_data.size
                        mem[_43175 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_43175 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_43175 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_43175 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_43175 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _43175 + ceil32(return_data.size) + 233] = mem[idx + _43175 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_43175 + ceil32(return_data.size) + 233]
                    require ext_code.size(address(activeStrategies[idx]))
                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require idx < caps.length
                    mem[0] = 7
                    if ext_call.return_data[0] >= caps[idx]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    mem[0] = 6
                    if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                        _45028 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45029 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45029 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45029 + 36 len 28]
                        mem[64] = _45028 + 164
                        mem[_45028 + 100] = 32
                        mem[_45028 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45028 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _47640 = mem[_45029]
                        t = _45029 + 32
                        u = _45028 + 164
                        s = mem[_45029]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45028 + floor32(mem[_45029]) + 164] = mem[_45029 + -(mem[_45029] % 32) + floor32(mem[_45029]) + 64 len mem[_45029] % 32] or Mask(8 * -(mem[_45029] % 32) + 32, -(8 * -(mem[_45029] % 32) + 32) + 256, mem[_45028 + floor32(mem[_45029]) + 164])
                        call underlyingAddress.mem[_45028 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45028 + 168 len _47640 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45028 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45028 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45028 + 168] = 32
                            mem[_45028 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45028 + 232] = mem[idx + _45028 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45028 + -mem[64] + 264
                        mem[64] = _45028 + ceil32(return_data.size) + 165
                        mem[_45028 + 164] = return_data.size
                        mem[_45028 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45028 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45028 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45028 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45028 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45028 + ceil32(return_data.size) + 233] = mem[idx + _45028 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45028 + ceil32(return_data.size) + 233]
                    _45409 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                    _45410 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_45410 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45410 + 36 len 28]
                    mem[64] = _45409 + 164
                    mem[_45409 + 100] = 32
                    mem[_45409 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45409 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _48360 = mem[_45410]
                    t = _45410 + 32
                    u = _45409 + 164
                    s = mem[_45410]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[_45409 + floor32(mem[_45410]) + 164] = mem[_45410 + -(mem[_45410] % 32) + floor32(mem[_45410]) + 64 len mem[_45410] % 32] or Mask(8 * -(mem[_45410] % 32) + 32, -(8 * -(mem[_45410] % 32) + 32) + 256, mem[_45409 + floor32(mem[_45410]) + 164])
                    call underlyingAddress.mem[_45409 + 164 len 4] with:
                         gas gas_remaining wei
                        args mem[_45409 + 168 len _48360 - 4]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45409 + 274 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        mem[_45409 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45409 + 168] = 32
                        mem[_45409 + 200] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45409 + 232] = mem[idx + _45409 + 132]
                            idx = idx + 32
                            continue 
                        revert with memory
                          from mem[64]
                           len _45409 + -mem[64] + 264
                    mem[64] = _45409 + ceil32(return_data.size) + 165
                    mem[_45409 + 164] = return_data.size
                    mem[_45409 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_45409 + 196]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_45409 + ceil32(return_data.size) + 275 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_45409 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[_45409 + ceil32(return_data.size) + 169] = 32
                    idx = 0
                    while idx < 32:
                        mem[idx + _45409 + ceil32(return_data.size) + 233] = mem[idx + _45409 + 132]
                        idx = idx + 32
                        continue 
                    revert with 0, 32, 32, mem[_45409 + ceil32(return_data.size) + 233]
                if not ext_call.return_data[0]:
                    idx = idx + 1
                    continue 
                require idx < caps.length
                require idx < activeStrategies.length
                if caps[idx] <= 0:
                    mem[0] = 6
                    _43461 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    _43462 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_43462 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43462 + 36 len 28]
                    mem[64] = _43461 + 164
                    mem[_43461 + 100] = 32
                    mem[_43461 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43461 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _44540 = mem[_43462]
                    t = _43462 + 32
                    u = _43461 + 164
                    s = mem[_43462]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[_43461 + floor32(mem[_43462]) + 164] = mem[_43462 + -(mem[_43462] % 32) + floor32(mem[_43462]) + 64 len mem[_43462] % 32] or Mask(8 * -(mem[_43462] % 32) + 32, -(8 * -(mem[_43462] % 32) + 32) + 256, mem[_43461 + floor32(mem[_43462]) + 164])
                    call underlyingAddress.mem[_43461 + 164 len 4] with:
                         gas gas_remaining wei
                        args mem[_43461 + 168 len _44540 - 4]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_43461 + 274 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        mem[_43461 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_43461 + 168] = 32
                        mem[_43461 + 200] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _43461 + 232] = mem[idx + _43461 + 132]
                            idx = idx + 32
                            continue 
                        revert with memory
                          from mem[64]
                           len _43461 + -mem[64] + 264
                    mem[64] = _43461 + ceil32(return_data.size) + 165
                    mem[_43461 + 164] = return_data.size
                    mem[_43461 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_43461 + 196]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[_43461 + ceil32(return_data.size) + 275 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_43461 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[_43461 + ceil32(return_data.size) + 169] = 32
                    idx = 0
                    while idx < 32:
                        mem[idx + _43461 + ceil32(return_data.size) + 233] = mem[idx + _43461 + 132]
                        idx = idx + 32
                        continue 
                    revert with 0, 32, 32, mem[_43461 + ceil32(return_data.size) + 233]
                require ext_code.size(address(activeStrategies[idx]))
                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require idx < caps.length
                mem[0] = 7
                if ext_call.return_data[0] >= caps[idx]:
                    idx = idx + 1
                    continue 
                require idx < caps.length
                require idx < activeStrategies.length
                mem[0] = 6
                if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                    _45413 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                    _45414 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_45414 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45414 + 36 len 28]
                    mem[64] = _45413 + 164
                    mem[_45413 + 100] = 32
                    mem[_45413 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45413 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _48370 = mem[_45414]
                    t = _45414 + 32
                    u = mem[64]
                    s = mem[_45414]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[mem[64] + floor32(mem[_45414])] = mem[_45414 + floor32(mem[_45414]) + -(mem[_45414] % 32) + 64 len mem[_45414] % 32] or Mask(8 * -(mem[_45414] % 32) + 32, -(8 * -(mem[_45414] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45414])])
                    call underlyingAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _48370 + _45413 + -mem[64] + 160]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        _58195 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45413 + 100]
                        _58197 = mem[_45413 + 100]
                        idx = 0
                        while idx < _58197:
                            mem[idx + _58195 + 68] = mem[idx + _45413 + 132]
                            idx = idx + 32
                            continue 
                        if not _58197 % 32:
                            revert with memory
                              from mem[64]
                               len _58197 + _58195 + -mem[64] + 68
                        mem[floor32(_58197) + _58195 + 68] = mem[floor32(_58197) + _58195 + -(_58197 % 32) + 100 len _58197 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58197) + _58195 + -mem[64] + 100
                    _57219 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_57219] = return_data.size
                    mem[_57219 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_57219 + 32]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    _58199 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_45413 + 100]
                    _58201 = mem[_45413 + 100]
                    idx = 0
                    while idx < _58201:
                        mem[idx + _58199 + 68] = mem[idx + _45413 + 132]
                        idx = idx + 32
                        continue 
                    if not _58201 % 32:
                        revert with memory
                          from mem[64]
                           len _58201 + _58199 + -mem[64] + 68
                    mem[floor32(_58201) + _58199 + 68] = mem[floor32(_58201) + _58199 + -(_58201 % 32) + 100 len _58201 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_58201) + _58199 + -mem[64] + 100
                _45717 = mem[64]
                mem[mem[64] + 36] = address(activeStrategies[idx])
                mem[mem[64] + 68] = ext_call.return_data[0]
                _45718 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_45718 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45718 + 36 len 28]
                mem[64] = _45717 + 164
                mem[_45717 + 100] = 32
                mem[_45717 + 132] = 'SafeERC20: low-level call failed'
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45717 + 270 len 26]
                if not ext_code.size(underlyingAddress):
                    revert with 0, 'Address: call to non-contract'
                _49131 = mem[_45718]
                t = _45718 + 32
                u = mem[64]
                s = mem[_45718]
                while s >= 32:
                    mem[u] = mem[t]
                    t = t + 32
                    u = u + 32
                    s = s - 32
                    continue 
                mem[mem[64] + floor32(mem[_45718])] = mem[_45718 + floor32(mem[_45718]) + -(mem[_45718] % 32) + 64 len mem[_45718] % 32] or Mask(8 * -(mem[_45718] % 32) + 32, -(8 * -(mem[_45718] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45718])])
                call underlyingAddress.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _49131 + _45717 + -mem[64] + 160]
                if not return_data.size:
                    if ext_call.success:
                        if mem[96]:
                            require mem[96] >= 32
                            if not mem[128]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if mem[96]:
                        revert with memory
                          from 128
                           len mem[96]
                    _58203 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_45717 + 100]
                    _58205 = mem[_45717 + 100]
                    idx = 0
                    while idx < _58205:
                        mem[idx + _58203 + 68] = mem[idx + _45717 + 132]
                        idx = idx + 32
                        continue 
                    if not _58205 % 32:
                        revert with memory
                          from mem[64]
                           len _58205 + _58203 + -mem[64] + 68
                    mem[floor32(_58205) + _58203 + 68] = mem[floor32(_58205) + _58203 + -(_58205 % 32) + 100 len _58205 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_58205) + _58203 + -mem[64] + 100
                _57220 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_57220] = return_data.size
                mem[_57220 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if ext_call.success:
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[_57220 + 32]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[mem[64] + 110 len 22]
                    idx = idx + 1
                    continue 
                if return_data.size:
                    revert with ext_call.return_data[0 len return_data.size]
                _58207 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                mem[mem[64] + 36] = mem[_45717 + 100]
                _58209 = mem[_45717 + 100]
                idx = 0
                while idx < _58209:
                    mem[idx + _58207 + 68] = mem[idx + _45717 + 132]
                    idx = idx + 32
                    continue 
                if not _58209 % 32:
                    revert with memory
                      from mem[64]
                       len _58209 + _58207 + -mem[64] + 68
                mem[floor32(_58209) + _58207 + 68] = mem[floor32(_58209) + _58207 + -(_58209 % 32) + 100 len _58209 % 32]
                revert with memory
                  from mem[64]
                   len floor32(_58209) + _58207 + -mem[64] + 100
        else:
            mem[64] = ceil32(return_data.size) + 261
            mem[260] = return_data.size
            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                if return_data.size:
                    revert with ext_call.return_data[0 len return_data.size]
                revert with 0, 'SafeERC20: low-level call failed'
            if not return_data.size:
                mem[ceil32(return_data.size) + 265] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = 0
                while idx < activeStrategies.length:
                    require idx < investmentRatioNumerators.length
                    mem[0] = 8
                    if ext_call.return_data[0]:
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                            if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43187 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _43188 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43188 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43188 + 36 len 28]
                                mem[64] = _43187 + 164
                                mem[_43187 + 100] = 32
                                mem[_43187 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43187 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44334 = mem[_43188]
                                t = _43188 + 32
                                u = _43187 + 164
                                s = mem[_43188]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43187 + floor32(mem[_43188]) + 164] = mem[_43188 + -(mem[_43188] % 32) + floor32(mem[_43188]) + 64 len mem[_43188] % 32] or Mask(8 * -(mem[_43188] % 32) + 32, -(8 * -(mem[_43188] % 32) + 32) + 256, mem[_43187 + floor32(mem[_43188]) + 164])
                                call underlyingAddress.mem[_43187 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43187 + 168 len _44334 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43187 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43187 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43187 + 168] = 32
                                    mem[_43187 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43187 + 232] = mem[idx + _43187 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43187 + -mem[64] + 264
                                mem[64] = _43187 + ceil32(return_data.size) + 165
                                mem[_43187 + 164] = return_data.size
                                mem[_43187 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43187 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43187 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43187 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43187 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43187 + ceil32(return_data.size) + 233] = mem[idx + _43187 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43187 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                _45044 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45045 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45045 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45045 + 36 len 28]
                                mem[64] = _45044 + 164
                                mem[_45044 + 100] = 32
                                mem[_45044 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45044 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47670 = mem[_45045]
                                t = _45045 + 32
                                u = _45044 + 164
                                s = mem[_45045]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45044 + floor32(mem[_45045]) + 164] = mem[_45045 + -(mem[_45045] % 32) + floor32(mem[_45045]) + 64 len mem[_45045] % 32] or Mask(8 * -(mem[_45045] % 32) + 32, -(8 * -(mem[_45045] % 32) + 32) + 256, mem[_45044 + floor32(mem[_45045]) + 164])
                                call underlyingAddress.mem[_45044 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45044 + 168 len _47670 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45044 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45044 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45044 + 168] = 32
                                    mem[_45044 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45044 + 232] = mem[idx + _45044 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45044 + -mem[64] + 264
                                mem[64] = _45044 + ceil32(return_data.size) + 165
                                mem[_45044 + 164] = return_data.size
                                mem[_45044 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45044 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45044 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45044 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45044 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45044 + ceil32(return_data.size) + 233] = mem[idx + _45044 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45044 + ceil32(return_data.size) + 233]
                            _45422 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _45423 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45423 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45423 + 36 len 28]
                            mem[64] = _45422 + 164
                            mem[_45422 + 100] = 32
                            mem[_45422 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45422 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48392 = mem[_45423]
                            t = _45423 + 32
                            u = _45422 + 164
                            s = mem[_45423]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45422 + floor32(mem[_45423]) + 164] = mem[_45423 + -(mem[_45423] % 32) + floor32(mem[_45423]) + 64 len mem[_45423] % 32] or Mask(8 * -(mem[_45423] % 32) + 32, -(8 * -(mem[_45423] % 32) + 32) + 256, mem[_45422 + floor32(mem[_45423]) + 164])
                            call underlyingAddress.mem[_45422 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45422 + 168 len _48392 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45422 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45422 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45422 + 168] = 32
                                mem[_45422 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45422 + 232] = mem[idx + _45422 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45422 + -mem[64] + 264
                            mem[64] = _45422 + ceil32(return_data.size) + 165
                            mem[_45422 + 164] = return_data.size
                            mem[_45422 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45422 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45422 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45422 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45422 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45422 + ceil32(return_data.size) + 233] = mem[idx + _45422 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45422 + ceil32(return_data.size) + 233]
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43469 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43470 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43470 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43470 + 36 len 28]
                            mem[64] = _43469 + 164
                            mem[_43469 + 100] = 32
                            mem[_43469 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43469 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44548 = mem[_43470]
                            t = _43470 + 32
                            u = mem[64]
                            s = mem[_43470]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_43470])] = mem[_43470 + floor32(mem[_43470]) + -(mem[_43470] % 32) + 64 len mem[_43470] % 32] or Mask(8 * -(mem[_43470] % 32) + 32, -(8 * -(mem[_43470] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43470])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _44548 + _43469 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _58283 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43469 + 100]
                                _58285 = mem[_43469 + 100]
                                idx = 0
                                while idx < _58285:
                                    mem[idx + _58283 + 68] = mem[idx + _43469 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58285 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58285 + _58283 + -mem[64] + 68
                                mem[floor32(_58285) + _58283 + 68] = mem[floor32(_58285) + _58283 + -(_58285 % 32) + 100 len _58285 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58285) + _58283 + -mem[64] + 100
                            _57230 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57230] = return_data.size
                            mem[_57230 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57230 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _58287 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_43469 + 100]
                            _58289 = mem[_43469 + 100]
                            idx = 0
                            while idx < _58289:
                                mem[idx + _58287 + 68] = mem[idx + _43469 + 132]
                                idx = idx + 32
                                continue 
                            if not _58289 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58289 + _58287 + -mem[64] + 68
                            mem[floor32(_58289) + _58287 + 68] = mem[floor32(_58289) + _58287 + -(_58289 % 32) + 100 len _58289 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58289) + _58287 + -mem[64] + 100
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45426 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45427 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45427 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45427 + 36 len 28]
                            mem[64] = _45426 + 164
                            mem[_45426 + 100] = 32
                            mem[_45426 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45426 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48402 = mem[_45427]
                            t = _45427 + 32
                            u = _45426 + 164
                            s = mem[_45427]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45426 + floor32(mem[_45427]) + 164] = mem[_45427 + -(mem[_45427] % 32) + floor32(mem[_45427]) + 64 len mem[_45427] % 32] or Mask(8 * -(mem[_45427] % 32) + 32, -(8 * -(mem[_45427] % 32) + 32) + 256, mem[_45426 + floor32(mem[_45427]) + 164])
                            call underlyingAddress.mem[_45426 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45426 + 168 len _48402 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45426 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45426 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45426 + 168] = 32
                                mem[_45426 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45426 + 232] = mem[idx + _45426 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45426 + -mem[64] + 264
                            mem[64] = _45426 + ceil32(return_data.size) + 165
                            mem[_45426 + 164] = return_data.size
                            mem[_45426 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45426 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45426 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45426 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45426 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45426 + ceil32(return_data.size) + 233] = mem[idx + _45426 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45426 + ceil32(return_data.size) + 233]
                        _45725 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45726 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45726 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45726 + 36 len 28]
                        mem[64] = _45725 + 164
                        mem[_45725 + 100] = 32
                        mem[_45725 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45725 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _49160 = mem[_45726]
                        t = _45726 + 32
                        u = _45725 + 164
                        s = mem[_45726]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45725 + floor32(mem[_45726]) + 164] = mem[_45726 + -(mem[_45726] % 32) + floor32(mem[_45726]) + 64 len mem[_45726] % 32] or Mask(8 * -(mem[_45726] % 32) + 32, -(8 * -(mem[_45726] % 32) + 32) + 256, mem[_45725 + floor32(mem[_45726]) + 164])
                        call underlyingAddress.mem[_45725 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45725 + 168 len _49160 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45725 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45725 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45725 + 168] = 32
                            mem[_45725 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45725 + 232] = mem[idx + _45725 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45725 + -mem[64] + 264
                        mem[64] = _45725 + ceil32(return_data.size) + 165
                        mem[_45725 + 164] = return_data.size
                        mem[_45725 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45725 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45725 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45725 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45725 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45725 + ceil32(return_data.size) + 233] = mem[idx + _45725 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45725 + ceil32(return_data.size) + 233]
                    if investmentRatioDenominator <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require investmentRatioDenominator
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if 0 / investmentRatioDenominator >= ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43196 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43197 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43197 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43197 + 36 len 28]
                            mem[64] = _43196 + 164
                            mem[_43196 + 100] = 32
                            mem[_43196 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43196 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44339 = mem[_43197]
                            t = _43197 + 32
                            u = _43196 + 164
                            s = mem[_43197]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43196 + floor32(mem[_43197]) + 164] = mem[_43197 + -(mem[_43197] % 32) + floor32(mem[_43197]) + 64 len mem[_43197] % 32] or Mask(8 * -(mem[_43197] % 32) + 32, -(8 * -(mem[_43197] % 32) + 32) + 256, mem[_43196 + floor32(mem[_43197]) + 164])
                            call underlyingAddress.mem[_43196 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43196 + 168 len _44339 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43196 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43196 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43196 + 168] = 32
                                mem[_43196 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43196 + 232] = mem[idx + _43196 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43196 + -mem[64] + 264
                            mem[64] = _43196 + ceil32(return_data.size) + 165
                            mem[_43196 + 164] = return_data.size
                            mem[_43196 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43196 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43196 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43196 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43196 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43196 + ceil32(return_data.size) + 233] = mem[idx + _43196 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43196 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45056 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45057 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45057 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45057 + 36 len 28]
                            mem[64] = _45056 + 164
                            mem[_45056 + 100] = 32
                            mem[_45056 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45056 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47690 = mem[_45057]
                            t = _45057 + 32
                            u = _45056 + 164
                            s = mem[_45057]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45056 + floor32(mem[_45057]) + 164] = mem[_45057 + -(mem[_45057] % 32) + floor32(mem[_45057]) + 64 len mem[_45057] % 32] or Mask(8 * -(mem[_45057] % 32) + 32, -(8 * -(mem[_45057] % 32) + 32) + 256, mem[_45056 + floor32(mem[_45057]) + 164])
                            call underlyingAddress.mem[_45056 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45056 + 168 len _47690 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45056 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45056 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45056 + 168] = 32
                                mem[_45056 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45056 + 232] = mem[idx + _45056 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45056 + -mem[64] + 264
                            mem[64] = _45056 + ceil32(return_data.size) + 165
                            mem[_45056 + 164] = return_data.size
                            mem[_45056 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45056 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45056 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45056 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45056 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45056 + ceil32(return_data.size) + 233] = mem[idx + _45056 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45056 + ceil32(return_data.size) + 233]
                        _45431 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45432 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45432 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45432 + 36 len 28]
                        mem[64] = _45431 + 164
                        mem[_45431 + 100] = 32
                        mem[_45431 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45431 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48416 = mem[_45432]
                        t = _45432 + 32
                        u = _45431 + 164
                        s = mem[_45432]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45431 + floor32(mem[_45432]) + 164] = mem[_45432 + -(mem[_45432] % 32) + floor32(mem[_45432]) + 64 len mem[_45432] % 32] or Mask(8 * -(mem[_45432] % 32) + 32, -(8 * -(mem[_45432] % 32) + 32) + 256, mem[_45431 + floor32(mem[_45432]) + 164])
                        call underlyingAddress.mem[_45431 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45431 + 168 len _48416 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45431 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45431 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45431 + 168] = 32
                            mem[_45431 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45431 + 232] = mem[idx + _45431 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45431 + -mem[64] + 264
                        mem[64] = _45431 + ceil32(return_data.size) + 165
                        mem[_45431 + 164] = return_data.size
                        mem[_45431 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45431 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45431 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45431 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45431 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45431 + ceil32(return_data.size) + 233] = mem[idx + _45431 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45431 + ceil32(return_data.size) + 233]
                    if not 0 / investmentRatioDenominator:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    if caps[idx] <= 0:
                        mem[0] = 6
                        _42925 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = 0 / investmentRatioDenominator
                        _42926 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_42926 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_42926 + 36 len 28]
                        mem[64] = _42925 + 164
                        mem[_42925 + 100] = 32
                        mem[_42925 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_42925 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _44164 = mem[_42926]
                        t = _42926 + 32
                        u = mem[64]
                        s = mem[_42926]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_42926])] = mem[_42926 + floor32(mem[_42926]) + -(mem[_42926] % 32) + 64 len mem[_42926] % 32] or Mask(8 * -(mem[_42926] % 32) + 32, -(8 * -(mem[_42926] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_42926])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _44164 + _42925 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58307 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_42925 + 100]
                            _58309 = mem[_42925 + 100]
                            idx = 0
                            while idx < _58309:
                                mem[idx + _58307 + 68] = mem[idx + _42925 + 132]
                                idx = idx + 32
                                continue 
                            if not _58309 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58309 + _58307 + -mem[64] + 68
                            mem[floor32(_58309) + _58307 + 68] = mem[floor32(_58309) + _58307 + -(_58309 % 32) + 100 len _58309 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58309) + _58307 + -mem[64] + 100
                        _57233 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57233] = return_data.size
                        mem[_57233 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57233 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58311 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_42925 + 100]
                        _58313 = mem[_42925 + 100]
                        idx = 0
                        while idx < _58313:
                            mem[idx + _58311 + 68] = mem[idx + _42925 + 132]
                            idx = idx + 32
                            continue 
                        if not _58313 % 32:
                            revert with memory
                              from mem[64]
                               len _58313 + _58311 + -mem[64] + 68
                        mem[floor32(_58313) + _58311 + 68] = mem[floor32(_58313) + _58311 + -(_58313 % 32) + 100 len _58313 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58313) + _58311 + -mem[64] + 100
                    require ext_code.size(address(activeStrategies[idx]))
                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require idx < caps.length
                    mem[0] = 7
                    if ext_call.return_data[0] >= caps[idx]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    mem[0] = 6
                    if caps[idx] - ext_call.return_data[0] >= 0 / investmentRatioDenominator:
                        _45052 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = 0 / investmentRatioDenominator
                        _45053 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45053 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45053 + 36 len 28]
                        mem[64] = _45052 + 164
                        mem[_45052 + 100] = 32
                        mem[_45052 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45052 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _47680 = mem[_45053]
                        t = _45053 + 32
                        u = _45052 + 164
                        s = mem[_45053]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45052 + floor32(mem[_45053]) + 164] = mem[_45053 + -(mem[_45053] % 32) + floor32(mem[_45053]) + 64 len mem[_45053] % 32] or Mask(8 * -(mem[_45053] % 32) + 32, -(8 * -(mem[_45053] % 32) + 32) + 256, mem[_45052 + floor32(mem[_45053]) + 164])
                        call underlyingAddress.mem[_45052 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45052 + 168 len _47680 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45052 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45052 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45052 + 168] = 32
                            mem[_45052 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45052 + 232] = mem[idx + _45052 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45052 + -mem[64] + 264
                        mem[64] = _45052 + ceil32(return_data.size) + 165
                        mem[_45052 + 164] = return_data.size
                        mem[_45052 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45052 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45052 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45052 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45052 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45052 + ceil32(return_data.size) + 233] = mem[idx + _45052 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45052 + ceil32(return_data.size) + 233]
                    _44752 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                    _44753 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_44753 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44753 + 36 len 28]
                    mem[64] = _44752 + 164
                    mem[_44752 + 100] = 32
                    mem[_44752 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44752 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _47262 = mem[_44753]
                    t = _44753 + 32
                    u = mem[64]
                    s = mem[_44753]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[mem[64] + floor32(mem[_44753])] = mem[_44753 + floor32(mem[_44753]) + -(mem[_44753] % 32) + 64 len mem[_44753] % 32] or Mask(8 * -(mem[_44753] % 32) + 32, -(8 * -(mem[_44753] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44753])])
                    call underlyingAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _47262 + _44752 + -mem[64] + 160]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        _58315 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_44752 + 100]
                        _58317 = mem[_44752 + 100]
                        idx = 0
                        while idx < _58317:
                            mem[idx + _58315 + 68] = mem[idx + _44752 + 132]
                            idx = idx + 32
                            continue 
                        if not _58317 % 32:
                            revert with memory
                              from mem[64]
                               len _58317 + _58315 + -mem[64] + 68
                        mem[floor32(_58317) + _58315 + 68] = mem[floor32(_58317) + _58315 + -(_58317 % 32) + 100 len _58317 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58317) + _58315 + -mem[64] + 100
                    _57234 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_57234] = return_data.size
                    mem[_57234 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_57234 + 32]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    _58319 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_44752 + 100]
                    _58321 = mem[_44752 + 100]
                    idx = 0
                    while idx < _58321:
                        mem[idx + _58319 + 68] = mem[idx + _44752 + 132]
                        idx = idx + 32
                        continue 
                    if not _58321 % 32:
                        revert with memory
                          from mem[64]
                           len _58321 + _58319 + -mem[64] + 68
                    mem[floor32(_58321) + _58319 + 68] = mem[floor32(_58321) + _58319 + -(_58321 % 32) + 100 len _58321 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_58321) + _58319 + -mem[64] + 100
            else:
                require return_data.size >= 32
                if not mem[292]:
                    revert with 0, 
                                32,
                                42,
                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                mem[ceil32(return_data.size) + 371 len 22]
                mem[ceil32(return_data.size) + 265] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = 0
                while idx < activeStrategies.length:
                    require idx < investmentRatioNumerators.length
                    mem[0] = 8
                    if not ext_call.return_data[0]:
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                            if not 0 / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _42936 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _42937 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_42937 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_42937 + 36 len 28]
                                mem[64] = _42936 + 164
                                mem[_42936 + 100] = 32
                                mem[_42936 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_42936 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44171 = mem[_42937]
                                t = _42937 + 32
                                u = _42936 + 164
                                s = mem[_42937]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_42936 + floor32(mem[_42937]) + 164] = mem[_42937 + -(mem[_42937] % 32) + floor32(mem[_42937]) + 64 len mem[_42937] % 32] or Mask(8 * -(mem[_42937] % 32) + 32, -(8 * -(mem[_42937] % 32) + 32) + 256, mem[_42936 + floor32(mem[_42937]) + 164])
                                call underlyingAddress.mem[_42936 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_42936 + 168 len _44171 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_42936 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_42936 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_42936 + 168] = 32
                                    mem[_42936 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _42936 + 232] = mem[idx + _42936 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _42936 + -mem[64] + 264
                                mem[64] = _42936 + ceil32(return_data.size) + 165
                                mem[_42936 + 164] = return_data.size
                                mem[_42936 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_42936 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_42936 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_42936 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_42936 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _42936 + ceil32(return_data.size) + 233] = mem[idx + _42936 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_42936 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                _44764 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44765 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44765 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44765 + 36 len 28]
                                mem[64] = _44764 + 164
                                mem[_44764 + 100] = 32
                                mem[_44764 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44764 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47278 = mem[_44765]
                                t = _44765 + 32
                                u = _44764 + 164
                                s = mem[_44765]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_44764 + floor32(mem[_44765]) + 164] = mem[_44765 + -(mem[_44765] % 32) + floor32(mem[_44765]) + 64 len mem[_44765] % 32] or Mask(8 * -(mem[_44765] % 32) + 32, -(8 * -(mem[_44765] % 32) + 32) + 256, mem[_44764 + floor32(mem[_44765]) + 164])
                                call underlyingAddress.mem[_44764 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_44764 + 168 len _47278 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44764 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_44764 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44764 + 168] = 32
                                    mem[_44764 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44764 + 232] = mem[idx + _44764 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _44764 + -mem[64] + 264
                                mem[64] = _44764 + ceil32(return_data.size) + 165
                                mem[_44764 + 164] = return_data.size
                                mem[_44764 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_44764 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_44764 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_44764 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_44764 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _44764 + ceil32(return_data.size) + 233] = mem[idx + _44764 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_44764 + ceil32(return_data.size) + 233]
                            _45068 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = 0 / investmentRatioDenominator
                            _45069 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45069 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45069 + 36 len 28]
                            mem[64] = _45068 + 164
                            mem[_45068 + 100] = 32
                            mem[_45068 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45068 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47710 = mem[_45069]
                            t = _45069 + 32
                            u = _45068 + 164
                            s = mem[_45069]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45068 + floor32(mem[_45069]) + 164] = mem[_45069 + -(mem[_45069] % 32) + floor32(mem[_45069]) + 64 len mem[_45069] % 32] or Mask(8 * -(mem[_45069] % 32) + 32, -(8 * -(mem[_45069] % 32) + 32) + 256, mem[_45068 + floor32(mem[_45069]) + 164])
                            call underlyingAddress.mem[_45068 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45068 + 168 len _47710 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45068 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45068 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45068 + 168] = 32
                                mem[_45068 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45068 + 232] = mem[idx + _45068 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45068 + -mem[64] + 264
                            mem[64] = _45068 + ceil32(return_data.size) + 165
                            mem[_45068 + 164] = return_data.size
                            mem[_45068 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45068 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45068 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45068 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45068 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45068 + ceil32(return_data.size) + 233] = mem[idx + _45068 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45068 + ceil32(return_data.size) + 233]
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43208 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43209 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43209 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43209 + 36 len 28]
                            mem[64] = _43208 + 164
                            mem[_43208 + 100] = 32
                            mem[_43208 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43208 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44348 = mem[_43209]
                            t = _43209 + 32
                            u = _43208 + 164
                            s = mem[_43209]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43208 + floor32(mem[_43209]) + 164] = mem[_43209 + -(mem[_43209] % 32) + floor32(mem[_43209]) + 64 len mem[_43209] % 32] or Mask(8 * -(mem[_43209] % 32) + 32, -(8 * -(mem[_43209] % 32) + 32) + 256, mem[_43208 + floor32(mem[_43209]) + 164])
                            call underlyingAddress.mem[_43208 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43208 + 168 len _44348 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43208 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43208 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43208 + 168] = 32
                                mem[_43208 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43208 + 232] = mem[idx + _43208 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43208 + -mem[64] + 264
                            mem[64] = _43208 + ceil32(return_data.size) + 165
                            mem[_43208 + 164] = return_data.size
                            mem[_43208 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43208 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43208 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43208 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43208 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43208 + ceil32(return_data.size) + 233] = mem[idx + _43208 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43208 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45072 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45073 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45073 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45073 + 36 len 28]
                            mem[64] = _45072 + 164
                            mem[_45072 + 100] = 32
                            mem[_45072 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45072 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47720 = mem[_45073]
                            t = _45073 + 32
                            u = _45072 + 164
                            s = mem[_45073]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45072 + floor32(mem[_45073]) + 164] = mem[_45073 + -(mem[_45073] % 32) + floor32(mem[_45073]) + 64 len mem[_45073] % 32] or Mask(8 * -(mem[_45073] % 32) + 32, -(8 * -(mem[_45073] % 32) + 32) + 256, mem[_45072 + floor32(mem[_45073]) + 164])
                            call underlyingAddress.mem[_45072 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45072 + 168 len _47720 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45072 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45072 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45072 + 168] = 32
                                mem[_45072 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45072 + 232] = mem[idx + _45072 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45072 + -mem[64] + 264
                            mem[64] = _45072 + ceil32(return_data.size) + 165
                            mem[_45072 + 164] = return_data.size
                            mem[_45072 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45072 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45072 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45072 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45072 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45072 + ceil32(return_data.size) + 233] = mem[idx + _45072 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45072 + ceil32(return_data.size) + 233]
                        _45444 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45445 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45445 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45445 + 36 len 28]
                        mem[64] = _45444 + 164
                        mem[_45444 + 100] = 32
                        mem[_45444 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45444 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48448 = mem[_45445]
                        t = _45445 + 32
                        u = _45444 + 164
                        s = mem[_45445]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45444 + floor32(mem[_45445]) + 164] = mem[_45445 + -(mem[_45445] % 32) + floor32(mem[_45445]) + 64 len mem[_45445] % 32] or Mask(8 * -(mem[_45445] % 32) + 32, -(8 * -(mem[_45445] % 32) + 32) + 256, mem[_45444 + floor32(mem[_45445]) + 164])
                        call underlyingAddress.mem[_45444 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45444 + 168 len _48448 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45444 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45444 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45444 + 168] = 32
                            mem[_45444 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45444 + 232] = mem[idx + _45444 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45444 + -mem[64] + 264
                        mem[64] = _45444 + ceil32(return_data.size) + 165
                        mem[_45444 + 164] = return_data.size
                        mem[_45444 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45444 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45444 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45444 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45444 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45444 + ceil32(return_data.size) + 233] = mem[idx + _45444 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45444 + ceil32(return_data.size) + 233]
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                        revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if investmentRatioDenominator <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require investmentRatioDenominator
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                        if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43199 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _43200 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43200 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43200 + 36 len 28]
                            mem[64] = _43199 + 164
                            mem[_43199 + 100] = 32
                            mem[_43199 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43199 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44343 = mem[_43200]
                            t = _43200 + 32
                            u = _43199 + 164
                            s = mem[_43200]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43199 + floor32(mem[_43200]) + 164] = mem[_43200 + -(mem[_43200] % 32) + floor32(mem[_43200]) + 64 len mem[_43200] % 32] or Mask(8 * -(mem[_43200] % 32) + 32, -(8 * -(mem[_43200] % 32) + 32) + 256, mem[_43199 + floor32(mem[_43200]) + 164])
                            call underlyingAddress.mem[_43199 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43199 + 168 len _44343 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43199 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43199 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43199 + 168] = 32
                                mem[_43199 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43199 + 232] = mem[idx + _43199 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43199 + -mem[64] + 264
                            mem[64] = _43199 + ceil32(return_data.size) + 165
                            mem[_43199 + 164] = return_data.size
                            mem[_43199 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43199 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43199 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43199 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43199 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43199 + ceil32(return_data.size) + 233] = mem[idx + _43199 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43199 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            _45060 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45061 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45061 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45061 + 36 len 28]
                            mem[64] = _45060 + 164
                            mem[_45060 + 100] = 32
                            mem[_45060 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45060 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47700 = mem[_45061]
                            t = _45061 + 32
                            u = _45060 + 164
                            s = mem[_45061]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45060 + floor32(mem[_45061]) + 164] = mem[_45061 + -(mem[_45061] % 32) + floor32(mem[_45061]) + 64 len mem[_45061] % 32] or Mask(8 * -(mem[_45061] % 32) + 32, -(8 * -(mem[_45061] % 32) + 32) + 256, mem[_45060 + floor32(mem[_45061]) + 164])
                            call underlyingAddress.mem[_45060 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45060 + 168 len _47700 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45060 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45060 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45060 + 168] = 32
                                mem[_45060 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45060 + 232] = mem[idx + _45060 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45060 + -mem[64] + 264
                            mem[64] = _45060 + ceil32(return_data.size) + 165
                            mem[_45060 + 164] = return_data.size
                            mem[_45060 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45060 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45060 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45060 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45060 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45060 + ceil32(return_data.size) + 233] = mem[idx + _45060 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45060 + ceil32(return_data.size) + 233]
                        _45435 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                        _45436 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45436 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45436 + 36 len 28]
                        mem[64] = _45435 + 164
                        mem[_45435 + 100] = 32
                        mem[_45435 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45435 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48424 = mem[_45436]
                        t = _45436 + 32
                        u = mem[64]
                        s = mem[_45436]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45436])] = mem[_45436 + floor32(mem[_45436]) + -(mem[_45436] % 32) + 64 len mem[_45436] % 32] or Mask(8 * -(mem[_45436] % 32) + 32, -(8 * -(mem[_45436] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45436])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48424 + _45435 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58371 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45435 + 100]
                            _58373 = mem[_45435 + 100]
                            idx = 0
                            while idx < _58373:
                                mem[idx + _58371 + 68] = mem[idx + _45435 + 132]
                                idx = idx + 32
                                continue 
                            if not _58373 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58373 + _58371 + -mem[64] + 68
                            mem[floor32(_58373) + _58371 + 68] = mem[floor32(_58373) + _58371 + -(_58373 % 32) + 100 len _58373 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58373) + _58371 + -mem[64] + 100
                        _57241 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57241] = return_data.size
                        mem[_57241 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57241 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58375 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45435 + 100]
                        _58377 = mem[_45435 + 100]
                        idx = 0
                        while idx < _58377:
                            mem[idx + _58375 + 68] = mem[idx + _45435 + 132]
                            idx = idx + 32
                            continue 
                        if not _58377 % 32:
                            revert with memory
                              from mem[64]
                               len _58377 + _58375 + -mem[64] + 68
                        mem[floor32(_58377) + _58375 + 68] = mem[floor32(_58377) + _58375 + -(_58377 % 32) + 100 len _58377 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58377) + _58375 + -mem[64] + 100
                    if not ext_call.return_data[0]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    if caps[idx] <= 0:
                        mem[0] = 6
                        _43477 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _43478 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_43478 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43478 + 36 len 28]
                        mem[64] = _43477 + 164
                        mem[_43477 + 100] = 32
                        mem[_43477 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43477 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _44556 = mem[_43478]
                        t = _43478 + 32
                        u = _43477 + 164
                        s = mem[_43478]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_43477 + floor32(mem[_43478]) + 164] = mem[_43478 + -(mem[_43478] % 32) + floor32(mem[_43478]) + 64 len mem[_43478] % 32] or Mask(8 * -(mem[_43478] % 32) + 32, -(8 * -(mem[_43478] % 32) + 32) + 256, mem[_43477 + floor32(mem[_43478]) + 164])
                        call underlyingAddress.mem[_43477 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_43477 + 168 len _44556 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43477 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_43477 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43477 + 168] = 32
                            mem[_43477 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43477 + 232] = mem[idx + _43477 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _43477 + -mem[64] + 264
                        mem[64] = _43477 + ceil32(return_data.size) + 165
                        mem[_43477 + 164] = return_data.size
                        mem[_43477 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_43477 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_43477 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_43477 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_43477 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _43477 + ceil32(return_data.size) + 233] = mem[idx + _43477 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_43477 + ceil32(return_data.size) + 233]
                    require ext_code.size(address(activeStrategies[idx]))
                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require idx < caps.length
                    mem[0] = 7
                    if ext_call.return_data[0] >= caps[idx]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    mem[0] = 6
                    if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                        _45439 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45440 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45440 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45440 + 36 len 28]
                        mem[64] = _45439 + 164
                        mem[_45439 + 100] = 32
                        mem[_45439 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45439 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48434 = mem[_45440]
                        t = _45440 + 32
                        u = mem[64]
                        s = mem[_45440]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45440])] = mem[_45440 + floor32(mem[_45440]) + -(mem[_45440] % 32) + 64 len mem[_45440] % 32] or Mask(8 * -(mem[_45440] % 32) + 32, -(8 * -(mem[_45440] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45440])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48434 + _45439 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58387 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45439 + 100]
                            _58389 = mem[_45439 + 100]
                            idx = 0
                            while idx < _58389:
                                mem[idx + _58387 + 68] = mem[idx + _45439 + 132]
                                idx = idx + 32
                                continue 
                            if not _58389 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58389 + _58387 + -mem[64] + 68
                            mem[floor32(_58389) + _58387 + 68] = mem[floor32(_58389) + _58387 + -(_58389 % 32) + 100 len _58389 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58389) + _58387 + -mem[64] + 100
                        _57243 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57243] = return_data.size
                        mem[_57243 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57243 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58391 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45439 + 100]
                        _58393 = mem[_45439 + 100]
                        idx = 0
                        while idx < _58393:
                            mem[idx + _58391 + 68] = mem[idx + _45439 + 132]
                            idx = idx + 32
                            continue 
                        if not _58393 % 32:
                            revert with memory
                              from mem[64]
                               len _58393 + _58391 + -mem[64] + 68
                        mem[floor32(_58393) + _58391 + 68] = mem[floor32(_58393) + _58391 + -(_58393 % 32) + 100 len _58393 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58393) + _58391 + -mem[64] + 100
                    _45733 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    _45734 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_45734 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45734 + 36 len 28]
                    mem[64] = _45733 + 164
                    mem[_45733 + 100] = 32
                    mem[_45733 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45733 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _49189 = mem[_45734]
                    t = _45734 + 32
                    u = mem[64]
                    s = mem[_45734]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[mem[64] + floor32(mem[_45734])] = mem[_45734 + floor32(mem[_45734]) + -(mem[_45734] % 32) + 64 len mem[_45734] % 32] or Mask(8 * -(mem[_45734] % 32) + 32, -(8 * -(mem[_45734] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45734])])
                    call underlyingAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _49189 + _45733 + -mem[64] + 160]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        _58395 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45733 + 100]
                        _58397 = mem[_45733 + 100]
                        idx = 0
                        while idx < _58397:
                            mem[idx + _58395 + 68] = mem[idx + _45733 + 132]
                            idx = idx + 32
                            continue 
                        if not _58397 % 32:
                            revert with memory
                              from mem[64]
                               len _58397 + _58395 + -mem[64] + 68
                        mem[floor32(_58397) + _58395 + 68] = mem[floor32(_58397) + _58395 + -(_58397 % 32) + 100 len _58397 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58397) + _58395 + -mem[64] + 100
                    _57244 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_57244] = return_data.size
                    mem[_57244 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_57244 + 32]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    _58399 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_45733 + 100]
                    _58401 = mem[_45733 + 100]
                    idx = 0
                    while idx < _58401:
                        mem[idx + _58399 + 68] = mem[idx + _45733 + 132]
                        idx = idx + 32
                        continue 
                    if not _58401 % 32:
                        revert with memory
                          from mem[64]
                           len _58401 + _58399 + -mem[64] + 68
                    mem[floor32(_58401) + _58399 + 68] = mem[floor32(_58401) + _58399 + -(_58401 % 32) + 100 len _58401 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_58401) + _58399 + -mem[64] + 100
    else:
        require ext_code.size(storeAddress)
        staticcall storeAddress.0xf77c4791 with:
                gas gas_remaining wei
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if msg.sender == ext_call.return_data[12 len 20]:
            if arg1 <= 0:
                revert with 0, 'amount must be greater than 0'
            idx = 0
            while idx < withdrawalOrder.length:
                mem[100] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < arg1:
                    require idx < withdrawalOrder.length
                    mem[0] = 9
                    require ext_code.size(address(withdrawalOrder[idx]))
                    staticcall address(withdrawalOrder[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        require idx < withdrawalOrder.length
                        mem[0] = 9
                        if ext_call.return_data[0] > arg1:
                            revert with 0, 'SafeMath: subtraction overflow'
                        mem[96] = 0xce8c42e800000000000000000000000000000000000000000000000000000000
                        if arg1 - ext_call.return_data[0] < ext_call.return_data[0]:
                            mem[100] = arg1 - ext_call.return_data[0]
                            require ext_code.size(address(withdrawalOrder[idx]))
                            call address(withdrawalOrder[idx]).0xce8c42e8 with:
                                 gas gas_remaining wei
                                args (arg1 - ext_call.return_data[0])
                        else:
                            mem[100] = ext_call.return_data[0]
                            require ext_code.size(address(withdrawalOrder[idx]))
                            call address(withdrawalOrder[idx]).0xce8c42e8 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < arg1:
                    revert with 0, 32, 41, 0xfe73706c697474657220646f6573206e6f7420686176652073756666696369656e742062616c616e63, mem[205 len 23]
                mem[132] = address(vaultAddress)
                mem[164] = arg1
                mem[96] = 68
                mem[128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or Mask(224, 0, stor2)
                mem[64] = 260
                mem[196] = 32
                mem[228] = 'SafeERC20: low-level call failed'
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(underlyingAddress):
                    revert with 0, 'Address: call to non-contract'
                t = 128
                u = 260
                s = 68
                while s >= 32:
                    mem[u] = mem[t]
                    t = t + 32
                    u = u + 32
                    s = s - 32
                    continue 
                mem[324] = 0 or Mask(224, 32, mem[324])
                call underlyingAddress.mem[260 len 4] with:
                     gas gas_remaining wei
                    args mem[264 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or Mask(224, 0, stor2), uint32(stor2), arg1
                    if False and not Mask(224, 0, stor2):
                        revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    mem[264] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[260] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43046 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43047 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43047 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43047 + 36 len 28]
                                    mem[64] = _43046 + 164
                                    mem[_43046 + 100] = 32
                                    mem[_43046 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43046 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44241 = mem[_43047]
                                    t = _43047 + 32
                                    u = _43046 + 164
                                    s = mem[_43047]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_43046 + floor32(mem[_43047]) + 164] = mem[_43047 + -(mem[_43047] % 32) + floor32(mem[_43047]) + 64 len mem[_43047] % 32] or Mask(8 * -(mem[_43047] % 32) + 32, -(8 * -(mem[_43047] % 32) + 32) + 256, mem[_43046 + floor32(mem[_43047]) + 164])
                                    call underlyingAddress.mem[_43046 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_43046 + 168 len _44241 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_43046 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_43046 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_43046 + 168] = 32
                                        mem[_43046 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _43046 + 232] = mem[idx + _43046 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _43046 + -mem[64] + 264
                                    mem[64] = _43046 + ceil32(return_data.size) + 165
                                    mem[_43046 + 164] = return_data.size
                                    mem[_43046 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_43046 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43046 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_43046 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43046 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43046 + ceil32(return_data.size) + 233] = mem[idx + _43046 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_43046 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                    _44884 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _44885 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_44885 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44885 + 36 len 28]
                                    mem[64] = _44884 + 164
                                    mem[_44884 + 100] = 32
                                    mem[_44884 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44884 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _47438 = mem[_44885]
                                    t = _44885 + 32
                                    u = _44884 + 164
                                    s = mem[_44885]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_44884 + floor32(mem[_44885]) + 164] = mem[_44885 + -(mem[_44885] % 32) + floor32(mem[_44885]) + 64 len mem[_44885] % 32] or Mask(8 * -(mem[_44885] % 32) + 32, -(8 * -(mem[_44885] % 32) + 32) + 256, mem[_44884 + floor32(mem[_44885]) + 164])
                                    call underlyingAddress.mem[_44884 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_44884 + 168 len _47438 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_44884 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_44884 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_44884 + 168] = 32
                                        mem[_44884 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _44884 + 232] = mem[idx + _44884 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _44884 + -mem[64] + 264
                                    mem[64] = _44884 + ceil32(return_data.size) + 165
                                    mem[_44884 + 164] = return_data.size
                                    mem[_44884 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_44884 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44884 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_44884 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44884 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44884 + ceil32(return_data.size) + 233] = mem[idx + _44884 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_44884 + ceil32(return_data.size) + 233]
                                _45228 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _45229 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45229 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45229 + 36 len 28]
                                mem[64] = _45228 + 164
                                mem[_45228 + 100] = 32
                                mem[_45228 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45228 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48010 = mem[_45229]
                                t = _45229 + 32
                                u = _45228 + 164
                                s = mem[_45229]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45228 + floor32(mem[_45229]) + 164] = mem[_45229 + -(mem[_45229] % 32) + floor32(mem[_45229]) + 64 len mem[_45229] % 32] or Mask(8 * -(mem[_45229] % 32) + 32, -(8 * -(mem[_45229] % 32) + 32) + 256, mem[_45228 + floor32(mem[_45229]) + 164])
                                call underlyingAddress.mem[_45228 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45228 + 168 len _48010 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45228 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45228 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45228 + 168] = 32
                                    mem[_45228 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45228 + 232] = mem[idx + _45228 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45228 + -mem[64] + 264
                                mem[64] = _45228 + ceil32(return_data.size) + 165
                                mem[_45228 + 164] = return_data.size
                                mem[_45228 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45228 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45228 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45228 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45228 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45228 + ceil32(return_data.size) + 233] = mem[idx + _45228 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45228 + ceil32(return_data.size) + 233]
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43328 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43329 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43329 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43329 + 36 len 28]
                                mem[64] = _43328 + 164
                                mem[_43328 + 100] = 32
                                mem[_43328 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43328 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44438 = mem[_43329]
                                t = _43329 + 32
                                u = mem[64]
                                s = mem[_43329]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_43329])] = mem[_43329 + floor32(mem[_43329]) + -(mem[_43329] % 32) + 64 len mem[_43329] % 32] or Mask(8 * -(mem[_43329] % 32) + 32, -(8 * -(mem[_43329] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43329])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _44438 + _43328 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59387 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43328 + 100]
                                    _59389 = mem[_43328 + 100]
                                    idx = 0
                                    while idx < _59389:
                                        mem[idx + _59387 + 68] = mem[idx + _43328 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59389 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59389 + _59387 + -mem[64] + 68
                                    mem[floor32(_59389) + _59387 + 68] = mem[floor32(_59389) + _59387 + -(_59389 % 32) + 100 len _59389 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59389) + _59387 + -mem[64] + 100
                                _57368 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57368] = return_data.size
                                mem[_57368 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57368 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59391 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43328 + 100]
                                _59393 = mem[_43328 + 100]
                                idx = 0
                                while idx < _59393:
                                    mem[idx + _59391 + 68] = mem[idx + _43328 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59393 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59393 + _59391 + -mem[64] + 68
                                mem[floor32(_59393) + _59391 + 68] = mem[floor32(_59393) + _59391 + -(_59393 % 32) + 100 len _59393 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59393) + _59391 + -mem[64] + 100
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                _45574 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45575 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45575 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45575 + 36 len 28]
                                mem[64] = _45574 + 164
                                mem[_45574 + 100] = 32
                                mem[_45574 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45574 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48768 = mem[_45575]
                                t = _45575 + 32
                                u = _45574 + 164
                                s = mem[_45575]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45574 + floor32(mem[_45575]) + 164] = mem[_45575 + -(mem[_45575] % 32) + floor32(mem[_45575]) + 64 len mem[_45575] % 32] or Mask(8 * -(mem[_45575] % 32) + 32, -(8 * -(mem[_45575] % 32) + 32) + 256, mem[_45574 + floor32(mem[_45575]) + 164])
                                call underlyingAddress.mem[_45574 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45574 + 168 len _48768 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45574 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45574 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45574 + 168] = 32
                                    mem[_45574 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45574 + 232] = mem[idx + _45574 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45574 + -mem[64] + 264
                                mem[64] = _45574 + ceil32(return_data.size) + 165
                                mem[_45574 + 164] = return_data.size
                                mem[_45574 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45574 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45574 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45574 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45574 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45574 + ceil32(return_data.size) + 233] = mem[idx + _45574 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45574 + ceil32(return_data.size) + 233]
                            _45232 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45233 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45233 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45233 + 36 len 28]
                            mem[64] = _45232 + 164
                            mem[_45232 + 100] = 32
                            mem[_45232 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45232 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48020 = mem[_45233]
                            t = _45233 + 32
                            u = mem[64]
                            s = mem[_45233]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45233])] = mem[_45233 + floor32(mem[_45233]) + -(mem[_45233] % 32) + 64 len mem[_45233] % 32] or Mask(8 * -(mem[_45233] % 32) + 32, -(8 * -(mem[_45233] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45233])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48020 + _45232 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59395 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45232 + 100]
                                _59397 = mem[_45232 + 100]
                                idx = 0
                                while idx < _59397:
                                    mem[idx + _59395 + 68] = mem[idx + _45232 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59397 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59397 + _59395 + -mem[64] + 68
                                mem[floor32(_59397) + _59395 + 68] = mem[floor32(_59397) + _59395 + -(_59397 % 32) + 100 len _59397 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59397) + _59395 + -mem[64] + 100
                            _57369 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57369] = return_data.size
                            mem[_57369 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57369 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59399 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45232 + 100]
                            _59401 = mem[_45232 + 100]
                            idx = 0
                            while idx < _59401:
                                mem[idx + _59399 + 68] = mem[idx + _45232 + 132]
                                idx = idx + 32
                                continue 
                            if not _59401 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59401 + _59399 + -mem[64] + 68
                            mem[floor32(_59401) + _59399 + 68] = mem[floor32(_59401) + _59399 + -(_59401 % 32) + 100 len _59401 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59401) + _59399 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator >= ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43557 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43558 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43558 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43558 + 36 len 28]
                                mem[64] = _43557 + 164
                                mem[_43557 + 100] = 32
                                mem[_43557 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43557 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44636 = mem[_43558]
                                t = _43558 + 32
                                u = _43557 + 164
                                s = mem[_43558]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43557 + floor32(mem[_43558]) + 164] = mem[_43558 + -(mem[_43558] % 32) + floor32(mem[_43558]) + 64 len mem[_43558] % 32] or Mask(8 * -(mem[_43558] % 32) + 32, -(8 * -(mem[_43558] % 32) + 32) + 256, mem[_43557 + floor32(mem[_43558]) + 164])
                                call underlyingAddress.mem[_43557 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43557 + 168 len _44636 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43557 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43557 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43557 + 168] = 32
                                    mem[_43557 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43557 + 232] = mem[idx + _43557 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43557 + -mem[64] + 264
                                mem[64] = _43557 + ceil32(return_data.size) + 165
                                mem[_43557 + 164] = return_data.size
                                mem[_43557 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43557 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43557 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43557 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43557 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43557 + ceil32(return_data.size) + 233] = mem[idx + _43557 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43557 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45569 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45570 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45570 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45570 + 36 len 28]
                                mem[64] = _45569 + 164
                                mem[_45569 + 100] = 32
                                mem[_45569 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45569 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48754 = mem[_45570]
                                t = _45570 + 32
                                u = _45569 + 164
                                s = mem[_45570]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45569 + floor32(mem[_45570]) + 164] = mem[_45570 + -(mem[_45570] % 32) + floor32(mem[_45570]) + 64 len mem[_45570] % 32] or Mask(8 * -(mem[_45570] % 32) + 32, -(8 * -(mem[_45570] % 32) + 32) + 256, mem[_45569 + floor32(mem[_45570]) + 164])
                                call underlyingAddress.mem[_45569 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45569 + 168 len _48754 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45569 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45569 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45569 + 168] = 32
                                    mem[_45569 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45569 + 232] = mem[idx + _45569 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45569 + -mem[64] + 264
                                mem[64] = _45569 + ceil32(return_data.size) + 165
                                mem[_45569 + 164] = return_data.size
                                mem[_45569 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45569 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45569 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45569 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45569 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45569 + ceil32(return_data.size) + 233] = mem[idx + _45569 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45569 + ceil32(return_data.size) + 233]
                            _45813 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45814 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45814 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45814 + 36 len 28]
                            mem[64] = _45813 + 164
                            mem[_45813 + 100] = 32
                            mem[_45813 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45813 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49479 = mem[_45814]
                            t = _45814 + 32
                            u = _45813 + 164
                            s = mem[_45814]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45813 + floor32(mem[_45814]) + 164] = mem[_45814 + -(mem[_45814] % 32) + floor32(mem[_45814]) + 64 len mem[_45814] % 32] or Mask(8 * -(mem[_45814] % 32) + 32, -(8 * -(mem[_45814] % 32) + 32) + 256, mem[_45813 + floor32(mem[_45814]) + 164])
                            call underlyingAddress.mem[_45813 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45813 + 168 len _49479 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45813 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45813 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45813 + 168] = 32
                                mem[_45813 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45813 + 232] = mem[idx + _45813 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45813 + -mem[64] + 264
                            mem[64] = _45813 + ceil32(return_data.size) + 165
                            mem[_45813 + 164] = return_data.size
                            mem[_45813 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45813 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45813 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45813 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45813 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45813 + ceil32(return_data.size) + 233] = mem[idx + _45813 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45813 + ceil32(return_data.size) + 233]
                        if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43319 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _43320 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43320 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43320 + 36 len 28]
                            mem[64] = _43319 + 164
                            mem[_43319 + 100] = 32
                            mem[_43319 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43319 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44433 = mem[_43320]
                            t = _43320 + 32
                            u = _43319 + 164
                            s = mem[_43320]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43319 + floor32(mem[_43320]) + 164] = mem[_43320 + -(mem[_43320] % 32) + floor32(mem[_43320]) + 64 len mem[_43320] % 32] or Mask(8 * -(mem[_43320] % 32) + 32, -(8 * -(mem[_43320] % 32) + 32) + 256, mem[_43319 + floor32(mem[_43320]) + 164])
                            call underlyingAddress.mem[_43319 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43319 + 168 len _44433 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43319 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43319 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43319 + 168] = 32
                                mem[_43319 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43319 + 232] = mem[idx + _43319 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43319 + -mem[64] + 264
                            mem[64] = _43319 + ceil32(return_data.size) + 165
                            mem[_43319 + 164] = return_data.size
                            mem[_43319 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43319 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43319 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43319 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43319 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43319 + ceil32(return_data.size) + 233] = mem[idx + _43319 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43319 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            _45220 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45221 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45221 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45221 + 36 len 28]
                            mem[64] = _45220 + 164
                            mem[_45220 + 100] = 32
                            mem[_45220 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45220 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48000 = mem[_45221]
                            t = _45221 + 32
                            u = mem[64]
                            s = mem[_45221]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45221])] = mem[_45221 + floor32(mem[_45221]) + -(mem[_45221] % 32) + 64 len mem[_45221] % 32] or Mask(8 * -(mem[_45221] % 32) + 32, -(8 * -(mem[_45221] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45221])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48000 + _45220 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59323 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45220 + 100]
                                _59325 = mem[_45220 + 100]
                                idx = 0
                                while idx < _59325:
                                    mem[idx + _59323 + 68] = mem[idx + _45220 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59325 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59325 + _59323 + -mem[64] + 68
                                mem[floor32(_59325) + _59323 + 68] = mem[floor32(_59325) + _59323 + -(_59325 % 32) + 100 len _59325 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59325) + _59323 + -mem[64] + 100
                            _57360 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57360] = return_data.size
                            mem[_57360 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57360 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59327 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45220 + 100]
                            _59329 = mem[_45220 + 100]
                            idx = 0
                            while idx < _59329:
                                mem[idx + _59327 + 68] = mem[idx + _45220 + 132]
                                idx = idx + 32
                                continue 
                            if not _59329 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59329 + _59327 + -mem[64] + 68
                            mem[floor32(_59329) + _59327 + 68] = mem[floor32(_59329) + _59327 + -(_59329 % 32) + 100 len _59329 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59329) + _59327 + -mem[64] + 100
                        _45565 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                        _45566 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45566 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45566 + 36 len 28]
                        mem[64] = _45565 + 164
                        mem[_45565 + 100] = 32
                        mem[_45565 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45565 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48744 = mem[_45566]
                        t = _45566 + 32
                        u = mem[64]
                        s = mem[_45566]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45566])] = mem[_45566 + floor32(mem[_45566]) + -(mem[_45566] % 32) + 64 len mem[_45566] % 32] or Mask(8 * -(mem[_45566] % 32) + 32, -(8 * -(mem[_45566] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45566])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48744 + _45565 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59331 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45565 + 100]
                            _59333 = mem[_45565 + 100]
                            idx = 0
                            while idx < _59333:
                                mem[idx + _59331 + 68] = mem[idx + _45565 + 132]
                                idx = idx + 32
                                continue 
                            if not _59333 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59333 + _59331 + -mem[64] + 68
                            mem[floor32(_59333) + _59331 + 68] = mem[floor32(_59333) + _59331 + -(_59333 % 32) + 100 len _59333 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59333) + _59331 + -mem[64] + 100
                        _57361 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57361] = return_data.size
                        mem[_57361 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57361 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59335 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45565 + 100]
                        _59337 = mem[_45565 + 100]
                        idx = 0
                        while idx < _59337:
                            mem[idx + _59335 + 68] = mem[idx + _45565 + 132]
                            idx = idx + 32
                            continue 
                        if not _59337 % 32:
                            revert with memory
                              from mem[64]
                               len _59337 + _59335 + -mem[64] + 68
                        mem[floor32(_59337) + _59335 + 68] = mem[floor32(_59337) + _59335 + -(_59337 % 32) + 100 len _59337 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59337) + _59335 + -mem[64] + 100
                else:
                    mem[64] = ceil32(return_data.size) + 261
                    mem[260] = return_data.size
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[ceil32(return_data.size) + 261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(return_data.size) + 265] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + ceil32(return_data.size) + 329] = mem[idx + 228]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[ceil32(return_data.size) + 329]
                    if not return_data.size:
                        mem[ceil32(return_data.size) + 265] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = 0
                        while idx < activeStrategies.length:
                            require idx < investmentRatioNumerators.length
                            mem[0] = 8
                            if not ext_call.return_data[0]:
                                if investmentRatioDenominator <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require investmentRatioDenominator
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(underlyingAddress)
                                staticcall underlyingAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                    if not 0 / investmentRatioDenominator:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    if caps[idx] <= 0:
                                        mem[0] = 6
                                        _43057 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                        _43058 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_43058 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43058 + 36 len 28]
                                        mem[64] = _43057 + 164
                                        mem[_43057 + 100] = 32
                                        mem[_43057 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43057 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _44248 = mem[_43058]
                                        t = _43058 + 32
                                        u = mem[64]
                                        s = mem[_43058]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[mem[64] + floor32(mem[_43058])] = mem[_43058 + floor32(mem[_43058]) + -(mem[_43058] % 32) + 64 len mem[_43058] % 32] or Mask(8 * -(mem[_43058] % 32) + 32, -(8 * -(mem[_43058] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43058])])
                                        call underlyingAddress.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _44248 + _43057 + -mem[64] + 160]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[mem[64] + 110 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            _59459 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = mem[_43057 + 100]
                                            _59461 = mem[_43057 + 100]
                                            idx = 0
                                            while idx < _59461:
                                                mem[idx + _59459 + 68] = mem[idx + _43057 + 132]
                                                idx = idx + 32
                                                continue 
                                            if not _59461 % 32:
                                                revert with memory
                                                  from mem[64]
                                                   len _59461 + _59459 + -mem[64] + 68
                                            mem[floor32(_59461) + _59459 + 68] = mem[floor32(_59461) + _59459 + -(_59461 % 32) + 100 len _59461 % 32]
                                            revert with memory
                                              from mem[64]
                                               len floor32(_59461) + _59459 + -mem[64] + 100
                                        _57377 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_57377] = return_data.size
                                        mem[_57377 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_57377 + 32]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _59463 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43057 + 100]
                                        _59465 = mem[_43057 + 100]
                                        idx = 0
                                        while idx < _59465:
                                            mem[idx + _59463 + 68] = mem[idx + _43057 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59465 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59465 + _59463 + -mem[64] + 68
                                        mem[floor32(_59465) + _59463 + 68] = mem[floor32(_59465) + _59463 + -(_59465 % 32) + 100 len _59465 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59465) + _59463 + -mem[64] + 100
                                    require ext_code.size(address(activeStrategies[idx]))
                                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require idx < caps.length
                                    mem[0] = 7
                                    if ext_call.return_data[0] >= caps[idx]:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    mem[0] = 6
                                    if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                        _44896 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                        _44897 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_44897 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44897 + 36 len 28]
                                        mem[64] = _44896 + 164
                                        mem[_44896 + 100] = 32
                                        mem[_44896 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44896 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _47454 = mem[_44897]
                                        t = _44897 + 32
                                        u = mem[64]
                                        s = mem[_44897]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[mem[64] + floor32(mem[_44897])] = mem[_44897 + floor32(mem[_44897]) + -(mem[_44897] % 32) + 64 len mem[_44897] % 32] or Mask(8 * -(mem[_44897] % 32) + 32, -(8 * -(mem[_44897] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44897])])
                                        call underlyingAddress.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _47454 + _44896 + -mem[64] + 160]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[mem[64] + 110 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            _59467 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = mem[_44896 + 100]
                                            _59469 = mem[_44896 + 100]
                                            idx = 0
                                            while idx < _59469:
                                                mem[idx + _59467 + 68] = mem[idx + _44896 + 132]
                                                idx = idx + 32
                                                continue 
                                            if not _59469 % 32:
                                                revert with memory
                                                  from mem[64]
                                                   len _59469 + _59467 + -mem[64] + 68
                                            mem[floor32(_59469) + _59467 + 68] = mem[floor32(_59469) + _59467 + -(_59469 % 32) + 100 len _59469 % 32]
                                            revert with memory
                                              from mem[64]
                                               len floor32(_59469) + _59467 + -mem[64] + 100
                                        _57378 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_57378] = return_data.size
                                        mem[_57378 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_57378 + 32]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _59471 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_44896 + 100]
                                        _59473 = mem[_44896 + 100]
                                        idx = 0
                                        while idx < _59473:
                                            mem[idx + _59471 + 68] = mem[idx + _44896 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59473 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59473 + _59471 + -mem[64] + 68
                                        mem[floor32(_59473) + _59471 + 68] = mem[floor32(_59473) + _59471 + -(_59473 % 32) + 100 len _59473 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59473) + _59471 + -mem[64] + 100
                                    _45244 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _45245 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45245 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45245 + 36 len 28]
                                    mem[64] = _45244 + 164
                                    mem[_45244 + 100] = 32
                                    mem[_45244 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45244 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48040 = mem[_45245]
                                    t = _45245 + 32
                                    u = mem[64]
                                    s = mem[_45245]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_45245])] = mem[_45245 + floor32(mem[_45245]) + -(mem[_45245] % 32) + 64 len mem[_45245] % 32] or Mask(8 * -(mem[_45245] % 32) + 32, -(8 * -(mem[_45245] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45245])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _48040 + _45244 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _59475 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_45244 + 100]
                                        _59477 = mem[_45244 + 100]
                                        idx = 0
                                        while idx < _59477:
                                            mem[idx + _59475 + 68] = mem[idx + _45244 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59477 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59477 + _59475 + -mem[64] + 68
                                        mem[floor32(_59477) + _59475 + 68] = mem[floor32(_59477) + _59475 + -(_59477 % 32) + 100 len _59477 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59477) + _59475 + -mem[64] + 100
                                    _57379 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57379] = return_data.size
                                    mem[_57379 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57379 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _59479 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45244 + 100]
                                    _59481 = mem[_45244 + 100]
                                    idx = 0
                                    while idx < _59481:
                                        mem[idx + _59479 + 68] = mem[idx + _45244 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59481 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59481 + _59479 + -mem[64] + 68
                                    mem[floor32(_59481) + _59479 + 68] = mem[floor32(_59481) + _59479 + -(_59481 % 32) + 100 len _59481 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59481) + _59479 + -mem[64] + 100
                                if not ext_call.return_data[0]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43340 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    _43341 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43341 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43341 + 36 len 28]
                                    mem[64] = _43340 + 164
                                    mem[_43340 + 100] = 32
                                    mem[_43340 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43340 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44447 = mem[_43341]
                                    t = _43341 + 32
                                    u = mem[64]
                                    s = mem[_43341]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_43341])] = mem[_43341 + floor32(mem[_43341]) + -(mem[_43341] % 32) + 64 len mem[_43341] % 32] or Mask(8 * -(mem[_43341] % 32) + 32, -(8 * -(mem[_43341] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43341])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _44447 + _43340 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _59483 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43340 + 100]
                                        _59485 = mem[_43340 + 100]
                                        idx = 0
                                        while idx < _59485:
                                            mem[idx + _59483 + 68] = mem[idx + _43340 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59485 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59485 + _59483 + -mem[64] + 68
                                        mem[floor32(_59485) + _59483 + 68] = mem[floor32(_59485) + _59483 + -(_59485 % 32) + 100 len _59485 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59485) + _59483 + -mem[64] + 100
                                    _57380 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57380] = return_data.size
                                    mem[_57380 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57380 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _59487 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43340 + 100]
                                    _59489 = mem[_43340 + 100]
                                    idx = 0
                                    while idx < _59489:
                                        mem[idx + _59487 + 68] = mem[idx + _43340 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59489 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59489 + _59487 + -mem[64] + 68
                                    mem[floor32(_59489) + _59487 + 68] = mem[floor32(_59489) + _59487 + -(_59489 % 32) + 100 len _59489 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59489) + _59487 + -mem[64] + 100
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                    _45587 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    _45588 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45588 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45588 + 36 len 28]
                                    mem[64] = _45587 + 164
                                    mem[_45587 + 100] = 32
                                    mem[_45587 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45587 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48800 = mem[_45588]
                                    t = _45588 + 32
                                    u = _45587 + 164
                                    s = mem[_45588]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45587 + floor32(mem[_45588]) + 164] = mem[_45588 + -(mem[_45588] % 32) + floor32(mem[_45588]) + 64 len mem[_45588] % 32] or Mask(8 * -(mem[_45588] % 32) + 32, -(8 * -(mem[_45588] % 32) + 32) + 256, mem[_45587 + floor32(mem[_45588]) + 164])
                                    call underlyingAddress.mem[_45587 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45587 + 168 len _48800 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45587 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45587 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45587 + 168] = 32
                                        mem[_45587 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45587 + 232] = mem[idx + _45587 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45587 + -mem[64] + 264
                                    mem[64] = _45587 + ceil32(return_data.size) + 165
                                    mem[_45587 + 164] = return_data.size
                                    mem[_45587 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45587 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45587 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45587 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45587 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45587 + ceil32(return_data.size) + 233] = mem[idx + _45587 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45587 + ceil32(return_data.size) + 233]
                                _45248 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45249 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45249 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45249 + 36 len 28]
                                mem[64] = _45248 + 164
                                mem[_45248 + 100] = 32
                                mem[_45248 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45248 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48050 = mem[_45249]
                                t = _45249 + 32
                                u = mem[64]
                                s = mem[_45249]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45249])] = mem[_45249 + floor32(mem[_45249]) + -(mem[_45249] % 32) + 64 len mem[_45249] % 32] or Mask(8 * -(mem[_45249] % 32) + 32, -(8 * -(mem[_45249] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45249])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _48050 + _45248 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59491 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45248 + 100]
                                    _59493 = mem[_45248 + 100]
                                    idx = 0
                                    while idx < _59493:
                                        mem[idx + _59491 + 68] = mem[idx + _45248 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59493 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59493 + _59491 + -mem[64] + 68
                                    mem[floor32(_59493) + _59491 + 68] = mem[floor32(_59493) + _59491 + -(_59493 % 32) + 100 len _59493 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59493) + _59491 + -mem[64] + 100
                                _57381 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57381] = return_data.size
                                mem[_57381 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57381 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59495 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45248 + 100]
                                _59497 = mem[_45248 + 100]
                                idx = 0
                                while idx < _59497:
                                    mem[idx + _59495 + 68] = mem[idx + _45248 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59497 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59497 + _59495 + -mem[64] + 68
                                mem[floor32(_59497) + _59495 + 68] = mem[floor32(_59497) + _59495 + -(_59497 % 32) + 100 len _59497 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59497) + _59495 + -mem[64] + 100
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                                revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                                if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43331 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                    _43332 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43332 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43332 + 36 len 28]
                                    mem[64] = _43331 + 164
                                    mem[_43331 + 100] = 32
                                    mem[_43331 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43331 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44442 = mem[_43332]
                                    t = _43332 + 32
                                    u = mem[64]
                                    s = mem[_43332]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_43332])] = mem[_43332 + floor32(mem[_43332]) + -(mem[_43332] % 32) + 64 len mem[_43332] % 32] or Mask(8 * -(mem[_43332] % 32) + 32, -(8 * -(mem[_43332] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43332])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _44442 + _43331 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _59411 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43331 + 100]
                                        _59413 = mem[_43331 + 100]
                                        idx = 0
                                        while idx < _59413:
                                            mem[idx + _59411 + 68] = mem[idx + _43331 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59413 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59413 + _59411 + -mem[64] + 68
                                        mem[floor32(_59413) + _59411 + 68] = mem[floor32(_59413) + _59411 + -(_59413 % 32) + 100 len _59413 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59413) + _59411 + -mem[64] + 100
                                    _57371 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57371] = return_data.size
                                    mem[_57371 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57371 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _59415 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43331 + 100]
                                    _59417 = mem[_43331 + 100]
                                    idx = 0
                                    while idx < _59417:
                                        mem[idx + _59415 + 68] = mem[idx + _43331 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59417 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59417 + _59415 + -mem[64] + 68
                                    mem[floor32(_59417) + _59415 + 68] = mem[floor32(_59417) + _59415 + -(_59417 % 32) + 100 len _59417 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59417) + _59415 + -mem[64] + 100
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    _45236 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _45237 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45237 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45237 + 36 len 28]
                                    mem[64] = _45236 + 164
                                    mem[_45236 + 100] = 32
                                    mem[_45236 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45236 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48030 = mem[_45237]
                                    t = _45237 + 32
                                    u = _45236 + 164
                                    s = mem[_45237]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45236 + floor32(mem[_45237]) + 164] = mem[_45237 + -(mem[_45237] % 32) + floor32(mem[_45237]) + 64 len mem[_45237] % 32] or Mask(8 * -(mem[_45237] % 32) + 32, -(8 * -(mem[_45237] % 32) + 32) + 256, mem[_45236 + floor32(mem[_45237]) + 164])
                                    call underlyingAddress.mem[_45236 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45236 + 168 len _48030 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45236 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45236 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45236 + 168] = 32
                                        mem[_45236 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45236 + 232] = mem[idx + _45236 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45236 + -mem[64] + 264
                                    mem[64] = _45236 + ceil32(return_data.size) + 165
                                    mem[_45236 + 164] = return_data.size
                                    mem[_45236 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45236 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45236 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45236 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45236 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45236 + ceil32(return_data.size) + 233] = mem[idx + _45236 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45236 + ceil32(return_data.size) + 233]
                                _45578 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _45579 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45579 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45579 + 36 len 28]
                                mem[64] = _45578 + 164
                                mem[_45578 + 100] = 32
                                mem[_45578 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45578 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48776 = mem[_45579]
                                t = _45579 + 32
                                u = _45578 + 164
                                s = mem[_45579]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45578 + floor32(mem[_45579]) + 164] = mem[_45579 + -(mem[_45579] % 32) + floor32(mem[_45579]) + 64 len mem[_45579] % 32] or Mask(8 * -(mem[_45579] % 32) + 32, -(8 * -(mem[_45579] % 32) + 32) + 256, mem[_45578 + floor32(mem[_45579]) + 164])
                                call underlyingAddress.mem[_45578 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45578 + 168 len _48776 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45578 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45578 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45578 + 168] = 32
                                    mem[_45578 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45578 + 232] = mem[idx + _45578 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45578 + -mem[64] + 264
                                mem[64] = _45578 + ceil32(return_data.size) + 165
                                mem[_45578 + 164] = return_data.size
                                mem[_45578 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45578 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45578 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45578 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45578 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45578 + ceil32(return_data.size) + 233] = mem[idx + _45578 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45578 + ceil32(return_data.size) + 233]
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43565 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43566 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43566 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43566 + 36 len 28]
                                mem[64] = _43565 + 164
                                mem[_43565 + 100] = 32
                                mem[_43565 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43565 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44644 = mem[_43566]
                                t = _43566 + 32
                                u = _43565 + 164
                                s = mem[_43566]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43565 + floor32(mem[_43566]) + 164] = mem[_43566 + -(mem[_43566] % 32) + floor32(mem[_43566]) + 64 len mem[_43566] % 32] or Mask(8 * -(mem[_43566] % 32) + 32, -(8 * -(mem[_43566] % 32) + 32) + 256, mem[_43565 + floor32(mem[_43566]) + 164])
                                call underlyingAddress.mem[_43565 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43565 + 168 len _44644 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43565 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43565 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43565 + 168] = 32
                                    mem[_43565 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43565 + 232] = mem[idx + _43565 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43565 + -mem[64] + 264
                                mem[64] = _43565 + ceil32(return_data.size) + 165
                                mem[_43565 + 164] = return_data.size
                                mem[_43565 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43565 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43565 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43565 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43565 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43565 + ceil32(return_data.size) + 233] = mem[idx + _43565 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43565 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                _45821 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45822 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45822 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45822 + 36 len 28]
                                mem[64] = _45821 + 164
                                mem[_45821 + 100] = 32
                                mem[_45821 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45821 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _49508 = mem[_45822]
                                t = _45822 + 32
                                u = _45821 + 164
                                s = mem[_45822]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45821 + floor32(mem[_45822]) + 164] = mem[_45822 + -(mem[_45822] % 32) + floor32(mem[_45822]) + 64 len mem[_45822] % 32] or Mask(8 * -(mem[_45822] % 32) + 32, -(8 * -(mem[_45822] % 32) + 32) + 256, mem[_45821 + floor32(mem[_45822]) + 164])
                                call underlyingAddress.mem[_45821 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45821 + 168 len _49508 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45821 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45821 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45821 + 168] = 32
                                    mem[_45821 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45821 + 232] = mem[idx + _45821 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45821 + -mem[64] + 264
                                mem[64] = _45821 + ceil32(return_data.size) + 165
                                mem[_45821 + 164] = return_data.size
                                mem[_45821 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45821 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45821 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45821 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45821 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45821 + ceil32(return_data.size) + 233] = mem[idx + _45821 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45821 + ceil32(return_data.size) + 233]
                            _45582 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45583 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45583 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45583 + 36 len 28]
                            mem[64] = _45582 + 164
                            mem[_45582 + 100] = 32
                            mem[_45582 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45582 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48786 = mem[_45583]
                            t = _45583 + 32
                            u = mem[64]
                            s = mem[_45583]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45583])] = mem[_45583 + floor32(mem[_45583]) + -(mem[_45583] % 32) + 64 len mem[_45583] % 32] or Mask(8 * -(mem[_45583] % 32) + 32, -(8 * -(mem[_45583] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45583])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48786 + _45582 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59443 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45582 + 100]
                                _59445 = mem[_45582 + 100]
                                idx = 0
                                while idx < _59445:
                                    mem[idx + _59443 + 68] = mem[idx + _45582 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59445 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59445 + _59443 + -mem[64] + 68
                                mem[floor32(_59445) + _59443 + 68] = mem[floor32(_59445) + _59443 + -(_59445 % 32) + 100 len _59445 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59445) + _59443 + -mem[64] + 100
                            _57375 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57375] = return_data.size
                            mem[_57375 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57375 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59447 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45582 + 100]
                            _59449 = mem[_45582 + 100]
                            idx = 0
                            while idx < _59449:
                                mem[idx + _59447 + 68] = mem[idx + _45582 + 132]
                                idx = idx + 32
                                continue 
                            if not _59449 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59449 + _59447 + -mem[64] + 68
                            mem[floor32(_59449) + _59447 + 68] = mem[floor32(_59449) + _59447 + -(_59449 % 32) + 100 len _59449 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59449) + _59447 + -mem[64] + 100
                    else:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                        mem[ceil32(return_data.size) + 265] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = 0
                        while idx < activeStrategies.length:
                            require idx < investmentRatioNumerators.length
                            mem[0] = 8
                            if not ext_call.return_data[0]:
                                if investmentRatioDenominator <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require investmentRatioDenominator
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(underlyingAddress)
                                staticcall underlyingAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / investmentRatioDenominator >= ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    if caps[idx] <= 0:
                                        mem[0] = 6
                                        _43352 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = ext_call.return_data[0]
                                        _43353 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_43353 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43353 + 36 len 28]
                                        mem[64] = _43352 + 164
                                        mem[_43352 + 100] = 32
                                        mem[_43352 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43352 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _44456 = mem[_43353]
                                        t = _43353 + 32
                                        u = mem[64]
                                        s = mem[_43353]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[mem[64] + floor32(mem[_43353])] = mem[_43353 + floor32(mem[_43353]) + -(mem[_43353] % 32) + 64 len mem[_43353] % 32] or Mask(8 * -(mem[_43353] % 32) + 32, -(8 * -(mem[_43353] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43353])])
                                        call underlyingAddress.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _44456 + _43352 + -mem[64] + 160]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[mem[64] + 110 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            _59579 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = mem[_43352 + 100]
                                            _59581 = mem[_43352 + 100]
                                            idx = 0
                                            while idx < _59581:
                                                mem[idx + _59579 + 68] = mem[idx + _43352 + 132]
                                                idx = idx + 32
                                                continue 
                                            if not _59581 % 32:
                                                revert with memory
                                                  from mem[64]
                                                   len _59581 + _59579 + -mem[64] + 68
                                            mem[floor32(_59581) + _59579 + 68] = mem[floor32(_59581) + _59579 + -(_59581 % 32) + 100 len _59581 % 32]
                                            revert with memory
                                              from mem[64]
                                               len floor32(_59581) + _59579 + -mem[64] + 100
                                        _57392 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_57392] = return_data.size
                                        mem[_57392 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_57392 + 32]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _59583 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43352 + 100]
                                        _59585 = mem[_43352 + 100]
                                        idx = 0
                                        while idx < _59585:
                                            mem[idx + _59583 + 68] = mem[idx + _43352 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59585 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59585 + _59583 + -mem[64] + 68
                                        mem[floor32(_59585) + _59583 + 68] = mem[floor32(_59585) + _59583 + -(_59585 % 32) + 100 len _59585 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59585) + _59583 + -mem[64] + 100
                                    require ext_code.size(address(activeStrategies[idx]))
                                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require idx < caps.length
                                    mem[0] = 7
                                    if ext_call.return_data[0] >= caps[idx]:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    mem[0] = 6
                                    if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                        _45264 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                        _45265 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_45265 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45265 + 36 len 28]
                                        mem[64] = _45264 + 164
                                        mem[_45264 + 100] = 32
                                        mem[_45264 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45264 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _48080 = mem[_45265]
                                        t = _45265 + 32
                                        u = _45264 + 164
                                        s = mem[_45265]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[_45264 + floor32(mem[_45265]) + 164] = mem[_45265 + -(mem[_45265] % 32) + floor32(mem[_45265]) + 64 len mem[_45265] % 32] or Mask(8 * -(mem[_45265] % 32) + 32, -(8 * -(mem[_45265] % 32) + 32) + 256, mem[_45264 + floor32(mem[_45265]) + 164])
                                        call underlyingAddress.mem[_45264 + 164 len 4] with:
                                             gas gas_remaining wei
                                            args mem[_45264 + 168 len _48080 - 4]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[_45264 + 274 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            mem[_45264 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_45264 + 168] = 32
                                            mem[_45264 + 200] = 32
                                            idx = 0
                                            while idx < 32:
                                                mem[idx + _45264 + 232] = mem[idx + _45264 + 132]
                                                idx = idx + 32
                                                continue 
                                            revert with memory
                                              from mem[64]
                                               len _45264 + -mem[64] + 264
                                        mem[64] = _45264 + ceil32(return_data.size) + 165
                                        mem[_45264 + 164] = return_data.size
                                        mem[_45264 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_45264 + 196]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45264 + ceil32(return_data.size) + 275 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_45264 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45264 + ceil32(return_data.size) + 169] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45264 + ceil32(return_data.size) + 233] = mem[idx + _45264 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_45264 + ceil32(return_data.size) + 233]
                                    _45600 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    _45601 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45601 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45601 + 36 len 28]
                                    mem[64] = _45600 + 164
                                    mem[_45600 + 100] = 32
                                    mem[_45600 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45600 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48832 = mem[_45601]
                                    t = _45601 + 32
                                    u = _45600 + 164
                                    s = mem[_45601]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45600 + floor32(mem[_45601]) + 164] = mem[_45601 + -(mem[_45601] % 32) + floor32(mem[_45601]) + 64 len mem[_45601] % 32] or Mask(8 * -(mem[_45601] % 32) + 32, -(8 * -(mem[_45601] % 32) + 32) + 256, mem[_45600 + floor32(mem[_45601]) + 164])
                                    call underlyingAddress.mem[_45600 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45600 + 168 len _48832 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45600 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45600 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45600 + 168] = 32
                                        mem[_45600 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45600 + 232] = mem[idx + _45600 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45600 + -mem[64] + 264
                                    mem[64] = _45600 + ceil32(return_data.size) + 165
                                    mem[_45600 + 164] = return_data.size
                                    mem[_45600 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45600 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45600 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45600 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45600 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45600 + ceil32(return_data.size) + 233] = mem[idx + _45600 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45600 + ceil32(return_data.size) + 233]
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43068 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43069 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43069 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43069 + 36 len 28]
                                    mem[64] = _43068 + 164
                                    mem[_43068 + 100] = 32
                                    mem[_43068 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43068 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44255 = mem[_43069]
                                    t = _43069 + 32
                                    u = mem[64]
                                    s = mem[_43069]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_43069])] = mem[_43069 + floor32(mem[_43069]) + -(mem[_43069] % 32) + 64 len mem[_43069] % 32] or Mask(8 * -(mem[_43069] % 32) + 32, -(8 * -(mem[_43069] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43069])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _44255 + _43068 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _59555 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43068 + 100]
                                        _59557 = mem[_43068 + 100]
                                        idx = 0
                                        while idx < _59557:
                                            mem[idx + _59555 + 68] = mem[idx + _43068 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59557 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59557 + _59555 + -mem[64] + 68
                                        mem[floor32(_59557) + _59555 + 68] = mem[floor32(_59557) + _59555 + -(_59557 % 32) + 100 len _59557 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59557) + _59555 + -mem[64] + 100
                                    _57389 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57389] = return_data.size
                                    mem[_57389 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57389 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _59559 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43068 + 100]
                                    _59561 = mem[_43068 + 100]
                                    idx = 0
                                    while idx < _59561:
                                        mem[idx + _59559 + 68] = mem[idx + _43068 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59561 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59561 + _59559 + -mem[64] + 68
                                    mem[floor32(_59561) + _59559 + 68] = mem[floor32(_59561) + _59559 + -(_59561 % 32) + 100 len _59561 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59561) + _59559 + -mem[64] + 100
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] >= 0 / investmentRatioDenominator:
                                    _45260 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _45261 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45261 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45261 + 36 len 28]
                                    mem[64] = _45260 + 164
                                    mem[_45260 + 100] = 32
                                    mem[_45260 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45260 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48070 = mem[_45261]
                                    t = _45261 + 32
                                    u = _45260 + 164
                                    s = mem[_45261]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45260 + floor32(mem[_45261]) + 164] = mem[_45261 + -(mem[_45261] % 32) + floor32(mem[_45261]) + 64 len mem[_45261] % 32] or Mask(8 * -(mem[_45261] % 32) + 32, -(8 * -(mem[_45261] % 32) + 32) + 256, mem[_45260 + floor32(mem[_45261]) + 164])
                                    call underlyingAddress.mem[_45260 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45260 + 168 len _48070 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45260 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45260 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45260 + 168] = 32
                                        mem[_45260 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45260 + 232] = mem[idx + _45260 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45260 + -mem[64] + 264
                                    mem[64] = _45260 + ceil32(return_data.size) + 165
                                    mem[_45260 + 164] = return_data.size
                                    mem[_45260 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45260 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45260 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45260 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45260 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45260 + ceil32(return_data.size) + 233] = mem[idx + _45260 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45260 + ceil32(return_data.size) + 233]
                                _44908 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44909 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44909 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44909 + 36 len 28]
                                mem[64] = _44908 + 164
                                mem[_44908 + 100] = 32
                                mem[_44908 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44908 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47470 = mem[_44909]
                                t = _44909 + 32
                                u = mem[64]
                                s = mem[_44909]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_44909])] = mem[_44909 + floor32(mem[_44909]) + -(mem[_44909] % 32) + 64 len mem[_44909] % 32] or Mask(8 * -(mem[_44909] % 32) + 32, -(8 * -(mem[_44909] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44909])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47470 + _44908 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59563 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_44908 + 100]
                                    _59565 = mem[_44908 + 100]
                                    idx = 0
                                    while idx < _59565:
                                        mem[idx + _59563 + 68] = mem[idx + _44908 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59565 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59565 + _59563 + -mem[64] + 68
                                    mem[floor32(_59565) + _59563 + 68] = mem[floor32(_59565) + _59563 + -(_59565 % 32) + 100 len _59565 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59565) + _59563 + -mem[64] + 100
                                _57390 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57390] = return_data.size
                                mem[_57390 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57390 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59567 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_44908 + 100]
                                _59569 = mem[_44908 + 100]
                                idx = 0
                                while idx < _59569:
                                    mem[idx + _59567 + 68] = mem[idx + _44908 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59569 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59569 + _59567 + -mem[64] + 68
                                mem[floor32(_59569) + _59567 + 68] = mem[floor32(_59569) + _59567 + -(_59569 % 32) + 100 len _59569 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59569) + _59567 + -mem[64] + 100
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                                revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                                if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43343 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                    _43344 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43344 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43344 + 36 len 28]
                                    mem[64] = _43343 + 164
                                    mem[_43343 + 100] = 32
                                    mem[_43343 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43343 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44451 = mem[_43344]
                                    t = _43344 + 32
                                    u = mem[64]
                                    s = mem[_43344]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_43344])] = mem[_43344 + floor32(mem[_43344]) + -(mem[_43344] % 32) + 64 len mem[_43344] % 32] or Mask(8 * -(mem[_43344] % 32) + 32, -(8 * -(mem[_43344] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43344])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _44451 + _43343 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _59507 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43343 + 100]
                                        _59509 = mem[_43343 + 100]
                                        idx = 0
                                        while idx < _59509:
                                            mem[idx + _59507 + 68] = mem[idx + _43343 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59509 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59509 + _59507 + -mem[64] + 68
                                        mem[floor32(_59509) + _59507 + 68] = mem[floor32(_59509) + _59507 + -(_59509 % 32) + 100 len _59509 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59509) + _59507 + -mem[64] + 100
                                    _57383 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57383] = return_data.size
                                    mem[_57383 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57383 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _59511 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43343 + 100]
                                    _59513 = mem[_43343 + 100]
                                    idx = 0
                                    while idx < _59513:
                                        mem[idx + _59511 + 68] = mem[idx + _43343 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59513 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59513 + _59511 + -mem[64] + 68
                                    mem[floor32(_59513) + _59511 + 68] = mem[floor32(_59513) + _59511 + -(_59513 % 32) + 100 len _59513 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59513) + _59511 + -mem[64] + 100
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    _45252 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _45253 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45253 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45253 + 36 len 28]
                                    mem[64] = _45252 + 164
                                    mem[_45252 + 100] = 32
                                    mem[_45252 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45252 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48060 = mem[_45253]
                                    t = _45253 + 32
                                    u = _45252 + 164
                                    s = mem[_45253]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45252 + floor32(mem[_45253]) + 164] = mem[_45253 + -(mem[_45253] % 32) + floor32(mem[_45253]) + 64 len mem[_45253] % 32] or Mask(8 * -(mem[_45253] % 32) + 32, -(8 * -(mem[_45253] % 32) + 32) + 256, mem[_45252 + floor32(mem[_45253]) + 164])
                                    call underlyingAddress.mem[_45252 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45252 + 168 len _48060 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45252 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45252 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45252 + 168] = 32
                                        mem[_45252 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45252 + 232] = mem[idx + _45252 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45252 + -mem[64] + 264
                                    mem[64] = _45252 + ceil32(return_data.size) + 165
                                    mem[_45252 + 164] = return_data.size
                                    mem[_45252 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45252 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45252 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45252 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45252 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45252 + ceil32(return_data.size) + 233] = mem[idx + _45252 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45252 + ceil32(return_data.size) + 233]
                                _45591 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _45592 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45592 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45592 + 36 len 28]
                                mem[64] = _45591 + 164
                                mem[_45591 + 100] = 32
                                mem[_45591 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45591 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48808 = mem[_45592]
                                t = _45592 + 32
                                u = _45591 + 164
                                s = mem[_45592]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45591 + floor32(mem[_45592]) + 164] = mem[_45592 + -(mem[_45592] % 32) + floor32(mem[_45592]) + 64 len mem[_45592] % 32] or Mask(8 * -(mem[_45592] % 32) + 32, -(8 * -(mem[_45592] % 32) + 32) + 256, mem[_45591 + floor32(mem[_45592]) + 164])
                                call underlyingAddress.mem[_45591 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45591 + 168 len _48808 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45591 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45591 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45591 + 168] = 32
                                    mem[_45591 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45591 + 232] = mem[idx + _45591 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45591 + -mem[64] + 264
                                mem[64] = _45591 + ceil32(return_data.size) + 165
                                mem[_45591 + 164] = return_data.size
                                mem[_45591 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45591 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45591 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45591 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45591 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45591 + ceil32(return_data.size) + 233] = mem[idx + _45591 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45591 + ceil32(return_data.size) + 233]
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43573 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43574 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43574 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43574 + 36 len 28]
                                mem[64] = _43573 + 164
                                mem[_43573 + 100] = 32
                                mem[_43573 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43573 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44652 = mem[_43574]
                                t = _43574 + 32
                                u = _43573 + 164
                                s = mem[_43574]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43573 + floor32(mem[_43574]) + 164] = mem[_43574 + -(mem[_43574] % 32) + floor32(mem[_43574]) + 64 len mem[_43574] % 32] or Mask(8 * -(mem[_43574] % 32) + 32, -(8 * -(mem[_43574] % 32) + 32) + 256, mem[_43573 + floor32(mem[_43574]) + 164])
                                call underlyingAddress.mem[_43573 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43573 + 168 len _44652 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43573 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43573 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43573 + 168] = 32
                                    mem[_43573 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43573 + 232] = mem[idx + _43573 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43573 + -mem[64] + 264
                                mem[64] = _43573 + ceil32(return_data.size) + 165
                                mem[_43573 + 164] = return_data.size
                                mem[_43573 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43573 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43573 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43573 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43573 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43573 + ceil32(return_data.size) + 233] = mem[idx + _43573 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43573 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45595 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45596 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45596 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45596 + 36 len 28]
                                mem[64] = _45595 + 164
                                mem[_45595 + 100] = 32
                                mem[_45595 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45595 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48818 = mem[_45596]
                                t = _45596 + 32
                                u = mem[64]
                                s = mem[_45596]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45596])] = mem[_45596 + floor32(mem[_45596]) + -(mem[_45596] % 32) + 64 len mem[_45596] % 32] or Mask(8 * -(mem[_45596] % 32) + 32, -(8 * -(mem[_45596] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45596])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _48818 + _45595 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59539 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45595 + 100]
                                    _59541 = mem[_45595 + 100]
                                    idx = 0
                                    while idx < _59541:
                                        mem[idx + _59539 + 68] = mem[idx + _45595 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59541 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59541 + _59539 + -mem[64] + 68
                                    mem[floor32(_59541) + _59539 + 68] = mem[floor32(_59541) + _59539 + -(_59541 % 32) + 100 len _59541 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59541) + _59539 + -mem[64] + 100
                                _57387 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57387] = return_data.size
                                mem[_57387 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57387 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59543 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45595 + 100]
                                _59545 = mem[_45595 + 100]
                                idx = 0
                                while idx < _59545:
                                    mem[idx + _59543 + 68] = mem[idx + _45595 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59545 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59545 + _59543 + -mem[64] + 68
                                mem[floor32(_59545) + _59543 + 68] = mem[floor32(_59545) + _59543 + -(_59545 % 32) + 100 len _59545 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59545) + _59543 + -mem[64] + 100
                            _45829 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45830 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45830 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45830 + 36 len 28]
                            mem[64] = _45829 + 164
                            mem[_45829 + 100] = 32
                            mem[_45829 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45829 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49537 = mem[_45830]
                            t = _45830 + 32
                            u = mem[64]
                            s = mem[_45830]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45830])] = mem[_45830 + floor32(mem[_45830]) + -(mem[_45830] % 32) + 64 len mem[_45830] % 32] or Mask(8 * -(mem[_45830] % 32) + 32, -(8 * -(mem[_45830] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45830])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _49537 + _45829 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59547 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45829 + 100]
                                _59549 = mem[_45829 + 100]
                                idx = 0
                                while idx < _59549:
                                    mem[idx + _59547 + 68] = mem[idx + _45829 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59549 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59549 + _59547 + -mem[64] + 68
                                mem[floor32(_59549) + _59547 + 68] = mem[floor32(_59549) + _59547 + -(_59549 % 32) + 100 len _59549 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59549) + _59547 + -mem[64] + 100
                            _57388 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57388] = return_data.size
                            mem[_57388 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57388 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59551 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45829 + 100]
                            _59553 = mem[_45829 + 100]
                            idx = 0
                            while idx < _59553:
                                mem[idx + _59551 + 68] = mem[idx + _45829 + 132]
                                idx = idx + 32
                                continue 
                            if not _59553 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59553 + _59551 + -mem[64] + 68
                            mem[floor32(_59553) + _59551 + 68] = mem[floor32(_59553) + _59551 + -(_59553 % 32) + 100 len _59553 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59553) + _59551 + -mem[64] + 100
            require ext_code.size(underlyingAddress)
            staticcall underlyingAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < arg1:
                revert with 0, 32, 41, 0xfe73706c697474657220646f6573206e6f7420686176652073756666696369656e742062616c616e63, mem[205 len 23]
            mem[132] = address(vaultAddress)
            mem[164] = arg1
            mem[96] = 68
            mem[128 len 4] = unknown_0xa9059cbb(?????)
            mem[64] = 260
            mem[196] = 32
            mem[228] = 'SafeERC20: low-level call failed'
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(underlyingAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = 0, address(vaultAddress), Mask(224, 32, arg1) >> 32
            mem[352 len 4] = 0
            call underlyingAddress with:
               funct uint32(stor2)
                 gas gas_remaining wei
                args arg1, 0, mem[324 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with unknown_0xa9059cbb(?????), address(vaultAddress), arg1
                if not uint32(this.address), Mask(224, 0, stor2):
                    revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                mem[264] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[260] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = 0
                while idx < activeStrategies.length:
                    require idx < investmentRatioNumerators.length
                    mem[0] = 8
                    if not ext_call.return_data[0]:
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                            if not 0 / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43002 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _43003 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43003 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43003 + 36 len 28]
                                mem[64] = _43002 + 164
                                mem[_43002 + 100] = 32
                                mem[_43002 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43002 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44213 = mem[_43003]
                                t = _43003 + 32
                                u = mem[64]
                                s = mem[_43003]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_43003])] = mem[_43003 + floor32(mem[_43003]) + -(mem[_43003] % 32) + 64 len mem[_43003] % 32] or Mask(8 * -(mem[_43003] % 32) + 32, -(8 * -(mem[_43003] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43003])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _44213 + _43002 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _58979 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43002 + 100]
                                    _58981 = mem[_43002 + 100]
                                    idx = 0
                                    while idx < _58981:
                                        mem[idx + _58979 + 68] = mem[idx + _43002 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _58981 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _58981 + _58979 + -mem[64] + 68
                                    mem[floor32(_58981) + _58979 + 68] = mem[floor32(_58981) + _58979 + -(_58981 % 32) + 100 len _58981 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_58981) + _58979 + -mem[64] + 100
                                _57317 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57317] = return_data.size
                                mem[_57317 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57317 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _58983 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43002 + 100]
                                _58985 = mem[_43002 + 100]
                                idx = 0
                                while idx < _58985:
                                    mem[idx + _58983 + 68] = mem[idx + _43002 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58985 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58985 + _58983 + -mem[64] + 68
                                mem[floor32(_58985) + _58983 + 68] = mem[floor32(_58985) + _58983 + -(_58985 % 32) + 100 len _58985 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58985) + _58983 + -mem[64] + 100
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                _44836 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44837 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44837 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44837 + 36 len 28]
                                mem[64] = _44836 + 164
                                mem[_44836 + 100] = 32
                                mem[_44836 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44836 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47374 = mem[_44837]
                                t = _44837 + 32
                                u = _44836 + 164
                                s = mem[_44837]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_44836 + floor32(mem[_44837]) + 164] = mem[_44837 + -(mem[_44837] % 32) + floor32(mem[_44837]) + 64 len mem[_44837] % 32] or Mask(8 * -(mem[_44837] % 32) + 32, -(8 * -(mem[_44837] % 32) + 32) + 256, mem[_44836 + floor32(mem[_44837]) + 164])
                                call underlyingAddress.mem[_44836 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_44836 + 168 len _47374 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44836 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_44836 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44836 + 168] = 32
                                    mem[_44836 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44836 + 232] = mem[idx + _44836 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _44836 + -mem[64] + 264
                                mem[64] = _44836 + ceil32(return_data.size) + 165
                                mem[_44836 + 164] = return_data.size
                                mem[_44836 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_44836 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_44836 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_44836 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_44836 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _44836 + ceil32(return_data.size) + 233] = mem[idx + _44836 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_44836 + ceil32(return_data.size) + 233]
                            _45164 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = 0 / investmentRatioDenominator
                            _45165 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45165 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45165 + 36 len 28]
                            mem[64] = _45164 + 164
                            mem[_45164 + 100] = 32
                            mem[_45164 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45164 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47890 = mem[_45165]
                            t = _45165 + 32
                            u = mem[64]
                            s = mem[_45165]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45165])] = mem[_45165 + floor32(mem[_45165]) + -(mem[_45165] % 32) + 64 len mem[_45165] % 32] or Mask(8 * -(mem[_45165] % 32) + 32, -(8 * -(mem[_45165] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45165])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _47890 + _45164 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _58995 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45164 + 100]
                                _58997 = mem[_45164 + 100]
                                idx = 0
                                while idx < _58997:
                                    mem[idx + _58995 + 68] = mem[idx + _45164 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _58997 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _58997 + _58995 + -mem[64] + 68
                                mem[floor32(_58997) + _58995 + 68] = mem[floor32(_58997) + _58995 + -(_58997 % 32) + 100 len _58997 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_58997) + _58995 + -mem[64] + 100
                            _57319 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57319] = return_data.size
                            mem[_57319 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57319 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _58999 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45164 + 100]
                            _59001 = mem[_45164 + 100]
                            idx = 0
                            while idx < _59001:
                                mem[idx + _58999 + 68] = mem[idx + _45164 + 132]
                                idx = idx + 32
                                continue 
                            if not _59001 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59001 + _58999 + -mem[64] + 68
                            mem[floor32(_59001) + _58999 + 68] = mem[floor32(_59001) + _58999 + -(_59001 % 32) + 100 len _59001 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59001) + _58999 + -mem[64] + 100
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43280 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43281 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43281 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43281 + 36 len 28]
                            mem[64] = _43280 + 164
                            mem[_43280 + 100] = 32
                            mem[_43280 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43280 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44402 = mem[_43281]
                            t = _43281 + 32
                            u = _43280 + 164
                            s = mem[_43281]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43280 + floor32(mem[_43281]) + 164] = mem[_43281 + -(mem[_43281] % 32) + floor32(mem[_43281]) + 64 len mem[_43281] % 32] or Mask(8 * -(mem[_43281] % 32) + 32, -(8 * -(mem[_43281] % 32) + 32) + 256, mem[_43280 + floor32(mem[_43281]) + 164])
                            call underlyingAddress.mem[_43280 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43280 + 168 len _44402 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43280 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43280 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43280 + 168] = 32
                                mem[_43280 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43280 + 232] = mem[idx + _43280 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43280 + -mem[64] + 264
                            mem[64] = _43280 + ceil32(return_data.size) + 165
                            mem[_43280 + 164] = return_data.size
                            mem[_43280 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43280 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43280 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43280 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43280 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43280 + ceil32(return_data.size) + 233] = mem[idx + _43280 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43280 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45168 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45169 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45169 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45169 + 36 len 28]
                            mem[64] = _45168 + 164
                            mem[_45168 + 100] = 32
                            mem[_45168 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45168 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47900 = mem[_45169]
                            t = _45169 + 32
                            u = mem[64]
                            s = mem[_45169]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45169])] = mem[_45169 + floor32(mem[_45169]) + -(mem[_45169] % 32) + 64 len mem[_45169] % 32] or Mask(8 * -(mem[_45169] % 32) + 32, -(8 * -(mem[_45169] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45169])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _47900 + _45168 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59011 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45168 + 100]
                                _59013 = mem[_45168 + 100]
                                idx = 0
                                while idx < _59013:
                                    mem[idx + _59011 + 68] = mem[idx + _45168 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59013 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59013 + _59011 + -mem[64] + 68
                                mem[floor32(_59013) + _59011 + 68] = mem[floor32(_59013) + _59011 + -(_59013 % 32) + 100 len _59013 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59013) + _59011 + -mem[64] + 100
                            _57321 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57321] = return_data.size
                            mem[_57321 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57321 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59015 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45168 + 100]
                            _59017 = mem[_45168 + 100]
                            idx = 0
                            while idx < _59017:
                                mem[idx + _59015 + 68] = mem[idx + _45168 + 132]
                                idx = idx + 32
                                continue 
                            if not _59017 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59017 + _59015 + -mem[64] + 68
                            mem[floor32(_59017) + _59015 + 68] = mem[floor32(_59017) + _59015 + -(_59017 % 32) + 100 len _59017 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59017) + _59015 + -mem[64] + 100
                        _45522 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45523 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45523 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45523 + 36 len 28]
                        mem[64] = _45522 + 164
                        mem[_45522 + 100] = 32
                        mem[_45522 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45522 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48640 = mem[_45523]
                        t = _45523 + 32
                        u = mem[64]
                        s = mem[_45523]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45523])] = mem[_45523 + floor32(mem[_45523]) + -(mem[_45523] % 32) + 64 len mem[_45523] % 32] or Mask(8 * -(mem[_45523] % 32) + 32, -(8 * -(mem[_45523] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45523])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48640 + _45522 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59019 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45522 + 100]
                            _59021 = mem[_45522 + 100]
                            idx = 0
                            while idx < _59021:
                                mem[idx + _59019 + 68] = mem[idx + _45522 + 132]
                                idx = idx + 32
                                continue 
                            if not _59021 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59021 + _59019 + -mem[64] + 68
                            mem[floor32(_59021) + _59019 + 68] = mem[floor32(_59021) + _59019 + -(_59021 % 32) + 100 len _59021 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59021) + _59019 + -mem[64] + 100
                        _57322 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57322] = return_data.size
                        mem[_57322 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57322 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59023 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45522 + 100]
                        _59025 = mem[_45522 + 100]
                        idx = 0
                        while idx < _59025:
                            mem[idx + _59023 + 68] = mem[idx + _45522 + 132]
                            idx = idx + 32
                            continue 
                        if not _59025 % 32:
                            revert with memory
                              from mem[64]
                               len _59025 + _59023 + -mem[64] + 68
                        mem[floor32(_59025) + _59023 + 68] = mem[floor32(_59025) + _59023 + -(_59025 % 32) + 100 len _59025 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59025) + _59023 + -mem[64] + 100
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                        revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if investmentRatioDenominator <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require investmentRatioDenominator
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                        if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43271 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _43272 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43272 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43272 + 36 len 28]
                            mem[64] = _43271 + 164
                            mem[_43271 + 100] = 32
                            mem[_43271 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43271 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44397 = mem[_43272]
                            t = _43272 + 32
                            u = _43271 + 164
                            s = mem[_43272]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43271 + floor32(mem[_43272]) + 164] = mem[_43272 + -(mem[_43272] % 32) + floor32(mem[_43272]) + 64 len mem[_43272] % 32] or Mask(8 * -(mem[_43272] % 32) + 32, -(8 * -(mem[_43272] % 32) + 32) + 256, mem[_43271 + floor32(mem[_43272]) + 164])
                            call underlyingAddress.mem[_43271 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43271 + 168 len _44397 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43271 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43271 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43271 + 168] = 32
                                mem[_43271 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43271 + 232] = mem[idx + _43271 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43271 + -mem[64] + 264
                            mem[64] = _43271 + ceil32(return_data.size) + 165
                            mem[_43271 + 164] = return_data.size
                            mem[_43271 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43271 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43271 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43271 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43271 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43271 + ceil32(return_data.size) + 233] = mem[idx + _43271 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43271 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] >= investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            _45513 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _45514 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45514 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45514 + 36 len 28]
                            mem[64] = _45513 + 164
                            mem[_45513 + 100] = 32
                            mem[_45513 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45513 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48616 = mem[_45514]
                            t = _45514 + 32
                            u = _45513 + 164
                            s = mem[_45514]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45513 + floor32(mem[_45514]) + 164] = mem[_45514 + -(mem[_45514] % 32) + floor32(mem[_45514]) + 64 len mem[_45514] % 32] or Mask(8 * -(mem[_45514] % 32) + 32, -(8 * -(mem[_45514] % 32) + 32) + 256, mem[_45513 + floor32(mem[_45514]) + 164])
                            call underlyingAddress.mem[_45513 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45513 + 168 len _48616 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45513 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45513 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45513 + 168] = 32
                                mem[_45513 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45513 + 232] = mem[idx + _45513 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45513 + -mem[64] + 264
                            mem[64] = _45513 + ceil32(return_data.size) + 165
                            mem[_45513 + 164] = return_data.size
                            mem[_45513 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45513 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45513 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45513 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45513 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45513 + ceil32(return_data.size) + 233] = mem[idx + _45513 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45513 + ceil32(return_data.size) + 233]
                        _45156 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45157 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45157 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45157 + 36 len 28]
                        mem[64] = _45156 + 164
                        mem[_45156 + 100] = 32
                        mem[_45156 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45156 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _47880 = mem[_45157]
                        t = _45157 + 32
                        u = mem[64]
                        s = mem[_45157]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45157])] = mem[_45157 + floor32(mem[_45157]) + -(mem[_45157] % 32) + 64 len mem[_45157] % 32] or Mask(8 * -(mem[_45157] % 32) + 32, -(8 * -(mem[_45157] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45157])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _47880 + _45156 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _58939 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45156 + 100]
                            _58941 = mem[_45156 + 100]
                            idx = 0
                            while idx < _58941:
                                mem[idx + _58939 + 68] = mem[idx + _45156 + 132]
                                idx = idx + 32
                                continue 
                            if not _58941 % 32:
                                revert with memory
                                  from mem[64]
                                   len _58941 + _58939 + -mem[64] + 68
                            mem[floor32(_58941) + _58939 + 68] = mem[floor32(_58941) + _58939 + -(_58941 % 32) + 100 len _58941 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_58941) + _58939 + -mem[64] + 100
                        _57312 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57312] = return_data.size
                        mem[_57312 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57312 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _58943 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45156 + 100]
                        _58945 = mem[_45156 + 100]
                        idx = 0
                        while idx < _58945:
                            mem[idx + _58943 + 68] = mem[idx + _45156 + 132]
                            idx = idx + 32
                            continue 
                        if not _58945 % 32:
                            revert with memory
                              from mem[64]
                               len _58945 + _58943 + -mem[64] + 68
                        mem[floor32(_58945) + _58943 + 68] = mem[floor32(_58945) + _58943 + -(_58945 % 32) + 100 len _58945 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58945) + _58943 + -mem[64] + 100
                    if not ext_call.return_data[0]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    if caps[idx] <= 0:
                        mem[0] = 6
                        _43525 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _43526 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_43526 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43526 + 36 len 28]
                        mem[64] = _43525 + 164
                        mem[_43525 + 100] = 32
                        mem[_43525 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43525 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _44604 = mem[_43526]
                        t = _43526 + 32
                        u = _43525 + 164
                        s = mem[_43526]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_43525 + floor32(mem[_43526]) + 164] = mem[_43526 + -(mem[_43526] % 32) + floor32(mem[_43526]) + 64 len mem[_43526] % 32] or Mask(8 * -(mem[_43526] % 32) + 32, -(8 * -(mem[_43526] % 32) + 32) + 256, mem[_43525 + floor32(mem[_43526]) + 164])
                        call underlyingAddress.mem[_43525 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_43525 + 168 len _44604 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43525 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_43525 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43525 + 168] = 32
                            mem[_43525 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43525 + 232] = mem[idx + _43525 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _43525 + -mem[64] + 264
                        mem[64] = _43525 + ceil32(return_data.size) + 165
                        mem[_43525 + 164] = return_data.size
                        mem[_43525 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_43525 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_43525 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_43525 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_43525 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _43525 + ceil32(return_data.size) + 233] = mem[idx + _43525 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_43525 + ceil32(return_data.size) + 233]
                    require ext_code.size(address(activeStrategies[idx]))
                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require idx < caps.length
                    mem[0] = 7
                    if ext_call.return_data[0] >= caps[idx]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    mem[0] = 6
                    if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                        _45781 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45782 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45782 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45782 + 36 len 28]
                        mem[64] = _45781 + 164
                        mem[_45781 + 100] = 32
                        mem[_45781 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45781 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _49363 = mem[_45782]
                        t = _45782 + 32
                        u = _45781 + 164
                        s = mem[_45782]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45781 + floor32(mem[_45782]) + 164] = mem[_45782 + -(mem[_45782] % 32) + floor32(mem[_45782]) + 64 len mem[_45782] % 32] or Mask(8 * -(mem[_45782] % 32) + 32, -(8 * -(mem[_45782] % 32) + 32) + 256, mem[_45781 + floor32(mem[_45782]) + 164])
                        call underlyingAddress.mem[_45781 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45781 + 168 len _49363 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45781 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45781 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45781 + 168] = 32
                            mem[_45781 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45781 + 232] = mem[idx + _45781 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45781 + -mem[64] + 264
                        mem[64] = _45781 + ceil32(return_data.size) + 165
                        mem[_45781 + 164] = return_data.size
                        mem[_45781 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45781 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45781 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45781 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45781 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45781 + ceil32(return_data.size) + 233] = mem[idx + _45781 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45781 + ceil32(return_data.size) + 233]
                    _45517 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                    _45518 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_45518 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45518 + 36 len 28]
                    mem[64] = _45517 + 164
                    mem[_45517 + 100] = 32
                    mem[_45517 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45517 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _48626 = mem[_45518]
                    t = _45518 + 32
                    u = mem[64]
                    s = mem[_45518]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[mem[64] + floor32(mem[_45518])] = mem[_45518 + floor32(mem[_45518]) + -(mem[_45518] % 32) + 64 len mem[_45518] % 32] or Mask(8 * -(mem[_45518] % 32) + 32, -(8 * -(mem[_45518] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45518])])
                    call underlyingAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _48626 + _45517 + -mem[64] + 160]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        _58963 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45517 + 100]
                        _58965 = mem[_45517 + 100]
                        idx = 0
                        while idx < _58965:
                            mem[idx + _58963 + 68] = mem[idx + _45517 + 132]
                            idx = idx + 32
                            continue 
                        if not _58965 % 32:
                            revert with memory
                              from mem[64]
                               len _58965 + _58963 + -mem[64] + 68
                        mem[floor32(_58965) + _58963 + 68] = mem[floor32(_58965) + _58963 + -(_58965 % 32) + 100 len _58965 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_58965) + _58963 + -mem[64] + 100
                    _57315 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_57315] = return_data.size
                    mem[_57315 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_57315 + 32]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    _58967 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_45517 + 100]
                    _58969 = mem[_45517 + 100]
                    idx = 0
                    while idx < _58969:
                        mem[idx + _58967 + 68] = mem[idx + _45517 + 132]
                        idx = idx + 32
                        continue 
                    if not _58969 % 32:
                        revert with memory
                          from mem[64]
                           len _58969 + _58967 + -mem[64] + 68
                    mem[floor32(_58969) + _58967 + 68] = mem[floor32(_58969) + _58967 + -(_58969 % 32) + 100 len _58969 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_58969) + _58967 + -mem[64] + 100
            else:
                mem[64] = ceil32(return_data.size) + 261
                mem[260] = return_data.size
                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    mem[ceil32(return_data.size) + 265] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43013 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43014 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43014 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43014 + 36 len 28]
                                    mem[64] = _43013 + 164
                                    mem[_43013 + 100] = 32
                                    mem[_43013 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43013 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44220 = mem[_43014]
                                    t = _43014 + 32
                                    u = _43013 + 164
                                    s = mem[_43014]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_43013 + floor32(mem[_43014]) + 164] = mem[_43014 + -(mem[_43014] % 32) + floor32(mem[_43014]) + 64 len mem[_43014] % 32] or Mask(8 * -(mem[_43014] % 32) + 32, -(8 * -(mem[_43014] % 32) + 32) + 256, mem[_43013 + floor32(mem[_43014]) + 164])
                                    call underlyingAddress.mem[_43013 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_43013 + 168 len _44220 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_43013 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_43013 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_43013 + 168] = 32
                                        mem[_43013 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _43013 + 232] = mem[idx + _43013 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _43013 + -mem[64] + 264
                                    mem[64] = _43013 + ceil32(return_data.size) + 165
                                    mem[_43013 + 164] = return_data.size
                                    mem[_43013 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_43013 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43013 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_43013 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43013 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43013 + ceil32(return_data.size) + 233] = mem[idx + _43013 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_43013 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                    _44848 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _44849 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_44849 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44849 + 36 len 28]
                                    mem[64] = _44848 + 164
                                    mem[_44848 + 100] = 32
                                    mem[_44848 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44848 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _47390 = mem[_44849]
                                    t = _44849 + 32
                                    u = _44848 + 164
                                    s = mem[_44849]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_44848 + floor32(mem[_44849]) + 164] = mem[_44849 + -(mem[_44849] % 32) + floor32(mem[_44849]) + 64 len mem[_44849] % 32] or Mask(8 * -(mem[_44849] % 32) + 32, -(8 * -(mem[_44849] % 32) + 32) + 256, mem[_44848 + floor32(mem[_44849]) + 164])
                                    call underlyingAddress.mem[_44848 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_44848 + 168 len _47390 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_44848 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_44848 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_44848 + 168] = 32
                                        mem[_44848 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _44848 + 232] = mem[idx + _44848 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _44848 + -mem[64] + 264
                                    mem[64] = _44848 + ceil32(return_data.size) + 165
                                    mem[_44848 + 164] = return_data.size
                                    mem[_44848 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_44848 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44848 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_44848 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44848 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44848 + ceil32(return_data.size) + 233] = mem[idx + _44848 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_44848 + ceil32(return_data.size) + 233]
                                _45180 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _45181 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45181 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45181 + 36 len 28]
                                mem[64] = _45180 + 164
                                mem[_45180 + 100] = 32
                                mem[_45180 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45180 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47920 = mem[_45181]
                                t = _45181 + 32
                                u = mem[64]
                                s = mem[_45181]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45181])] = mem[_45181 + floor32(mem[_45181]) + -(mem[_45181] % 32) + 64 len mem[_45181] % 32] or Mask(8 * -(mem[_45181] % 32) + 32, -(8 * -(mem[_45181] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45181])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47920 + _45180 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59091 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45180 + 100]
                                    _59093 = mem[_45180 + 100]
                                    idx = 0
                                    while idx < _59093:
                                        mem[idx + _59091 + 68] = mem[idx + _45180 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59093 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59093 + _59091 + -mem[64] + 68
                                    mem[floor32(_59093) + _59091 + 68] = mem[floor32(_59093) + _59091 + -(_59093 % 32) + 100 len _59093 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59093) + _59091 + -mem[64] + 100
                                _57331 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57331] = return_data.size
                                mem[_57331 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57331 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59095 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45180 + 100]
                                _59097 = mem[_45180 + 100]
                                idx = 0
                                while idx < _59097:
                                    mem[idx + _59095 + 68] = mem[idx + _45180 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59097 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59097 + _59095 + -mem[64] + 68
                                mem[floor32(_59097) + _59095 + 68] = mem[floor32(_59097) + _59095 + -(_59097 % 32) + 100 len _59097 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59097) + _59095 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43292 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43293 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43293 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43293 + 36 len 28]
                                mem[64] = _43292 + 164
                                mem[_43292 + 100] = 32
                                mem[_43292 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43292 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44411 = mem[_43293]
                                t = _43293 + 32
                                u = _43292 + 164
                                s = mem[_43293]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43292 + floor32(mem[_43293]) + 164] = mem[_43293 + -(mem[_43293] % 32) + floor32(mem[_43293]) + 64 len mem[_43293] % 32] or Mask(8 * -(mem[_43293] % 32) + 32, -(8 * -(mem[_43293] % 32) + 32) + 256, mem[_43292 + floor32(mem[_43293]) + 164])
                                call underlyingAddress.mem[_43292 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43292 + 168 len _44411 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43292 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43292 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43292 + 168] = 32
                                    mem[_43292 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43292 + 232] = mem[idx + _43292 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43292 + -mem[64] + 264
                                mem[64] = _43292 + ceil32(return_data.size) + 165
                                mem[_43292 + 164] = return_data.size
                                mem[_43292 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43292 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43292 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43292 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43292 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43292 + ceil32(return_data.size) + 233] = mem[idx + _43292 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43292 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                _45535 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45536 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45536 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45536 + 36 len 28]
                                mem[64] = _45535 + 164
                                mem[_45535 + 100] = 32
                                mem[_45535 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45535 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48672 = mem[_45536]
                                t = _45536 + 32
                                u = _45535 + 164
                                s = mem[_45536]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45535 + floor32(mem[_45536]) + 164] = mem[_45536 + -(mem[_45536] % 32) + floor32(mem[_45536]) + 64 len mem[_45536] % 32] or Mask(8 * -(mem[_45536] % 32) + 32, -(8 * -(mem[_45536] % 32) + 32) + 256, mem[_45535 + floor32(mem[_45536]) + 164])
                                call underlyingAddress.mem[_45535 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45535 + 168 len _48672 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45535 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45535 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45535 + 168] = 32
                                    mem[_45535 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45535 + 232] = mem[idx + _45535 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45535 + -mem[64] + 264
                                mem[64] = _45535 + ceil32(return_data.size) + 165
                                mem[_45535 + 164] = return_data.size
                                mem[_45535 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45535 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45535 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45535 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45535 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45535 + ceil32(return_data.size) + 233] = mem[idx + _45535 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45535 + ceil32(return_data.size) + 233]
                            _45184 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45185 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45185 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45185 + 36 len 28]
                            mem[64] = _45184 + 164
                            mem[_45184 + 100] = 32
                            mem[_45184 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45184 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47930 = mem[_45185]
                            t = _45185 + 32
                            u = mem[64]
                            s = mem[_45185]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45185])] = mem[_45185 + floor32(mem[_45185]) + -(mem[_45185] % 32) + 64 len mem[_45185] % 32] or Mask(8 * -(mem[_45185] % 32) + 32, -(8 * -(mem[_45185] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45185])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _47930 + _45184 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59107 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45184 + 100]
                                _59109 = mem[_45184 + 100]
                                idx = 0
                                while idx < _59109:
                                    mem[idx + _59107 + 68] = mem[idx + _45184 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59109 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59109 + _59107 + -mem[64] + 68
                                mem[floor32(_59109) + _59107 + 68] = mem[floor32(_59109) + _59107 + -(_59109 % 32) + 100 len _59109 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59109) + _59107 + -mem[64] + 100
                            _57333 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57333] = return_data.size
                            mem[_57333 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57333 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59111 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45184 + 100]
                            _59113 = mem[_45184 + 100]
                            idx = 0
                            while idx < _59113:
                                mem[idx + _59111 + 68] = mem[idx + _45184 + 132]
                                idx = idx + 32
                                continue 
                            if not _59113 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59113 + _59111 + -mem[64] + 68
                            mem[floor32(_59113) + _59111 + 68] = mem[floor32(_59113) + _59111 + -(_59113 % 32) + 100 len _59113 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59113) + _59111 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator >= ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43533 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43534 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43534 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43534 + 36 len 28]
                                mem[64] = _43533 + 164
                                mem[_43533 + 100] = 32
                                mem[_43533 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43533 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44612 = mem[_43534]
                                t = _43534 + 32
                                u = _43533 + 164
                                s = mem[_43534]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43533 + floor32(mem[_43534]) + 164] = mem[_43534 + -(mem[_43534] % 32) + floor32(mem[_43534]) + 64 len mem[_43534] % 32] or Mask(8 * -(mem[_43534] % 32) + 32, -(8 * -(mem[_43534] % 32) + 32) + 256, mem[_43533 + floor32(mem[_43534]) + 164])
                                call underlyingAddress.mem[_43533 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43533 + 168 len _44612 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43533 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43533 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43533 + 168] = 32
                                    mem[_43533 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43533 + 232] = mem[idx + _43533 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43533 + -mem[64] + 264
                                mem[64] = _43533 + ceil32(return_data.size) + 165
                                mem[_43533 + 164] = return_data.size
                                mem[_43533 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43533 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43533 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43533 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43533 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43533 + ceil32(return_data.size) + 233] = mem[idx + _43533 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43533 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45530 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45531 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45531 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45531 + 36 len 28]
                                mem[64] = _45530 + 164
                                mem[_45530 + 100] = 32
                                mem[_45530 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45530 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48658 = mem[_45531]
                                t = _45531 + 32
                                u = _45530 + 164
                                s = mem[_45531]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45530 + floor32(mem[_45531]) + 164] = mem[_45531 + -(mem[_45531] % 32) + floor32(mem[_45531]) + 64 len mem[_45531] % 32] or Mask(8 * -(mem[_45531] % 32) + 32, -(8 * -(mem[_45531] % 32) + 32) + 256, mem[_45530 + floor32(mem[_45531]) + 164])
                                call underlyingAddress.mem[_45530 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45530 + 168 len _48658 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45530 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45530 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45530 + 168] = 32
                                    mem[_45530 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45530 + 232] = mem[idx + _45530 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45530 + -mem[64] + 264
                                mem[64] = _45530 + ceil32(return_data.size) + 165
                                mem[_45530 + 164] = return_data.size
                                mem[_45530 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45530 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45530 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45530 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45530 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45530 + ceil32(return_data.size) + 233] = mem[idx + _45530 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45530 + ceil32(return_data.size) + 233]
                            _45789 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45790 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45790 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45790 + 36 len 28]
                            mem[64] = _45789 + 164
                            mem[_45789 + 100] = 32
                            mem[_45789 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45789 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49392 = mem[_45790]
                            t = _45790 + 32
                            u = _45789 + 164
                            s = mem[_45790]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45789 + floor32(mem[_45790]) + 164] = mem[_45790 + -(mem[_45790] % 32) + floor32(mem[_45790]) + 64 len mem[_45790] % 32] or Mask(8 * -(mem[_45790] % 32) + 32, -(8 * -(mem[_45790] % 32) + 32) + 256, mem[_45789 + floor32(mem[_45790]) + 164])
                            call underlyingAddress.mem[_45789 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45789 + 168 len _49392 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45789 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45789 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45789 + 168] = 32
                                mem[_45789 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45789 + 232] = mem[idx + _45789 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45789 + -mem[64] + 264
                            mem[64] = _45789 + ceil32(return_data.size) + 165
                            mem[_45789 + 164] = return_data.size
                            mem[_45789 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45789 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45789 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45789 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45789 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45789 + ceil32(return_data.size) + 233] = mem[idx + _45789 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45789 + ceil32(return_data.size) + 233]
                        if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43283 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _43284 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43284 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43284 + 36 len 28]
                            mem[64] = _43283 + 164
                            mem[_43283 + 100] = 32
                            mem[_43283 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43283 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44406 = mem[_43284]
                            t = _43284 + 32
                            u = mem[64]
                            s = mem[_43284]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_43284])] = mem[_43284 + floor32(mem[_43284]) + -(mem[_43284] % 32) + 64 len mem[_43284] % 32] or Mask(8 * -(mem[_43284] % 32) + 32, -(8 * -(mem[_43284] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43284])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _44406 + _43283 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59027 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43283 + 100]
                                _59029 = mem[_43283 + 100]
                                idx = 0
                                while idx < _59029:
                                    mem[idx + _59027 + 68] = mem[idx + _43283 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59029 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59029 + _59027 + -mem[64] + 68
                                mem[floor32(_59029) + _59027 + 68] = mem[floor32(_59029) + _59027 + -(_59029 % 32) + 100 len _59029 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59029) + _59027 + -mem[64] + 100
                            _57323 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57323] = return_data.size
                            mem[_57323 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57323 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59031 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_43283 + 100]
                            _59033 = mem[_43283 + 100]
                            idx = 0
                            while idx < _59033:
                                mem[idx + _59031 + 68] = mem[idx + _43283 + 132]
                                idx = idx + 32
                                continue 
                            if not _59033 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59033 + _59031 + -mem[64] + 68
                            mem[floor32(_59033) + _59031 + 68] = mem[floor32(_59033) + _59031 + -(_59033 % 32) + 100 len _59033 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59033) + _59031 + -mem[64] + 100
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            _45172 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45173 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45173 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45173 + 36 len 28]
                            mem[64] = _45172 + 164
                            mem[_45172 + 100] = 32
                            mem[_45172 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45172 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47910 = mem[_45173]
                            t = _45173 + 32
                            u = _45172 + 164
                            s = mem[_45173]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45172 + floor32(mem[_45173]) + 164] = mem[_45173 + -(mem[_45173] % 32) + floor32(mem[_45173]) + 64 len mem[_45173] % 32] or Mask(8 * -(mem[_45173] % 32) + 32, -(8 * -(mem[_45173] % 32) + 32) + 256, mem[_45172 + floor32(mem[_45173]) + 164])
                            call underlyingAddress.mem[_45172 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45172 + 168 len _47910 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45172 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45172 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45172 + 168] = 32
                                mem[_45172 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45172 + 232] = mem[idx + _45172 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45172 + -mem[64] + 264
                            mem[64] = _45172 + ceil32(return_data.size) + 165
                            mem[_45172 + 164] = return_data.size
                            mem[_45172 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45172 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45172 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45172 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45172 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45172 + ceil32(return_data.size) + 233] = mem[idx + _45172 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45172 + ceil32(return_data.size) + 233]
                        _45526 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                        _45527 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45527 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45527 + 36 len 28]
                        mem[64] = _45526 + 164
                        mem[_45526 + 100] = 32
                        mem[_45526 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45526 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48648 = mem[_45527]
                        t = _45527 + 32
                        u = mem[64]
                        s = mem[_45527]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45527])] = mem[_45527 + floor32(mem[_45527]) + -(mem[_45527] % 32) + 64 len mem[_45527] % 32] or Mask(8 * -(mem[_45527] % 32) + 32, -(8 * -(mem[_45527] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45527])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48648 + _45526 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59043 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45526 + 100]
                            _59045 = mem[_45526 + 100]
                            idx = 0
                            while idx < _59045:
                                mem[idx + _59043 + 68] = mem[idx + _45526 + 132]
                                idx = idx + 32
                                continue 
                            if not _59045 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59045 + _59043 + -mem[64] + 68
                            mem[floor32(_59045) + _59043 + 68] = mem[floor32(_59045) + _59043 + -(_59045 % 32) + 100 len _59045 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59045) + _59043 + -mem[64] + 100
                        _57325 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57325] = return_data.size
                        mem[_57325 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57325 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59047 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45526 + 100]
                        _59049 = mem[_45526 + 100]
                        idx = 0
                        while idx < _59049:
                            mem[idx + _59047 + 68] = mem[idx + _45526 + 132]
                            idx = idx + 32
                            continue 
                        if not _59049 % 32:
                            revert with memory
                              from mem[64]
                               len _59049 + _59047 + -mem[64] + 68
                        mem[floor32(_59049) + _59047 + 68] = mem[floor32(_59049) + _59047 + -(_59049 % 32) + 100 len _59049 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59049) + _59047 + -mem[64] + 100
                else:
                    require return_data.size >= 32
                    if not mem[292]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 371 len 22]
                    mem[ceil32(return_data.size) + 265] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43024 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43025 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43025 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43025 + 36 len 28]
                                    mem[64] = _43024 + 164
                                    mem[_43024 + 100] = 32
                                    mem[_43024 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43024 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44227 = mem[_43025]
                                    t = _43025 + 32
                                    u = _43024 + 164
                                    s = mem[_43025]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_43024 + floor32(mem[_43025]) + 164] = mem[_43025 + -(mem[_43025] % 32) + floor32(mem[_43025]) + 64 len mem[_43025] % 32] or Mask(8 * -(mem[_43025] % 32) + 32, -(8 * -(mem[_43025] % 32) + 32) + 256, mem[_43024 + floor32(mem[_43025]) + 164])
                                    call underlyingAddress.mem[_43024 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_43024 + 168 len _44227 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_43024 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_43024 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_43024 + 168] = 32
                                        mem[_43024 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _43024 + 232] = mem[idx + _43024 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _43024 + -mem[64] + 264
                                    mem[64] = _43024 + ceil32(return_data.size) + 165
                                    mem[_43024 + 164] = return_data.size
                                    mem[_43024 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_43024 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43024 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_43024 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43024 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43024 + ceil32(return_data.size) + 233] = mem[idx + _43024 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_43024 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] >= 0 / investmentRatioDenominator:
                                    _45196 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _45197 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45197 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45197 + 36 len 28]
                                    mem[64] = _45196 + 164
                                    mem[_45196 + 100] = 32
                                    mem[_45196 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45196 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _47950 = mem[_45197]
                                    t = _45197 + 32
                                    u = _45196 + 164
                                    s = mem[_45197]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45196 + floor32(mem[_45197]) + 164] = mem[_45197 + -(mem[_45197] % 32) + floor32(mem[_45197]) + 64 len mem[_45197] % 32] or Mask(8 * -(mem[_45197] % 32) + 32, -(8 * -(mem[_45197] % 32) + 32) + 256, mem[_45196 + floor32(mem[_45197]) + 164])
                                    call underlyingAddress.mem[_45196 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45196 + 168 len _47950 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45196 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45196 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45196 + 168] = 32
                                        mem[_45196 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45196 + 232] = mem[idx + _45196 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45196 + -mem[64] + 264
                                    mem[64] = _45196 + ceil32(return_data.size) + 165
                                    mem[_45196 + 164] = return_data.size
                                    mem[_45196 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45196 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45196 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45196 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45196 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45196 + ceil32(return_data.size) + 233] = mem[idx + _45196 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45196 + ceil32(return_data.size) + 233]
                                _44860 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44861 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44861 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44861 + 36 len 28]
                                mem[64] = _44860 + 164
                                mem[_44860 + 100] = 32
                                mem[_44860 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44860 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47406 = mem[_44861]
                                t = _44861 + 32
                                u = mem[64]
                                s = mem[_44861]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_44861])] = mem[_44861 + floor32(mem[_44861]) + -(mem[_44861] % 32) + 64 len mem[_44861] % 32] or Mask(8 * -(mem[_44861] % 32) + 32, -(8 * -(mem[_44861] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44861])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47406 + _44860 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59179 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_44860 + 100]
                                    _59181 = mem[_44860 + 100]
                                    idx = 0
                                    while idx < _59181:
                                        mem[idx + _59179 + 68] = mem[idx + _44860 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59181 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59181 + _59179 + -mem[64] + 68
                                    mem[floor32(_59181) + _59179 + 68] = mem[floor32(_59181) + _59179 + -(_59181 % 32) + 100 len _59181 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59181) + _59179 + -mem[64] + 100
                                _57342 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57342] = return_data.size
                                mem[_57342 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57342 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59183 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_44860 + 100]
                                _59185 = mem[_44860 + 100]
                                idx = 0
                                while idx < _59185:
                                    mem[idx + _59183 + 68] = mem[idx + _44860 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59185 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59185 + _59183 + -mem[64] + 68
                                mem[floor32(_59185) + _59183 + 68] = mem[floor32(_59185) + _59183 + -(_59185 % 32) + 100 len _59185 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59185) + _59183 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43304 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43305 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43305 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43305 + 36 len 28]
                                mem[64] = _43304 + 164
                                mem[_43304 + 100] = 32
                                mem[_43304 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43304 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44420 = mem[_43305]
                                t = _43305 + 32
                                u = _43304 + 164
                                s = mem[_43305]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43304 + floor32(mem[_43305]) + 164] = mem[_43305 + -(mem[_43305] % 32) + floor32(mem[_43305]) + 64 len mem[_43305] % 32] or Mask(8 * -(mem[_43305] % 32) + 32, -(8 * -(mem[_43305] % 32) + 32) + 256, mem[_43304 + floor32(mem[_43305]) + 164])
                                call underlyingAddress.mem[_43304 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43304 + 168 len _44420 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43304 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43304 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43304 + 168] = 32
                                    mem[_43304 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43304 + 232] = mem[idx + _43304 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43304 + -mem[64] + 264
                                mem[64] = _43304 + ceil32(return_data.size) + 165
                                mem[_43304 + 164] = return_data.size
                                mem[_43304 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43304 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43304 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43304 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43304 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43304 + ceil32(return_data.size) + 233] = mem[idx + _43304 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43304 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                _45548 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45549 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45549 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45549 + 36 len 28]
                                mem[64] = _45548 + 164
                                mem[_45548 + 100] = 32
                                mem[_45548 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45548 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48704 = mem[_45549]
                                t = _45549 + 32
                                u = _45548 + 164
                                s = mem[_45549]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45548 + floor32(mem[_45549]) + 164] = mem[_45549 + -(mem[_45549] % 32) + floor32(mem[_45549]) + 64 len mem[_45549] % 32] or Mask(8 * -(mem[_45549] % 32) + 32, -(8 * -(mem[_45549] % 32) + 32) + 256, mem[_45548 + floor32(mem[_45549]) + 164])
                                call underlyingAddress.mem[_45548 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45548 + 168 len _48704 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45548 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45548 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45548 + 168] = 32
                                    mem[_45548 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45548 + 232] = mem[idx + _45548 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45548 + -mem[64] + 264
                                mem[64] = _45548 + ceil32(return_data.size) + 165
                                mem[_45548 + 164] = return_data.size
                                mem[_45548 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45548 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45548 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45548 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45548 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45548 + ceil32(return_data.size) + 233] = mem[idx + _45548 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45548 + ceil32(return_data.size) + 233]
                            _45200 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45201 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45201 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45201 + 36 len 28]
                            mem[64] = _45200 + 164
                            mem[_45200 + 100] = 32
                            mem[_45200 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45200 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _47960 = mem[_45201]
                            t = _45201 + 32
                            u = mem[64]
                            s = mem[_45201]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45201])] = mem[_45201 + floor32(mem[_45201]) + -(mem[_45201] % 32) + 64 len mem[_45201] % 32] or Mask(8 * -(mem[_45201] % 32) + 32, -(8 * -(mem[_45201] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45201])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _47960 + _45200 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59203 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45200 + 100]
                                _59205 = mem[_45200 + 100]
                                idx = 0
                                while idx < _59205:
                                    mem[idx + _59203 + 68] = mem[idx + _45200 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59205 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59205 + _59203 + -mem[64] + 68
                                mem[floor32(_59205) + _59203 + 68] = mem[floor32(_59205) + _59203 + -(_59205 % 32) + 100 len _59205 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59205) + _59203 + -mem[64] + 100
                            _57345 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57345] = return_data.size
                            mem[_57345 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57345 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59207 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45200 + 100]
                            _59209 = mem[_45200 + 100]
                            idx = 0
                            while idx < _59209:
                                mem[idx + _59207 + 68] = mem[idx + _45200 + 132]
                                idx = idx + 32
                                continue 
                            if not _59209 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59209 + _59207 + -mem[64] + 68
                            mem[floor32(_59209) + _59207 + 68] = mem[floor32(_59209) + _59207 + -(_59209 % 32) + 100 len _59209 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59209) + _59207 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                            if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43295 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _43296 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43296 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43296 + 36 len 28]
                                mem[64] = _43295 + 164
                                mem[_43295 + 100] = 32
                                mem[_43295 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43295 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44415 = mem[_43296]
                                t = _43296 + 32
                                u = _43295 + 164
                                s = mem[_43296]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43295 + floor32(mem[_43296]) + 164] = mem[_43296 + -(mem[_43296] % 32) + floor32(mem[_43296]) + 64 len mem[_43296] % 32] or Mask(8 * -(mem[_43296] % 32) + 32, -(8 * -(mem[_43296] % 32) + 32) + 256, mem[_43295 + floor32(mem[_43296]) + 164])
                                call underlyingAddress.mem[_43295 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43295 + 168 len _44415 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43295 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43295 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43295 + 168] = 32
                                    mem[_43295 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43295 + 232] = mem[idx + _43295 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43295 + -mem[64] + 264
                                mem[64] = _43295 + ceil32(return_data.size) + 165
                                mem[_43295 + 164] = return_data.size
                                mem[_43295 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43295 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43295 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43295 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43295 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43295 + ceil32(return_data.size) + 233] = mem[idx + _43295 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43295 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                _45188 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45189 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45189 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45189 + 36 len 28]
                                mem[64] = _45188 + 164
                                mem[_45188 + 100] = 32
                                mem[_45188 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45188 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47940 = mem[_45189]
                                t = _45189 + 32
                                u = _45188 + 164
                                s = mem[_45189]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45188 + floor32(mem[_45189]) + 164] = mem[_45189 + -(mem[_45189] % 32) + floor32(mem[_45189]) + 64 len mem[_45189] % 32] or Mask(8 * -(mem[_45189] % 32) + 32, -(8 * -(mem[_45189] % 32) + 32) + 256, mem[_45188 + floor32(mem[_45189]) + 164])
                                call underlyingAddress.mem[_45188 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45188 + 168 len _47940 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45188 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45188 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45188 + 168] = 32
                                    mem[_45188 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45188 + 232] = mem[idx + _45188 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45188 + -mem[64] + 264
                                mem[64] = _45188 + ceil32(return_data.size) + 165
                                mem[_45188 + 164] = return_data.size
                                mem[_45188 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45188 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45188 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45188 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45188 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45188 + ceil32(return_data.size) + 233] = mem[idx + _45188 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45188 + ceil32(return_data.size) + 233]
                            _45539 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _45540 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45540 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45540 + 36 len 28]
                            mem[64] = _45539 + 164
                            mem[_45539 + 100] = 32
                            mem[_45539 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45539 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48680 = mem[_45540]
                            t = _45540 + 32
                            u = _45539 + 164
                            s = mem[_45540]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45539 + floor32(mem[_45540]) + 164] = mem[_45540 + -(mem[_45540] % 32) + floor32(mem[_45540]) + 64 len mem[_45540] % 32] or Mask(8 * -(mem[_45540] % 32) + 32, -(8 * -(mem[_45540] % 32) + 32) + 256, mem[_45539 + floor32(mem[_45540]) + 164])
                            call underlyingAddress.mem[_45539 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45539 + 168 len _48680 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45539 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45539 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45539 + 168] = 32
                                mem[_45539 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45539 + 232] = mem[idx + _45539 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45539 + -mem[64] + 264
                            mem[64] = _45539 + ceil32(return_data.size) + 165
                            mem[_45539 + 164] = return_data.size
                            mem[_45539 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45539 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45539 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45539 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45539 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45539 + ceil32(return_data.size) + 233] = mem[idx + _45539 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45539 + ceil32(return_data.size) + 233]
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43541 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43542 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43542 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43542 + 36 len 28]
                            mem[64] = _43541 + 164
                            mem[_43541 + 100] = 32
                            mem[_43541 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43541 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44620 = mem[_43542]
                            t = _43542 + 32
                            u = _43541 + 164
                            s = mem[_43542]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43541 + floor32(mem[_43542]) + 164] = mem[_43542 + -(mem[_43542] % 32) + floor32(mem[_43542]) + 64 len mem[_43542] % 32] or Mask(8 * -(mem[_43542] % 32) + 32, -(8 * -(mem[_43542] % 32) + 32) + 256, mem[_43541 + floor32(mem[_43542]) + 164])
                            call underlyingAddress.mem[_43541 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43541 + 168 len _44620 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43541 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43541 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43541 + 168] = 32
                                mem[_43541 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43541 + 232] = mem[idx + _43541 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43541 + -mem[64] + 264
                            mem[64] = _43541 + ceil32(return_data.size) + 165
                            mem[_43541 + 164] = return_data.size
                            mem[_43541 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43541 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43541 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43541 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43541 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43541 + ceil32(return_data.size) + 233] = mem[idx + _43541 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43541 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45543 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45544 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45544 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45544 + 36 len 28]
                            mem[64] = _45543 + 164
                            mem[_45543 + 100] = 32
                            mem[_45543 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45543 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48690 = mem[_45544]
                            t = _45544 + 32
                            u = mem[64]
                            s = mem[_45544]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45544])] = mem[_45544 + floor32(mem[_45544]) + -(mem[_45544] % 32) + 64 len mem[_45544] % 32] or Mask(8 * -(mem[_45544] % 32) + 32, -(8 * -(mem[_45544] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45544])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48690 + _45543 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59155 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45543 + 100]
                                _59157 = mem[_45543 + 100]
                                idx = 0
                                while idx < _59157:
                                    mem[idx + _59155 + 68] = mem[idx + _45543 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59157 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59157 + _59155 + -mem[64] + 68
                                mem[floor32(_59157) + _59155 + 68] = mem[floor32(_59157) + _59155 + -(_59157 % 32) + 100 len _59157 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59157) + _59155 + -mem[64] + 100
                            _57339 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57339] = return_data.size
                            mem[_57339 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57339 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59159 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45543 + 100]
                            _59161 = mem[_45543 + 100]
                            idx = 0
                            while idx < _59161:
                                mem[idx + _59159 + 68] = mem[idx + _45543 + 132]
                                idx = idx + 32
                                continue 
                            if not _59161 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59161 + _59159 + -mem[64] + 68
                            mem[floor32(_59161) + _59159 + 68] = mem[floor32(_59161) + _59159 + -(_59161 % 32) + 100 len _59161 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59161) + _59159 + -mem[64] + 100
                        _45797 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45798 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45798 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45798 + 36 len 28]
                        mem[64] = _45797 + 164
                        mem[_45797 + 100] = 32
                        mem[_45797 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45797 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _49421 = mem[_45798]
                        t = _45798 + 32
                        u = mem[64]
                        s = mem[_45798]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45798])] = mem[_45798 + floor32(mem[_45798]) + -(mem[_45798] % 32) + 64 len mem[_45798] % 32] or Mask(8 * -(mem[_45798] % 32) + 32, -(8 * -(mem[_45798] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45798])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _49421 + _45797 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59163 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45797 + 100]
                            _59165 = mem[_45797 + 100]
                            idx = 0
                            while idx < _59165:
                                mem[idx + _59163 + 68] = mem[idx + _45797 + 132]
                                idx = idx + 32
                                continue 
                            if not _59165 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59165 + _59163 + -mem[64] + 68
                            mem[floor32(_59165) + _59163 + 68] = mem[floor32(_59165) + _59163 + -(_59165 % 32) + 100 len _59165 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59165) + _59163 + -mem[64] + 100
                        _57340 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57340] = return_data.size
                        mem[_57340 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57340 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59167 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45797 + 100]
                        _59169 = mem[_45797 + 100]
                        idx = 0
                        while idx < _59169:
                            mem[idx + _59167 + 68] = mem[idx + _45797 + 132]
                            idx = idx + 32
                            continue 
                        if not _59169 % 32:
                            revert with memory
                              from mem[64]
                               len _59169 + _59167 + -mem[64] + 68
                        mem[floor32(_59169) + _59167 + 68] = mem[floor32(_59169) + _59167 + -(_59169 % 32) + 100 len _59169 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59169) + _59167 + -mem[64] + 100
        else:
            require ext_code.size(storeAddress)
            staticcall storeAddress.0x5aa6e675 with:
                    gas gas_remaining wei
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[12 len 20] != msg.sender:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            58,
                            0x675468652073656e6465722068617320746f2062652074686520636f6e74726f6c6c6572206f72207661756c74206f7220676f7665726e616e63,
                            mem[222 len 6]
            if arg1 <= 0:
                revert with 0, 'amount must be greater than 0'
            idx = 0
            while idx < withdrawalOrder.length:
                mem[100] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < arg1:
                    require idx < withdrawalOrder.length
                    mem[0] = 9
                    require ext_code.size(address(withdrawalOrder[idx]))
                    staticcall address(withdrawalOrder[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        require idx < withdrawalOrder.length
                        mem[0] = 9
                        if ext_call.return_data[0] > arg1:
                            revert with 0, 'SafeMath: subtraction overflow'
                        mem[96] = 0xce8c42e800000000000000000000000000000000000000000000000000000000
                        if arg1 - ext_call.return_data[0] < ext_call.return_data[0]:
                            mem[100] = arg1 - ext_call.return_data[0]
                            require ext_code.size(address(withdrawalOrder[idx]))
                            call address(withdrawalOrder[idx]).0xce8c42e8 with:
                                 gas gas_remaining wei
                                args (arg1 - ext_call.return_data[0])
                        else:
                            mem[100] = ext_call.return_data[0]
                            require ext_code.size(address(withdrawalOrder[idx]))
                            call address(withdrawalOrder[idx]).0xce8c42e8 with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < arg1:
                    revert with 0, 32, 41, 0xfe73706c697474657220646f6573206e6f7420686176652073756666696369656e742062616c616e63, mem[205 len 23]
                mem[132] = address(vaultAddress)
                mem[164] = arg1
                mem[96] = 68
                mem[128] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or Mask(224, 0, stor2)
                mem[64] = 260
                mem[196] = 32
                mem[228] = 'SafeERC20: low-level call failed'
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                if not ext_code.size(underlyingAddress):
                    revert with 0, 'Address: call to non-contract'
                t = 128
                u = 260
                s = 68
                while s >= 32:
                    mem[u] = mem[t]
                    t = t + 32
                    u = u + 32
                    s = s - 32
                    continue 
                mem[324] = 0 or Mask(224, 32, mem[324])
                call underlyingAddress.mem[260 len 4] with:
                     gas gas_remaining wei
                    args mem[264 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or Mask(224, 0, stor2), uint32(stor2), arg1
                    if False and not Mask(224, 0, stor2):
                        revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                    mem[264] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[260] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43134 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43135 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43135 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43135 + 36 len 28]
                                    mem[64] = _43134 + 164
                                    mem[_43134 + 100] = 32
                                    mem[_43134 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43134 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44297 = mem[_43135]
                                    t = _43135 + 32
                                    u = _43134 + 164
                                    s = mem[_43135]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_43134 + floor32(mem[_43135]) + 164] = mem[_43135 + -(mem[_43135] % 32) + floor32(mem[_43135]) + 64 len mem[_43135] % 32] or Mask(8 * -(mem[_43135] % 32) + 32, -(8 * -(mem[_43135] % 32) + 32) + 256, mem[_43134 + floor32(mem[_43135]) + 164])
                                    call underlyingAddress.mem[_43134 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_43134 + 168 len _44297 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_43134 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_43134 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_43134 + 168] = 32
                                        mem[_43134 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _43134 + 232] = mem[idx + _43134 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _43134 + -mem[64] + 264
                                    mem[64] = _43134 + ceil32(return_data.size) + 165
                                    mem[_43134 + 164] = return_data.size
                                    mem[_43134 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_43134 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43134 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_43134 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43134 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43134 + ceil32(return_data.size) + 233] = mem[idx + _43134 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_43134 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] >= 0 / investmentRatioDenominator:
                                    _45356 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _45357 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45357 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45357 + 36 len 28]
                                    mem[64] = _45356 + 164
                                    mem[_45356 + 100] = 32
                                    mem[_45356 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45356 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48250 = mem[_45357]
                                    t = _45357 + 32
                                    u = _45356 + 164
                                    s = mem[_45357]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45356 + floor32(mem[_45357]) + 164] = mem[_45357 + -(mem[_45357] % 32) + floor32(mem[_45357]) + 64 len mem[_45357] % 32] or Mask(8 * -(mem[_45357] % 32) + 32, -(8 * -(mem[_45357] % 32) + 32) + 256, mem[_45356 + floor32(mem[_45357]) + 164])
                                    call underlyingAddress.mem[_45356 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45356 + 168 len _48250 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45356 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45356 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45356 + 168] = 32
                                        mem[_45356 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45356 + 232] = mem[idx + _45356 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45356 + -mem[64] + 264
                                    mem[64] = _45356 + ceil32(return_data.size) + 165
                                    mem[_45356 + 164] = return_data.size
                                    mem[_45356 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45356 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45356 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45356 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45356 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45356 + ceil32(return_data.size) + 233] = mem[idx + _45356 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45356 + ceil32(return_data.size) + 233]
                                _44980 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44981 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44981 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44981 + 36 len 28]
                                mem[64] = _44980 + 164
                                mem[_44980 + 100] = 32
                                mem[_44980 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44980 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47566 = mem[_44981]
                                t = _44981 + 32
                                u = mem[64]
                                s = mem[_44981]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_44981])] = mem[_44981 + floor32(mem[_44981]) + -(mem[_44981] % 32) + 64 len mem[_44981] % 32] or Mask(8 * -(mem[_44981] % 32) + 32, -(8 * -(mem[_44981] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44981])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47566 + _44980 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60139 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_44980 + 100]
                                    _60141 = mem[_44980 + 100]
                                    idx = 0
                                    while idx < _60141:
                                        mem[idx + _60139 + 68] = mem[idx + _44980 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60141 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60141 + _60139 + -mem[64] + 68
                                    mem[floor32(_60141) + _60139 + 68] = mem[floor32(_60141) + _60139 + -(_60141 % 32) + 100 len _60141 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60141) + _60139 + -mem[64] + 100
                                _57462 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57462] = return_data.size
                                mem[_57462 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57462 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60143 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_44980 + 100]
                                _60145 = mem[_44980 + 100]
                                idx = 0
                                while idx < _60145:
                                    mem[idx + _60143 + 68] = mem[idx + _44980 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60145 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60145 + _60143 + -mem[64] + 68
                                mem[floor32(_60145) + _60143 + 68] = mem[floor32(_60145) + _60143 + -(_60145 % 32) + 100 len _60145 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60145) + _60143 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43424 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43425 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43425 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43425 + 36 len 28]
                                mem[64] = _43424 + 164
                                mem[_43424 + 100] = 32
                                mem[_43424 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43424 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44510 = mem[_43425]
                                t = _43425 + 32
                                u = _43424 + 164
                                s = mem[_43425]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43424 + floor32(mem[_43425]) + 164] = mem[_43425 + -(mem[_43425] % 32) + floor32(mem[_43425]) + 64 len mem[_43425] % 32] or Mask(8 * -(mem[_43425] % 32) + 32, -(8 * -(mem[_43425] % 32) + 32) + 256, mem[_43424 + floor32(mem[_43425]) + 164])
                                call underlyingAddress.mem[_43424 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43424 + 168 len _44510 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43424 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43424 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43424 + 168] = 32
                                    mem[_43424 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43424 + 232] = mem[idx + _43424 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43424 + -mem[64] + 264
                                mem[64] = _43424 + ceil32(return_data.size) + 165
                                mem[_43424 + 164] = return_data.size
                                mem[_43424 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43424 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43424 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43424 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43424 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43424 + ceil32(return_data.size) + 233] = mem[idx + _43424 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43424 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45360 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45361 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45361 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45361 + 36 len 28]
                                mem[64] = _45360 + 164
                                mem[_45360 + 100] = 32
                                mem[_45360 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45360 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48260 = mem[_45361]
                                t = _45361 + 32
                                u = mem[64]
                                s = mem[_45361]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45361])] = mem[_45361 + floor32(mem[_45361]) + -(mem[_45361] % 32) + 64 len mem[_45361] % 32] or Mask(8 * -(mem[_45361] % 32) + 32, -(8 * -(mem[_45361] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45361])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _48260 + _45360 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60163 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45360 + 100]
                                    _60165 = mem[_45360 + 100]
                                    idx = 0
                                    while idx < _60165:
                                        mem[idx + _60163 + 68] = mem[idx + _45360 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60165 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60165 + _60163 + -mem[64] + 68
                                    mem[floor32(_60165) + _60163 + 68] = mem[floor32(_60165) + _60163 + -(_60165 % 32) + 100 len _60165 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60165) + _60163 + -mem[64] + 100
                                _57465 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57465] = return_data.size
                                mem[_57465 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57465 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60167 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45360 + 100]
                                _60169 = mem[_45360 + 100]
                                idx = 0
                                while idx < _60169:
                                    mem[idx + _60167 + 68] = mem[idx + _45360 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60169 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60169 + _60167 + -mem[64] + 68
                                mem[floor32(_60169) + _60167 + 68] = mem[floor32(_60169) + _60167 + -(_60169 % 32) + 100 len _60169 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60169) + _60167 + -mem[64] + 100
                            _45678 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45679 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45679 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45679 + 36 len 28]
                            mem[64] = _45678 + 164
                            mem[_45678 + 100] = 32
                            mem[_45678 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45678 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49024 = mem[_45679]
                            t = _45679 + 32
                            u = mem[64]
                            s = mem[_45679]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45679])] = mem[_45679 + floor32(mem[_45679]) + -(mem[_45679] % 32) + 64 len mem[_45679] % 32] or Mask(8 * -(mem[_45679] % 32) + 32, -(8 * -(mem[_45679] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45679])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _49024 + _45678 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _60171 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45678 + 100]
                                _60173 = mem[_45678 + 100]
                                idx = 0
                                while idx < _60173:
                                    mem[idx + _60171 + 68] = mem[idx + _45678 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60173 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60173 + _60171 + -mem[64] + 68
                                mem[floor32(_60173) + _60171 + 68] = mem[floor32(_60173) + _60171 + -(_60173 % 32) + 100 len _60173 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60173) + _60171 + -mem[64] + 100
                            _57466 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57466] = return_data.size
                            mem[_57466 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57466 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _60175 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45678 + 100]
                            _60177 = mem[_45678 + 100]
                            idx = 0
                            while idx < _60177:
                                mem[idx + _60175 + 68] = mem[idx + _45678 + 132]
                                idx = idx + 32
                                continue 
                            if not _60177 % 32:
                                revert with memory
                                  from mem[64]
                                   len _60177 + _60175 + -mem[64] + 68
                            mem[floor32(_60177) + _60175 + 68] = mem[floor32(_60177) + _60175 + -(_60177 % 32) + 100 len _60177 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_60177) + _60175 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator >= ext_call.return_data[0]:
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43621 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43622 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43622 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43622 + 36 len 28]
                                mem[64] = _43621 + 164
                                mem[_43621 + 100] = 32
                                mem[_43621 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43621 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44700 = mem[_43622]
                                t = _43622 + 32
                                u = _43621 + 164
                                s = mem[_43622]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43621 + floor32(mem[_43622]) + 164] = mem[_43622 + -(mem[_43622] % 32) + floor32(mem[_43622]) + 64 len mem[_43622] % 32] or Mask(8 * -(mem[_43622] % 32) + 32, -(8 * -(mem[_43622] % 32) + 32) + 256, mem[_43621 + floor32(mem[_43622]) + 164])
                                call underlyingAddress.mem[_43621 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43621 + 168 len _44700 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43621 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43621 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43621 + 168] = 32
                                    mem[_43621 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43621 + 232] = mem[idx + _43621 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43621 + -mem[64] + 264
                                mem[64] = _43621 + ceil32(return_data.size) + 165
                                mem[_43621 + 164] = return_data.size
                                mem[_43621 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43621 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43621 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43621 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43621 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43621 + ceil32(return_data.size) + 233] = mem[idx + _43621 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43621 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45673 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45674 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45674 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45674 + 36 len 28]
                                mem[64] = _45673 + 164
                                mem[_45673 + 100] = 32
                                mem[_45673 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45673 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _49010 = mem[_45674]
                                t = _45674 + 32
                                u = _45673 + 164
                                s = mem[_45674]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45673 + floor32(mem[_45674]) + 164] = mem[_45674 + -(mem[_45674] % 32) + floor32(mem[_45674]) + 64 len mem[_45674] % 32] or Mask(8 * -(mem[_45674] % 32) + 32, -(8 * -(mem[_45674] % 32) + 32) + 256, mem[_45673 + floor32(mem[_45674]) + 164])
                                call underlyingAddress.mem[_45673 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45673 + 168 len _49010 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45673 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45673 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45673 + 168] = 32
                                    mem[_45673 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45673 + 232] = mem[idx + _45673 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45673 + -mem[64] + 264
                                mem[64] = _45673 + ceil32(return_data.size) + 165
                                mem[_45673 + 164] = return_data.size
                                mem[_45673 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45673 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45673 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45673 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45673 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45673 + ceil32(return_data.size) + 233] = mem[idx + _45673 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45673 + ceil32(return_data.size) + 233]
                            _45877 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45878 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45878 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45878 + 36 len 28]
                            mem[64] = _45877 + 164
                            mem[_45877 + 100] = 32
                            mem[_45877 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45877 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49711 = mem[_45878]
                            t = _45878 + 32
                            u = _45877 + 164
                            s = mem[_45878]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45877 + floor32(mem[_45878]) + 164] = mem[_45878 + -(mem[_45878] % 32) + floor32(mem[_45878]) + 64 len mem[_45878] % 32] or Mask(8 * -(mem[_45878] % 32) + 32, -(8 * -(mem[_45878] % 32) + 32) + 256, mem[_45877 + floor32(mem[_45878]) + 164])
                            call underlyingAddress.mem[_45877 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45877 + 168 len _49711 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45877 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45877 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45877 + 168] = 32
                                mem[_45877 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45877 + 232] = mem[idx + _45877 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45877 + -mem[64] + 264
                            mem[64] = _45877 + ceil32(return_data.size) + 165
                            mem[_45877 + 164] = return_data.size
                            mem[_45877 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45877 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45877 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45877 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45877 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45877 + ceil32(return_data.size) + 233] = mem[idx + _45877 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45877 + ceil32(return_data.size) + 233]
                        if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43415 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _43416 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43416 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43416 + 36 len 28]
                            mem[64] = _43415 + 164
                            mem[_43415 + 100] = 32
                            mem[_43415 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43415 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44505 = mem[_43416]
                            t = _43416 + 32
                            u = _43415 + 164
                            s = mem[_43416]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43415 + floor32(mem[_43416]) + 164] = mem[_43416 + -(mem[_43416] % 32) + floor32(mem[_43416]) + 64 len mem[_43416] % 32] or Mask(8 * -(mem[_43416] % 32) + 32, -(8 * -(mem[_43416] % 32) + 32) + 256, mem[_43415 + floor32(mem[_43416]) + 164])
                            call underlyingAddress.mem[_43415 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43415 + 168 len _44505 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43415 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43415 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43415 + 168] = 32
                                mem[_43415 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43415 + 232] = mem[idx + _43415 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43415 + -mem[64] + 264
                            mem[64] = _43415 + ceil32(return_data.size) + 165
                            mem[_43415 + 164] = return_data.size
                            mem[_43415 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43415 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43415 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43415 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43415 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43415 + ceil32(return_data.size) + 233] = mem[idx + _43415 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43415 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            _45348 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45349 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45349 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45349 + 36 len 28]
                            mem[64] = _45348 + 164
                            mem[_45348 + 100] = 32
                            mem[_45348 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45348 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48240 = mem[_45349]
                            t = _45349 + 32
                            u = mem[64]
                            s = mem[_45349]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45349])] = mem[_45349 + floor32(mem[_45349]) + -(mem[_45349] % 32) + 64 len mem[_45349] % 32] or Mask(8 * -(mem[_45349] % 32) + 32, -(8 * -(mem[_45349] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45349])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48240 + _45348 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _60091 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45348 + 100]
                                _60093 = mem[_45348 + 100]
                                idx = 0
                                while idx < _60093:
                                    mem[idx + _60091 + 68] = mem[idx + _45348 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60093 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60093 + _60091 + -mem[64] + 68
                                mem[floor32(_60093) + _60091 + 68] = mem[floor32(_60093) + _60091 + -(_60093 % 32) + 100 len _60093 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60093) + _60091 + -mem[64] + 100
                            _57456 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57456] = return_data.size
                            mem[_57456 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57456 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _60095 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45348 + 100]
                            _60097 = mem[_45348 + 100]
                            idx = 0
                            while idx < _60097:
                                mem[idx + _60095 + 68] = mem[idx + _45348 + 132]
                                idx = idx + 32
                                continue 
                            if not _60097 % 32:
                                revert with memory
                                  from mem[64]
                                   len _60097 + _60095 + -mem[64] + 68
                            mem[floor32(_60097) + _60095 + 68] = mem[floor32(_60097) + _60095 + -(_60097 % 32) + 100 len _60097 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_60097) + _60095 + -mem[64] + 100
                        _45669 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                        _45670 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45670 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45670 + 36 len 28]
                        mem[64] = _45669 + 164
                        mem[_45669 + 100] = 32
                        mem[_45669 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45669 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _49000 = mem[_45670]
                        t = _45670 + 32
                        u = mem[64]
                        s = mem[_45670]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45670])] = mem[_45670 + floor32(mem[_45670]) + -(mem[_45670] % 32) + 64 len mem[_45670] % 32] or Mask(8 * -(mem[_45670] % 32) + 32, -(8 * -(mem[_45670] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45670])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _49000 + _45669 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _60099 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45669 + 100]
                            _60101 = mem[_45669 + 100]
                            idx = 0
                            while idx < _60101:
                                mem[idx + _60099 + 68] = mem[idx + _45669 + 132]
                                idx = idx + 32
                                continue 
                            if not _60101 % 32:
                                revert with memory
                                  from mem[64]
                                   len _60101 + _60099 + -mem[64] + 68
                            mem[floor32(_60101) + _60099 + 68] = mem[floor32(_60101) + _60099 + -(_60101 % 32) + 100 len _60101 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_60101) + _60099 + -mem[64] + 100
                        _57457 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57457] = return_data.size
                        mem[_57457 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57457 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _60103 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45669 + 100]
                        _60105 = mem[_45669 + 100]
                        idx = 0
                        while idx < _60105:
                            mem[idx + _60103 + 68] = mem[idx + _45669 + 132]
                            idx = idx + 32
                            continue 
                        if not _60105 % 32:
                            revert with memory
                              from mem[64]
                               len _60105 + _60103 + -mem[64] + 68
                        mem[floor32(_60105) + _60103 + 68] = mem[floor32(_60105) + _60103 + -(_60105 % 32) + 100 len _60105 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_60105) + _60103 + -mem[64] + 100
                else:
                    mem[64] = ceil32(return_data.size) + 261
                    mem[260] = return_data.size
                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[ceil32(return_data.size) + 261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[ceil32(return_data.size) + 265] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + ceil32(return_data.size) + 329] = mem[idx + 228]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[ceil32(return_data.size) + 329]
                    if not return_data.size:
                        mem[ceil32(return_data.size) + 265] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = 0
                        while idx < activeStrategies.length:
                            require idx < investmentRatioNumerators.length
                            mem[0] = 8
                            if not ext_call.return_data[0]:
                                if investmentRatioDenominator <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require investmentRatioDenominator
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(underlyingAddress)
                                staticcall underlyingAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / investmentRatioDenominator >= ext_call.return_data[0]:
                                    if not ext_call.return_data[0]:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    if caps[idx] <= 0:
                                        mem[0] = 6
                                        _43436 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = ext_call.return_data[0]
                                        _43437 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_43437 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43437 + 36 len 28]
                                        mem[64] = _43436 + 164
                                        mem[_43436 + 100] = 32
                                        mem[_43436 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43436 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _44519 = mem[_43437]
                                        t = _43437 + 32
                                        u = mem[64]
                                        s = mem[_43437]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[mem[64] + floor32(mem[_43437])] = mem[_43437 + floor32(mem[_43437]) + -(mem[_43437] % 32) + 64 len mem[_43437] % 32] or Mask(8 * -(mem[_43437] % 32) + 32, -(8 * -(mem[_43437] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43437])])
                                        call underlyingAddress.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _44519 + _43436 + -mem[64] + 160]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[mem[64] + 110 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            _60251 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = mem[_43436 + 100]
                                            _60253 = mem[_43436 + 100]
                                            idx = 0
                                            while idx < _60253:
                                                mem[idx + _60251 + 68] = mem[idx + _43436 + 132]
                                                idx = idx + 32
                                                continue 
                                            if not _60253 % 32:
                                                revert with memory
                                                  from mem[64]
                                                   len _60253 + _60251 + -mem[64] + 68
                                            mem[floor32(_60253) + _60251 + 68] = mem[floor32(_60253) + _60251 + -(_60253 % 32) + 100 len _60253 % 32]
                                            revert with memory
                                              from mem[64]
                                               len floor32(_60253) + _60251 + -mem[64] + 100
                                        _57476 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_57476] = return_data.size
                                        mem[_57476 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_57476 + 32]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _60255 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43436 + 100]
                                        _60257 = mem[_43436 + 100]
                                        idx = 0
                                        while idx < _60257:
                                            mem[idx + _60255 + 68] = mem[idx + _43436 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _60257 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _60257 + _60255 + -mem[64] + 68
                                        mem[floor32(_60257) + _60255 + 68] = mem[floor32(_60257) + _60255 + -(_60257 % 32) + 100 len _60257 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_60257) + _60255 + -mem[64] + 100
                                    require ext_code.size(address(activeStrategies[idx]))
                                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require idx < caps.length
                                    mem[0] = 7
                                    if ext_call.return_data[0] >= caps[idx]:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    mem[0] = 6
                                    if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                        _45376 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                        _45377 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_45377 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45377 + 36 len 28]
                                        mem[64] = _45376 + 164
                                        mem[_45376 + 100] = 32
                                        mem[_45376 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45376 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _48290 = mem[_45377]
                                        t = _45377 + 32
                                        u = _45376 + 164
                                        s = mem[_45377]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[_45376 + floor32(mem[_45377]) + 164] = mem[_45377 + -(mem[_45377] % 32) + floor32(mem[_45377]) + 64 len mem[_45377] % 32] or Mask(8 * -(mem[_45377] % 32) + 32, -(8 * -(mem[_45377] % 32) + 32) + 256, mem[_45376 + floor32(mem[_45377]) + 164])
                                        call underlyingAddress.mem[_45376 + 164 len 4] with:
                                             gas gas_remaining wei
                                            args mem[_45376 + 168 len _48290 - 4]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[_45376 + 274 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            mem[_45376 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_45376 + 168] = 32
                                            mem[_45376 + 200] = 32
                                            idx = 0
                                            while idx < 32:
                                                mem[idx + _45376 + 232] = mem[idx + _45376 + 132]
                                                idx = idx + 32
                                                continue 
                                            revert with memory
                                              from mem[64]
                                               len _45376 + -mem[64] + 264
                                        mem[64] = _45376 + ceil32(return_data.size) + 165
                                        mem[_45376 + 164] = return_data.size
                                        mem[_45376 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_45376 + 196]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45376 + ceil32(return_data.size) + 275 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_45376 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45376 + ceil32(return_data.size) + 169] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45376 + ceil32(return_data.size) + 233] = mem[idx + _45376 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_45376 + ceil32(return_data.size) + 233]
                                    _45691 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    _45692 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45692 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45692 + 36 len 28]
                                    mem[64] = _45691 + 164
                                    mem[_45691 + 100] = 32
                                    mem[_45691 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45691 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _49056 = mem[_45692]
                                    t = _45692 + 32
                                    u = _45691 + 164
                                    s = mem[_45692]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45691 + floor32(mem[_45692]) + 164] = mem[_45692 + -(mem[_45692] % 32) + floor32(mem[_45692]) + 64 len mem[_45692] % 32] or Mask(8 * -(mem[_45692] % 32) + 32, -(8 * -(mem[_45692] % 32) + 32) + 256, mem[_45691 + floor32(mem[_45692]) + 164])
                                    call underlyingAddress.mem[_45691 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45691 + 168 len _49056 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45691 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45691 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45691 + 168] = 32
                                        mem[_45691 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45691 + 232] = mem[idx + _45691 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45691 + -mem[64] + 264
                                    mem[64] = _45691 + ceil32(return_data.size) + 165
                                    mem[_45691 + 164] = return_data.size
                                    mem[_45691 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45691 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45691 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45691 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45691 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45691 + ceil32(return_data.size) + 233] = mem[idx + _45691 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45691 + ceil32(return_data.size) + 233]
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43145 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43146 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43146 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43146 + 36 len 28]
                                    mem[64] = _43145 + 164
                                    mem[_43145 + 100] = 32
                                    mem[_43145 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43145 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44304 = mem[_43146]
                                    t = _43146 + 32
                                    u = _43145 + 164
                                    s = mem[_43146]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_43145 + floor32(mem[_43146]) + 164] = mem[_43146 + -(mem[_43146] % 32) + floor32(mem[_43146]) + 64 len mem[_43146] % 32] or Mask(8 * -(mem[_43146] % 32) + 32, -(8 * -(mem[_43146] % 32) + 32) + 256, mem[_43145 + floor32(mem[_43146]) + 164])
                                    call underlyingAddress.mem[_43145 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_43145 + 168 len _44304 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_43145 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_43145 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_43145 + 168] = 32
                                        mem[_43145 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _43145 + 232] = mem[idx + _43145 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _43145 + -mem[64] + 264
                                    mem[64] = _43145 + ceil32(return_data.size) + 165
                                    mem[_43145 + 164] = return_data.size
                                    mem[_43145 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_43145 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43145 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_43145 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43145 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43145 + ceil32(return_data.size) + 233] = mem[idx + _43145 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_43145 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] >= 0 / investmentRatioDenominator:
                                    _45372 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _45373 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45373 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45373 + 36 len 28]
                                    mem[64] = _45372 + 164
                                    mem[_45372 + 100] = 32
                                    mem[_45372 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45372 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48280 = mem[_45373]
                                    t = _45373 + 32
                                    u = _45372 + 164
                                    s = mem[_45373]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45372 + floor32(mem[_45373]) + 164] = mem[_45373 + -(mem[_45373] % 32) + floor32(mem[_45373]) + 64 len mem[_45373] % 32] or Mask(8 * -(mem[_45373] % 32) + 32, -(8 * -(mem[_45373] % 32) + 32) + 256, mem[_45372 + floor32(mem[_45373]) + 164])
                                    call underlyingAddress.mem[_45372 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45372 + 168 len _48280 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45372 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45372 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45372 + 168] = 32
                                        mem[_45372 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45372 + 232] = mem[idx + _45372 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45372 + -mem[64] + 264
                                    mem[64] = _45372 + ceil32(return_data.size) + 165
                                    mem[_45372 + 164] = return_data.size
                                    mem[_45372 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45372 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45372 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45372 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45372 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45372 + ceil32(return_data.size) + 233] = mem[idx + _45372 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45372 + ceil32(return_data.size) + 233]
                                _44992 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44993 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44993 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44993 + 36 len 28]
                                mem[64] = _44992 + 164
                                mem[_44992 + 100] = 32
                                mem[_44992 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44992 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47582 = mem[_44993]
                                t = _44993 + 32
                                u = mem[64]
                                s = mem[_44993]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_44993])] = mem[_44993 + floor32(mem[_44993]) + -(mem[_44993] % 32) + 64 len mem[_44993] % 32] or Mask(8 * -(mem[_44993] % 32) + 32, -(8 * -(mem[_44993] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44993])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47582 + _44992 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60235 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_44992 + 100]
                                    _60237 = mem[_44992 + 100]
                                    idx = 0
                                    while idx < _60237:
                                        mem[idx + _60235 + 68] = mem[idx + _44992 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60237 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60237 + _60235 + -mem[64] + 68
                                    mem[floor32(_60237) + _60235 + 68] = mem[floor32(_60237) + _60235 + -(_60237 % 32) + 100 len _60237 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60237) + _60235 + -mem[64] + 100
                                _57474 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57474] = return_data.size
                                mem[_57474 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57474 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60239 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_44992 + 100]
                                _60241 = mem[_44992 + 100]
                                idx = 0
                                while idx < _60241:
                                    mem[idx + _60239 + 68] = mem[idx + _44992 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60241 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60241 + _60239 + -mem[64] + 68
                                mem[floor32(_60241) + _60239 + 68] = mem[floor32(_60241) + _60239 + -(_60241 % 32) + 100 len _60241 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60241) + _60239 + -mem[64] + 100
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                                revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                                if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43427 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                    _43428 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43428 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43428 + 36 len 28]
                                    mem[64] = _43427 + 164
                                    mem[_43427 + 100] = 32
                                    mem[_43427 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43427 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44514 = mem[_43428]
                                    t = _43428 + 32
                                    u = _43427 + 164
                                    s = mem[_43428]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_43427 + floor32(mem[_43428]) + 164] = mem[_43428 + -(mem[_43428] % 32) + floor32(mem[_43428]) + 64 len mem[_43428] % 32] or Mask(8 * -(mem[_43428] % 32) + 32, -(8 * -(mem[_43428] % 32) + 32) + 256, mem[_43427 + floor32(mem[_43428]) + 164])
                                    call underlyingAddress.mem[_43427 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_43427 + 168 len _44514 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_43427 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_43427 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_43427 + 168] = 32
                                        mem[_43427 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _43427 + 232] = mem[idx + _43427 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _43427 + -mem[64] + 264
                                    mem[64] = _43427 + ceil32(return_data.size) + 165
                                    mem[_43427 + 164] = return_data.size
                                    mem[_43427 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_43427 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43427 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_43427 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43427 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43427 + ceil32(return_data.size) + 233] = mem[idx + _43427 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_43427 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    _45364 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _45365 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45365 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45365 + 36 len 28]
                                    mem[64] = _45364 + 164
                                    mem[_45364 + 100] = 32
                                    mem[_45364 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45364 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48270 = mem[_45365]
                                    t = _45365 + 32
                                    u = mem[64]
                                    s = mem[_45365]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_45365])] = mem[_45365 + floor32(mem[_45365]) + -(mem[_45365] % 32) + 64 len mem[_45365] % 32] or Mask(8 * -(mem[_45365] % 32) + 32, -(8 * -(mem[_45365] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45365])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _48270 + _45364 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _60187 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_45364 + 100]
                                        _60189 = mem[_45364 + 100]
                                        idx = 0
                                        while idx < _60189:
                                            mem[idx + _60187 + 68] = mem[idx + _45364 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _60189 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _60189 + _60187 + -mem[64] + 68
                                        mem[floor32(_60189) + _60187 + 68] = mem[floor32(_60189) + _60187 + -(_60189 % 32) + 100 len _60189 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_60189) + _60187 + -mem[64] + 100
                                    _57468 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57468] = return_data.size
                                    mem[_57468 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57468 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _60191 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45364 + 100]
                                    _60193 = mem[_45364 + 100]
                                    idx = 0
                                    while idx < _60193:
                                        mem[idx + _60191 + 68] = mem[idx + _45364 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60193 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60193 + _60191 + -mem[64] + 68
                                    mem[floor32(_60193) + _60191 + 68] = mem[floor32(_60193) + _60191 + -(_60193 % 32) + 100 len _60193 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60193) + _60191 + -mem[64] + 100
                                _45682 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _45683 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45683 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45683 + 36 len 28]
                                mem[64] = _45682 + 164
                                mem[_45682 + 100] = 32
                                mem[_45682 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45682 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _49032 = mem[_45683]
                                t = _45683 + 32
                                u = mem[64]
                                s = mem[_45683]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45683])] = mem[_45683 + floor32(mem[_45683]) + -(mem[_45683] % 32) + 64 len mem[_45683] % 32] or Mask(8 * -(mem[_45683] % 32) + 32, -(8 * -(mem[_45683] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45683])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _49032 + _45682 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60195 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45682 + 100]
                                    _60197 = mem[_45682 + 100]
                                    idx = 0
                                    while idx < _60197:
                                        mem[idx + _60195 + 68] = mem[idx + _45682 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60197 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60197 + _60195 + -mem[64] + 68
                                    mem[floor32(_60197) + _60195 + 68] = mem[floor32(_60197) + _60195 + -(_60197 % 32) + 100 len _60197 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60197) + _60195 + -mem[64] + 100
                                _57469 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57469] = return_data.size
                                mem[_57469 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57469 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60199 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45682 + 100]
                                _60201 = mem[_45682 + 100]
                                idx = 0
                                while idx < _60201:
                                    mem[idx + _60199 + 68] = mem[idx + _45682 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60201 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60201 + _60199 + -mem[64] + 68
                                mem[floor32(_60201) + _60199 + 68] = mem[floor32(_60201) + _60199 + -(_60201 % 32) + 100 len _60201 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60201) + _60199 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43629 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43630 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43630 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43630 + 36 len 28]
                                mem[64] = _43629 + 164
                                mem[_43629 + 100] = 32
                                mem[_43629 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43629 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44708 = mem[_43630]
                                t = _43630 + 32
                                u = _43629 + 164
                                s = mem[_43630]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43629 + floor32(mem[_43630]) + 164] = mem[_43630 + -(mem[_43630] % 32) + floor32(mem[_43630]) + 64 len mem[_43630] % 32] or Mask(8 * -(mem[_43630] % 32) + 32, -(8 * -(mem[_43630] % 32) + 32) + 256, mem[_43629 + floor32(mem[_43630]) + 164])
                                call underlyingAddress.mem[_43629 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43629 + 168 len _44708 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43629 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43629 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43629 + 168] = 32
                                    mem[_43629 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43629 + 232] = mem[idx + _43629 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43629 + -mem[64] + 264
                                mem[64] = _43629 + ceil32(return_data.size) + 165
                                mem[_43629 + 164] = return_data.size
                                mem[_43629 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43629 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43629 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43629 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43629 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43629 + ceil32(return_data.size) + 233] = mem[idx + _43629 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43629 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45686 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45687 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45687 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45687 + 36 len 28]
                                mem[64] = _45686 + 164
                                mem[_45686 + 100] = 32
                                mem[_45686 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45686 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _49042 = mem[_45687]
                                t = _45687 + 32
                                u = mem[64]
                                s = mem[_45687]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45687])] = mem[_45687 + floor32(mem[_45687]) + -(mem[_45687] % 32) + 64 len mem[_45687] % 32] or Mask(8 * -(mem[_45687] % 32) + 32, -(8 * -(mem[_45687] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45687])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _49042 + _45686 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60211 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45686 + 100]
                                    _60213 = mem[_45686 + 100]
                                    idx = 0
                                    while idx < _60213:
                                        mem[idx + _60211 + 68] = mem[idx + _45686 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60213 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60213 + _60211 + -mem[64] + 68
                                    mem[floor32(_60213) + _60211 + 68] = mem[floor32(_60213) + _60211 + -(_60213 % 32) + 100 len _60213 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60213) + _60211 + -mem[64] + 100
                                _57471 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57471] = return_data.size
                                mem[_57471 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57471 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60215 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45686 + 100]
                                _60217 = mem[_45686 + 100]
                                idx = 0
                                while idx < _60217:
                                    mem[idx + _60215 + 68] = mem[idx + _45686 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60217 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60217 + _60215 + -mem[64] + 68
                                mem[floor32(_60217) + _60215 + 68] = mem[floor32(_60217) + _60215 + -(_60217 % 32) + 100 len _60217 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60217) + _60215 + -mem[64] + 100
                            _45885 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45886 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45886 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45886 + 36 len 28]
                            mem[64] = _45885 + 164
                            mem[_45885 + 100] = 32
                            mem[_45885 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45885 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49740 = mem[_45886]
                            t = _45886 + 32
                            u = mem[64]
                            s = mem[_45886]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45886])] = mem[_45886 + floor32(mem[_45886]) + -(mem[_45886] % 32) + 64 len mem[_45886] % 32] or Mask(8 * -(mem[_45886] % 32) + 32, -(8 * -(mem[_45886] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45886])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _49740 + _45885 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _60219 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45885 + 100]
                                _60221 = mem[_45885 + 100]
                                idx = 0
                                while idx < _60221:
                                    mem[idx + _60219 + 68] = mem[idx + _45885 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60221 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60221 + _60219 + -mem[64] + 68
                                mem[floor32(_60221) + _60219 + 68] = mem[floor32(_60221) + _60219 + -(_60221 % 32) + 100 len _60221 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60221) + _60219 + -mem[64] + 100
                            _57472 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57472] = return_data.size
                            mem[_57472 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57472 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _60223 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45885 + 100]
                            _60225 = mem[_45885 + 100]
                            idx = 0
                            while idx < _60225:
                                mem[idx + _60223 + 68] = mem[idx + _45885 + 132]
                                idx = idx + 32
                                continue 
                            if not _60225 % 32:
                                revert with memory
                                  from mem[64]
                                   len _60225 + _60223 + -mem[64] + 68
                            mem[floor32(_60225) + _60223 + 68] = mem[floor32(_60225) + _60223 + -(_60225 % 32) + 100 len _60225 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_60225) + _60223 + -mem[64] + 100
                    else:
                        require return_data.size >= 32
                        if not mem[292]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 371 len 22]
                        mem[ceil32(return_data.size) + 265] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        idx = 0
                        while idx < activeStrategies.length:
                            require idx < investmentRatioNumerators.length
                            mem[0] = 8
                            if not ext_call.return_data[0]:
                                if investmentRatioDenominator <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require investmentRatioDenominator
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(underlyingAddress)
                                staticcall underlyingAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                    if not 0 / investmentRatioDenominator:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    if caps[idx] <= 0:
                                        mem[0] = 6
                                        _43156 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                        _43157 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_43157 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43157 + 36 len 28]
                                        mem[64] = _43156 + 164
                                        mem[_43156 + 100] = 32
                                        mem[_43156 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43156 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _44311 = mem[_43157]
                                        t = _43157 + 32
                                        u = mem[64]
                                        s = mem[_43157]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[mem[64] + floor32(mem[_43157])] = mem[_43157 + floor32(mem[_43157]) + -(mem[_43157] % 32) + 64 len mem[_43157] % 32] or Mask(8 * -(mem[_43157] % 32) + 32, -(8 * -(mem[_43157] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43157])])
                                        call underlyingAddress.mem[mem[64] len 4] with:
                                             gas gas_remaining wei
                                            args mem[mem[64] + 4 len _44311 + _43156 + -mem[64] + 160]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[mem[64] + 110 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            _60323 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = mem[_43156 + 100]
                                            _60325 = mem[_43156 + 100]
                                            idx = 0
                                            while idx < _60325:
                                                mem[idx + _60323 + 68] = mem[idx + _43156 + 132]
                                                idx = idx + 32
                                                continue 
                                            if not _60325 % 32:
                                                revert with memory
                                                  from mem[64]
                                                   len _60325 + _60323 + -mem[64] + 68
                                            mem[floor32(_60325) + _60323 + 68] = mem[floor32(_60325) + _60323 + -(_60325 % 32) + 100 len _60325 % 32]
                                            revert with memory
                                              from mem[64]
                                               len floor32(_60325) + _60323 + -mem[64] + 100
                                        _57485 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                        mem[_57485] = return_data.size
                                        mem[_57485 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_57485 + 32]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _60327 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43156 + 100]
                                        _60329 = mem[_43156 + 100]
                                        idx = 0
                                        while idx < _60329:
                                            mem[idx + _60327 + 68] = mem[idx + _43156 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _60329 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _60329 + _60327 + -mem[64] + 68
                                        mem[floor32(_60329) + _60327 + 68] = mem[floor32(_60329) + _60327 + -(_60329 % 32) + 100 len _60329 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_60329) + _60327 + -mem[64] + 100
                                    require ext_code.size(address(activeStrategies[idx]))
                                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require idx < caps.length
                                    mem[0] = 7
                                    if ext_call.return_data[0] >= caps[idx]:
                                        idx = idx + 1
                                        continue 
                                    require idx < caps.length
                                    require idx < activeStrategies.length
                                    mem[0] = 6
                                    if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                        _45004 = mem[64]
                                        mem[mem[64] + 36] = address(activeStrategies[idx])
                                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                        _45005 = mem[64]
                                        mem[mem[64]] = 68
                                        mem[64] = mem[64] + 100
                                        mem[_45005 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45005 + 36 len 28]
                                        mem[64] = _45004 + 164
                                        mem[_45004 + 100] = 32
                                        mem[_45004 + 132] = 'SafeERC20: low-level call failed'
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45004 + 270 len 26]
                                        if not ext_code.size(underlyingAddress):
                                            revert with 0, 'Address: call to non-contract'
                                        _47598 = mem[_45005]
                                        t = _45005 + 32
                                        u = _45004 + 164
                                        s = mem[_45005]
                                        while s >= 32:
                                            mem[u] = mem[t]
                                            t = t + 32
                                            u = u + 32
                                            s = s - 32
                                            continue 
                                        mem[_45004 + floor32(mem[_45005]) + 164] = mem[_45005 + -(mem[_45005] % 32) + floor32(mem[_45005]) + 64 len mem[_45005] % 32] or Mask(8 * -(mem[_45005] % 32) + 32, -(8 * -(mem[_45005] % 32) + 32) + 256, mem[_45004 + floor32(mem[_45005]) + 164])
                                        call underlyingAddress.mem[_45004 + 164 len 4] with:
                                             gas gas_remaining wei
                                            args mem[_45004 + 168 len _47598 - 4]
                                        if not return_data.size:
                                            if ext_call.success:
                                                if mem[96]:
                                                    require mem[96] >= 32
                                                    if not mem[128]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[_45004 + 274 len 22]
                                                idx = idx + 1
                                                continue 
                                            if mem[96]:
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            mem[_45004 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[_45004 + 168] = 32
                                            mem[_45004 + 200] = 32
                                            idx = 0
                                            while idx < 32:
                                                mem[idx + _45004 + 232] = mem[idx + _45004 + 132]
                                                idx = idx + 32
                                                continue 
                                            revert with memory
                                              from mem[64]
                                               len _45004 + -mem[64] + 264
                                        mem[64] = _45004 + ceil32(return_data.size) + 165
                                        mem[_45004 + 164] = return_data.size
                                        mem[_45004 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if ext_call.success:
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[_45004 + 196]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45004 + ceil32(return_data.size) + 275 len 22]
                                            idx = idx + 1
                                            continue 
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[_45004 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45004 + ceil32(return_data.size) + 169] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45004 + ceil32(return_data.size) + 233] = mem[idx + _45004 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 32, 32, mem[_45004 + ceil32(return_data.size) + 233]
                                    _45388 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _45389 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45389 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45389 + 36 len 28]
                                    mem[64] = _45388 + 164
                                    mem[_45388 + 100] = 32
                                    mem[_45388 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45388 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48310 = mem[_45389]
                                    t = _45389 + 32
                                    u = mem[64]
                                    s = mem[_45389]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_45389])] = mem[_45389 + floor32(mem[_45389]) + -(mem[_45389] % 32) + 64 len mem[_45389] % 32] or Mask(8 * -(mem[_45389] % 32) + 32, -(8 * -(mem[_45389] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45389])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _48310 + _45388 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _60339 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_45388 + 100]
                                        _60341 = mem[_45388 + 100]
                                        idx = 0
                                        while idx < _60341:
                                            mem[idx + _60339 + 68] = mem[idx + _45388 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _60341 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _60341 + _60339 + -mem[64] + 68
                                        mem[floor32(_60341) + _60339 + 68] = mem[floor32(_60341) + _60339 + -(_60341 % 32) + 100 len _60341 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_60341) + _60339 + -mem[64] + 100
                                    _57487 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57487] = return_data.size
                                    mem[_57487 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57487 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _60343 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45388 + 100]
                                    _60345 = mem[_45388 + 100]
                                    idx = 0
                                    while idx < _60345:
                                        mem[idx + _60343 + 68] = mem[idx + _45388 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60345 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60345 + _60343 + -mem[64] + 68
                                    mem[floor32(_60345) + _60343 + 68] = mem[floor32(_60345) + _60343 + -(_60345 % 32) + 100 len _60345 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60345) + _60343 + -mem[64] + 100
                                if not ext_call.return_data[0]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43448 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = ext_call.return_data[0]
                                    _43449 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43449 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43449 + 36 len 28]
                                    mem[64] = _43448 + 164
                                    mem[_43448 + 100] = 32
                                    mem[_43448 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43448 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44528 = mem[_43449]
                                    t = _43449 + 32
                                    u = mem[64]
                                    s = mem[_43449]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_43449])] = mem[_43449 + floor32(mem[_43449]) + -(mem[_43449] % 32) + 64 len mem[_43449] % 32] or Mask(8 * -(mem[_43449] % 32) + 32, -(8 * -(mem[_43449] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43449])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _44528 + _43448 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _60347 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43448 + 100]
                                        _60349 = mem[_43448 + 100]
                                        idx = 0
                                        while idx < _60349:
                                            mem[idx + _60347 + 68] = mem[idx + _43448 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _60349 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _60349 + _60347 + -mem[64] + 68
                                        mem[floor32(_60349) + _60347 + 68] = mem[floor32(_60349) + _60347 + -(_60349 % 32) + 100 len _60349 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_60349) + _60347 + -mem[64] + 100
                                    _57488 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57488] = return_data.size
                                    mem[_57488 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57488 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _60351 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43448 + 100]
                                    _60353 = mem[_43448 + 100]
                                    idx = 0
                                    while idx < _60353:
                                        mem[idx + _60351 + 68] = mem[idx + _43448 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60353 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60353 + _60351 + -mem[64] + 68
                                    mem[floor32(_60353) + _60351 + 68] = mem[floor32(_60353) + _60351 + -(_60353 % 32) + 100 len _60353 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60353) + _60351 + -mem[64] + 100
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                    _45392 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _45393 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45393 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45393 + 36 len 28]
                                    mem[64] = _45392 + 164
                                    mem[_45392 + 100] = 32
                                    mem[_45392 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45392 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48320 = mem[_45393]
                                    t = _45393 + 32
                                    u = _45392 + 164
                                    s = mem[_45393]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45392 + floor32(mem[_45393]) + 164] = mem[_45393 + -(mem[_45393] % 32) + floor32(mem[_45393]) + 64 len mem[_45393] % 32] or Mask(8 * -(mem[_45393] % 32) + 32, -(8 * -(mem[_45393] % 32) + 32) + 256, mem[_45392 + floor32(mem[_45393]) + 164])
                                    call underlyingAddress.mem[_45392 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45392 + 168 len _48320 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45392 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45392 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45392 + 168] = 32
                                        mem[_45392 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45392 + 232] = mem[idx + _45392 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45392 + -mem[64] + 264
                                    mem[64] = _45392 + ceil32(return_data.size) + 165
                                    mem[_45392 + 164] = return_data.size
                                    mem[_45392 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45392 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45392 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45392 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45392 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45392 + ceil32(return_data.size) + 233] = mem[idx + _45392 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45392 + ceil32(return_data.size) + 233]
                                _45704 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45705 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45705 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45705 + 36 len 28]
                                mem[64] = _45704 + 164
                                mem[_45704 + 100] = 32
                                mem[_45704 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45704 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _49088 = mem[_45705]
                                t = _45705 + 32
                                u = mem[64]
                                s = mem[_45705]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45705])] = mem[_45705 + floor32(mem[_45705]) + -(mem[_45705] % 32) + 64 len mem[_45705] % 32] or Mask(8 * -(mem[_45705] % 32) + 32, -(8 * -(mem[_45705] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45705])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _49088 + _45704 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60363 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45704 + 100]
                                    _60365 = mem[_45704 + 100]
                                    idx = 0
                                    while idx < _60365:
                                        mem[idx + _60363 + 68] = mem[idx + _45704 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60365 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60365 + _60363 + -mem[64] + 68
                                    mem[floor32(_60365) + _60363 + 68] = mem[floor32(_60365) + _60363 + -(_60365 % 32) + 100 len _60365 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60365) + _60363 + -mem[64] + 100
                                _57490 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57490] = return_data.size
                                mem[_57490 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57490 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60367 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45704 + 100]
                                _60369 = mem[_45704 + 100]
                                idx = 0
                                while idx < _60369:
                                    mem[idx + _60367 + 68] = mem[idx + _45704 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60369 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60369 + _60367 + -mem[64] + 68
                                mem[floor32(_60369) + _60367 + 68] = mem[floor32(_60369) + _60367 + -(_60369 % 32) + 100 len _60369 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60369) + _60367 + -mem[64] + 100
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                                revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                                if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43439 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                    _43440 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43440 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43440 + 36 len 28]
                                    mem[64] = _43439 + 164
                                    mem[_43439 + 100] = 32
                                    mem[_43439 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43439 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44523 = mem[_43440]
                                    t = _43440 + 32
                                    u = mem[64]
                                    s = mem[_43440]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_43440])] = mem[_43440 + floor32(mem[_43440]) + -(mem[_43440] % 32) + 64 len mem[_43440] % 32] or Mask(8 * -(mem[_43440] % 32) + 32, -(8 * -(mem[_43440] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43440])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _44523 + _43439 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _60275 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43439 + 100]
                                        _60277 = mem[_43439 + 100]
                                        idx = 0
                                        while idx < _60277:
                                            mem[idx + _60275 + 68] = mem[idx + _43439 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _60277 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _60277 + _60275 + -mem[64] + 68
                                        mem[floor32(_60277) + _60275 + 68] = mem[floor32(_60277) + _60275 + -(_60277 % 32) + 100 len _60277 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_60277) + _60275 + -mem[64] + 100
                                    _57479 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57479] = return_data.size
                                    mem[_57479 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57479 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _60279 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43439 + 100]
                                    _60281 = mem[_43439 + 100]
                                    idx = 0
                                    while idx < _60281:
                                        mem[idx + _60279 + 68] = mem[idx + _43439 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60281 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60281 + _60279 + -mem[64] + 68
                                    mem[floor32(_60281) + _60279 + 68] = mem[floor32(_60281) + _60279 + -(_60281 % 32) + 100 len _60281 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60281) + _60279 + -mem[64] + 100
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                    _45380 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _45381 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45381 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45381 + 36 len 28]
                                    mem[64] = _45380 + 164
                                    mem[_45380 + 100] = 32
                                    mem[_45380 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45380 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48300 = mem[_45381]
                                    t = _45381 + 32
                                    u = _45380 + 164
                                    s = mem[_45381]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45380 + floor32(mem[_45381]) + 164] = mem[_45381 + -(mem[_45381] % 32) + floor32(mem[_45381]) + 64 len mem[_45381] % 32] or Mask(8 * -(mem[_45381] % 32) + 32, -(8 * -(mem[_45381] % 32) + 32) + 256, mem[_45380 + floor32(mem[_45381]) + 164])
                                    call underlyingAddress.mem[_45380 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45380 + 168 len _48300 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45380 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45380 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45380 + 168] = 32
                                        mem[_45380 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45380 + 232] = mem[idx + _45380 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45380 + -mem[64] + 264
                                    mem[64] = _45380 + ceil32(return_data.size) + 165
                                    mem[_45380 + 164] = return_data.size
                                    mem[_45380 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45380 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45380 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45380 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45380 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45380 + ceil32(return_data.size) + 233] = mem[idx + _45380 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45380 + ceil32(return_data.size) + 233]
                                _45695 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _45696 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45696 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45696 + 36 len 28]
                                mem[64] = _45695 + 164
                                mem[_45695 + 100] = 32
                                mem[_45695 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45695 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _49064 = mem[_45696]
                                t = _45696 + 32
                                u = mem[64]
                                s = mem[_45696]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_45696])] = mem[_45696 + floor32(mem[_45696]) + -(mem[_45696] % 32) + 64 len mem[_45696] % 32] or Mask(8 * -(mem[_45696] % 32) + 32, -(8 * -(mem[_45696] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45696])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _49064 + _45695 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60291 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_45695 + 100]
                                    _60293 = mem[_45695 + 100]
                                    idx = 0
                                    while idx < _60293:
                                        mem[idx + _60291 + 68] = mem[idx + _45695 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60293 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60293 + _60291 + -mem[64] + 68
                                    mem[floor32(_60293) + _60291 + 68] = mem[floor32(_60293) + _60291 + -(_60293 % 32) + 100 len _60293 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60293) + _60291 + -mem[64] + 100
                                _57481 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57481] = return_data.size
                                mem[_57481 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57481 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60295 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45695 + 100]
                                _60297 = mem[_45695 + 100]
                                idx = 0
                                while idx < _60297:
                                    mem[idx + _60295 + 68] = mem[idx + _45695 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60297 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60297 + _60295 + -mem[64] + 68
                                mem[floor32(_60297) + _60295 + 68] = mem[floor32(_60297) + _60295 + -(_60297 % 32) + 100 len _60297 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60297) + _60295 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43637 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43638 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43638 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43638 + 36 len 28]
                                mem[64] = _43637 + 164
                                mem[_43637 + 100] = 32
                                mem[_43637 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43637 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44716 = mem[_43638]
                                t = _43638 + 32
                                u = mem[64]
                                s = mem[_43638]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_43638])] = mem[_43638 + floor32(mem[_43638]) + -(mem[_43638] % 32) + 64 len mem[_43638] % 32] or Mask(8 * -(mem[_43638] % 32) + 32, -(8 * -(mem[_43638] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43638])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _44716 + _43637 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _60299 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43637 + 100]
                                    _60301 = mem[_43637 + 100]
                                    idx = 0
                                    while idx < _60301:
                                        mem[idx + _60299 + 68] = mem[idx + _43637 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _60301 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _60301 + _60299 + -mem[64] + 68
                                    mem[floor32(_60301) + _60299 + 68] = mem[floor32(_60301) + _60299 + -(_60301 % 32) + 100 len _60301 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_60301) + _60299 + -mem[64] + 100
                                _57482 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57482] = return_data.size
                                mem[_57482 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57482 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _60303 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43637 + 100]
                                _60305 = mem[_43637 + 100]
                                idx = 0
                                while idx < _60305:
                                    mem[idx + _60303 + 68] = mem[idx + _43637 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60305 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60305 + _60303 + -mem[64] + 68
                                mem[floor32(_60305) + _60303 + 68] = mem[floor32(_60305) + _60303 + -(_60305 % 32) + 100 len _60305 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60305) + _60303 + -mem[64] + 100
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                _45893 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45894 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45894 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45894 + 36 len 28]
                                mem[64] = _45893 + 164
                                mem[_45893 + 100] = 32
                                mem[_45893 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45893 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _49769 = mem[_45894]
                                t = _45894 + 32
                                u = _45893 + 164
                                s = mem[_45894]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45893 + floor32(mem[_45894]) + 164] = mem[_45894 + -(mem[_45894] % 32) + floor32(mem[_45894]) + 64 len mem[_45894] % 32] or Mask(8 * -(mem[_45894] % 32) + 32, -(8 * -(mem[_45894] % 32) + 32) + 256, mem[_45893 + floor32(mem[_45894]) + 164])
                                call underlyingAddress.mem[_45893 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45893 + 168 len _49769 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45893 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45893 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45893 + 168] = 32
                                    mem[_45893 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45893 + 232] = mem[idx + _45893 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45893 + -mem[64] + 264
                                mem[64] = _45893 + ceil32(return_data.size) + 165
                                mem[_45893 + 164] = return_data.size
                                mem[_45893 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45893 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45893 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45893 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45893 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45893 + ceil32(return_data.size) + 233] = mem[idx + _45893 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45893 + ceil32(return_data.size) + 233]
                            _45699 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45700 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45700 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45700 + 36 len 28]
                            mem[64] = _45699 + 164
                            mem[_45699 + 100] = 32
                            mem[_45699 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45699 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49074 = mem[_45700]
                            t = _45700 + 32
                            u = mem[64]
                            s = mem[_45700]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45700])] = mem[_45700 + floor32(mem[_45700]) + -(mem[_45700] % 32) + 64 len mem[_45700] % 32] or Mask(8 * -(mem[_45700] % 32) + 32, -(8 * -(mem[_45700] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45700])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _49074 + _45699 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _60307 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45699 + 100]
                                _60309 = mem[_45699 + 100]
                                idx = 0
                                while idx < _60309:
                                    mem[idx + _60307 + 68] = mem[idx + _45699 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _60309 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _60309 + _60307 + -mem[64] + 68
                                mem[floor32(_60309) + _60307 + 68] = mem[floor32(_60309) + _60307 + -(_60309 % 32) + 100 len _60309 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_60309) + _60307 + -mem[64] + 100
                            _57483 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57483] = return_data.size
                            mem[_57483 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57483 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _60311 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45699 + 100]
                            _60313 = mem[_45699 + 100]
                            idx = 0
                            while idx < _60313:
                                mem[idx + _60311 + 68] = mem[idx + _45699 + 132]
                                idx = idx + 32
                                continue 
                            if not _60313 % 32:
                                revert with memory
                                  from mem[64]
                                   len _60313 + _60311 + -mem[64] + 68
                            mem[floor32(_60313) + _60311 + 68] = mem[floor32(_60313) + _60311 + -(_60313 % 32) + 100 len _60313 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_60313) + _60311 + -mem[64] + 100
            require ext_code.size(underlyingAddress)
            staticcall underlyingAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < arg1:
                revert with 0, 32, 41, 0xfe73706c697474657220646f6573206e6f7420686176652073756666696369656e742062616c616e63, mem[205 len 23]
            mem[132] = address(vaultAddress)
            mem[164] = arg1
            mem[96] = 68
            mem[128 len 4] = unknown_0xa9059cbb(?????)
            mem[64] = 260
            mem[196] = 32
            mem[228] = 'SafeERC20: low-level call failed'
            if eth.balance(this.address) < 0:
                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
            if not ext_code.size(underlyingAddress):
                revert with 0, 'Address: call to non-contract'
            mem[260 len 64] = 0, address(vaultAddress), Mask(224, 32, arg1) >> 32
            mem[352 len 4] = 0
            call underlyingAddress with:
               funct uint32(stor2)
                 gas gas_remaining wei
                args arg1, 0, mem[324 len 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with unknown_0xa9059cbb(?????), address(vaultAddress), arg1
                if not uint32(this.address), Mask(224, 0, stor2):
                    revert with 0, 32, 42, 0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                mem[264] = this.address
                require ext_code.size(underlyingAddress)
                staticcall underlyingAddress.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[260] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                idx = 0
                while idx < activeStrategies.length:
                    require idx < investmentRatioNumerators.length
                    mem[0] = 8
                    if not ext_call.return_data[0]:
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                            if not 0 / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43090 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _43091 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43091 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43091 + 36 len 28]
                                mem[64] = _43090 + 164
                                mem[_43090 + 100] = 32
                                mem[_43090 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43090 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44269 = mem[_43091]
                                t = _43091 + 32
                                u = _43090 + 164
                                s = mem[_43091]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43090 + floor32(mem[_43091]) + 164] = mem[_43091 + -(mem[_43091] % 32) + floor32(mem[_43091]) + 64 len mem[_43091] % 32] or Mask(8 * -(mem[_43091] % 32) + 32, -(8 * -(mem[_43091] % 32) + 32) + 256, mem[_43090 + floor32(mem[_43091]) + 164])
                                call underlyingAddress.mem[_43090 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43090 + 168 len _44269 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43090 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43090 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43090 + 168] = 32
                                    mem[_43090 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43090 + 232] = mem[idx + _43090 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43090 + -mem[64] + 264
                                mem[64] = _43090 + ceil32(return_data.size) + 165
                                mem[_43090 + 164] = return_data.size
                                mem[_43090 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43090 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43090 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43090 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43090 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43090 + ceil32(return_data.size) + 233] = mem[idx + _43090 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43090 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                _44932 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44933 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44933 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44933 + 36 len 28]
                                mem[64] = _44932 + 164
                                mem[_44932 + 100] = 32
                                mem[_44932 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44932 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47502 = mem[_44933]
                                t = _44933 + 32
                                u = _44932 + 164
                                s = mem[_44933]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_44932 + floor32(mem[_44933]) + 164] = mem[_44933 + -(mem[_44933] % 32) + floor32(mem[_44933]) + 64 len mem[_44933] % 32] or Mask(8 * -(mem[_44933] % 32) + 32, -(8 * -(mem[_44933] % 32) + 32) + 256, mem[_44932 + floor32(mem[_44933]) + 164])
                                call underlyingAddress.mem[_44932 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_44932 + 168 len _47502 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44932 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_44932 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44932 + 168] = 32
                                    mem[_44932 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44932 + 232] = mem[idx + _44932 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _44932 + -mem[64] + 264
                                mem[64] = _44932 + ceil32(return_data.size) + 165
                                mem[_44932 + 164] = return_data.size
                                mem[_44932 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_44932 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_44932 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_44932 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_44932 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _44932 + ceil32(return_data.size) + 233] = mem[idx + _44932 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_44932 + ceil32(return_data.size) + 233]
                            _45292 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = 0 / investmentRatioDenominator
                            _45293 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45293 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45293 + 36 len 28]
                            mem[64] = _45292 + 164
                            mem[_45292 + 100] = 32
                            mem[_45292 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45292 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48130 = mem[_45293]
                            t = _45293 + 32
                            u = _45292 + 164
                            s = mem[_45293]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45292 + floor32(mem[_45293]) + 164] = mem[_45293 + -(mem[_45293] % 32) + floor32(mem[_45293]) + 64 len mem[_45293] % 32] or Mask(8 * -(mem[_45293] % 32) + 32, -(8 * -(mem[_45293] % 32) + 32) + 256, mem[_45292 + floor32(mem[_45293]) + 164])
                            call underlyingAddress.mem[_45292 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45292 + 168 len _48130 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45292 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45292 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45292 + 168] = 32
                                mem[_45292 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45292 + 232] = mem[idx + _45292 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45292 + -mem[64] + 264
                            mem[64] = _45292 + ceil32(return_data.size) + 165
                            mem[_45292 + 164] = return_data.size
                            mem[_45292 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45292 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45292 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45292 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45292 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45292 + ceil32(return_data.size) + 233] = mem[idx + _45292 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45292 + ceil32(return_data.size) + 233]
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43376 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43377 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43377 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43377 + 36 len 28]
                            mem[64] = _43376 + 164
                            mem[_43376 + 100] = 32
                            mem[_43376 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43376 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44474 = mem[_43377]
                            t = _43377 + 32
                            u = mem[64]
                            s = mem[_43377]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_43377])] = mem[_43377 + floor32(mem[_43377]) + -(mem[_43377] % 32) + 64 len mem[_43377] % 32] or Mask(8 * -(mem[_43377] % 32) + 32, -(8 * -(mem[_43377] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43377])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _44474 + _43376 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59771 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43376 + 100]
                                _59773 = mem[_43376 + 100]
                                idx = 0
                                while idx < _59773:
                                    mem[idx + _59771 + 68] = mem[idx + _43376 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59773 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59773 + _59771 + -mem[64] + 68
                                mem[floor32(_59773) + _59771 + 68] = mem[floor32(_59773) + _59771 + -(_59773 % 32) + 100 len _59773 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59773) + _59771 + -mem[64] + 100
                            _57416 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57416] = return_data.size
                            mem[_57416 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57416 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59775 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_43376 + 100]
                            _59777 = mem[_43376 + 100]
                            idx = 0
                            while idx < _59777:
                                mem[idx + _59775 + 68] = mem[idx + _43376 + 132]
                                idx = idx + 32
                                continue 
                            if not _59777 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59777 + _59775 + -mem[64] + 68
                            mem[floor32(_59777) + _59775 + 68] = mem[floor32(_59777) + _59775 + -(_59777 % 32) + 100 len _59777 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59777) + _59775 + -mem[64] + 100
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                            _45296 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45297 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45297 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45297 + 36 len 28]
                            mem[64] = _45296 + 164
                            mem[_45296 + 100] = 32
                            mem[_45296 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45296 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48140 = mem[_45297]
                            t = _45297 + 32
                            u = _45296 + 164
                            s = mem[_45297]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45296 + floor32(mem[_45297]) + 164] = mem[_45297 + -(mem[_45297] % 32) + floor32(mem[_45297]) + 64 len mem[_45297] % 32] or Mask(8 * -(mem[_45297] % 32) + 32, -(8 * -(mem[_45297] % 32) + 32) + 256, mem[_45296 + floor32(mem[_45297]) + 164])
                            call underlyingAddress.mem[_45296 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45296 + 168 len _48140 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45296 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45296 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45296 + 168] = 32
                                mem[_45296 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45296 + 232] = mem[idx + _45296 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45296 + -mem[64] + 264
                            mem[64] = _45296 + ceil32(return_data.size) + 165
                            mem[_45296 + 164] = return_data.size
                            mem[_45296 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45296 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45296 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45296 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45296 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45296 + ceil32(return_data.size) + 233] = mem[idx + _45296 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45296 + ceil32(return_data.size) + 233]
                        _45626 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _45627 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45627 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45627 + 36 len 28]
                        mem[64] = _45626 + 164
                        mem[_45626 + 100] = 32
                        mem[_45626 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45626 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48896 = mem[_45627]
                        t = _45627 + 32
                        u = mem[64]
                        s = mem[_45627]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45627])] = mem[_45627 + floor32(mem[_45627]) + -(mem[_45627] % 32) + 64 len mem[_45627] % 32] or Mask(8 * -(mem[_45627] % 32) + 32, -(8 * -(mem[_45627] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45627])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48896 + _45626 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59787 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45626 + 100]
                            _59789 = mem[_45626 + 100]
                            idx = 0
                            while idx < _59789:
                                mem[idx + _59787 + 68] = mem[idx + _45626 + 132]
                                idx = idx + 32
                                continue 
                            if not _59789 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59789 + _59787 + -mem[64] + 68
                            mem[floor32(_59789) + _59787 + 68] = mem[floor32(_59789) + _59787 + -(_59789 % 32) + 100 len _59789 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59789) + _59787 + -mem[64] + 100
                        _57418 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57418] = return_data.size
                        mem[_57418 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57418 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59791 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45626 + 100]
                        _59793 = mem[_45626 + 100]
                        idx = 0
                        while idx < _59793:
                            mem[idx + _59791 + 68] = mem[idx + _45626 + 132]
                            idx = idx + 32
                            continue 
                        if not _59793 % 32:
                            revert with memory
                              from mem[64]
                               len _59793 + _59791 + -mem[64] + 68
                        mem[floor32(_59793) + _59791 + 68] = mem[floor32(_59793) + _59791 + -(_59793 % 32) + 100 len _59793 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59793) + _59791 + -mem[64] + 100
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                        revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if investmentRatioDenominator <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require investmentRatioDenominator
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                        if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43367 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _43368 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43368 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43368 + 36 len 28]
                            mem[64] = _43367 + 164
                            mem[_43367 + 100] = 32
                            mem[_43367 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43367 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44469 = mem[_43368]
                            t = _43368 + 32
                            u = mem[64]
                            s = mem[_43368]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_43368])] = mem[_43368 + floor32(mem[_43368]) + -(mem[_43368] % 32) + 64 len mem[_43368] % 32] or Mask(8 * -(mem[_43368] % 32) + 32, -(8 * -(mem[_43368] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43368])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _44469 + _43367 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59699 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43367 + 100]
                                _59701 = mem[_43367 + 100]
                                idx = 0
                                while idx < _59701:
                                    mem[idx + _59699 + 68] = mem[idx + _43367 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59701 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59701 + _59699 + -mem[64] + 68
                                mem[floor32(_59701) + _59699 + 68] = mem[floor32(_59701) + _59699 + -(_59701 % 32) + 100 len _59701 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59701) + _59699 + -mem[64] + 100
                            _57407 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57407] = return_data.size
                            mem[_57407 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57407 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59703 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_43367 + 100]
                            _59705 = mem[_43367 + 100]
                            idx = 0
                            while idx < _59705:
                                mem[idx + _59703 + 68] = mem[idx + _43367 + 132]
                                idx = idx + 32
                                continue 
                            if not _59705 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59705 + _59703 + -mem[64] + 68
                            mem[floor32(_59705) + _59703 + 68] = mem[floor32(_59705) + _59703 + -(_59705 % 32) + 100 len _59705 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59705) + _59703 + -mem[64] + 100
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                            _45284 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45285 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45285 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45285 + 36 len 28]
                            mem[64] = _45284 + 164
                            mem[_45284 + 100] = 32
                            mem[_45284 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45284 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48120 = mem[_45285]
                            t = _45285 + 32
                            u = _45284 + 164
                            s = mem[_45285]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45284 + floor32(mem[_45285]) + 164] = mem[_45285 + -(mem[_45285] % 32) + floor32(mem[_45285]) + 64 len mem[_45285] % 32] or Mask(8 * -(mem[_45285] % 32) + 32, -(8 * -(mem[_45285] % 32) + 32) + 256, mem[_45284 + floor32(mem[_45285]) + 164])
                            call underlyingAddress.mem[_45284 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45284 + 168 len _48120 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45284 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45284 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45284 + 168] = 32
                                mem[_45284 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45284 + 232] = mem[idx + _45284 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45284 + -mem[64] + 264
                            mem[64] = _45284 + ceil32(return_data.size) + 165
                            mem[_45284 + 164] = return_data.size
                            mem[_45284 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45284 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45284 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45284 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45284 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45284 + ceil32(return_data.size) + 233] = mem[idx + _45284 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45284 + ceil32(return_data.size) + 233]
                        _45617 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                        _45618 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45618 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45618 + 36 len 28]
                        mem[64] = _45617 + 164
                        mem[_45617 + 100] = 32
                        mem[_45617 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45617 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48872 = mem[_45618]
                        t = _45618 + 32
                        u = _45617 + 164
                        s = mem[_45618]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45617 + floor32(mem[_45618]) + 164] = mem[_45618 + -(mem[_45618] % 32) + floor32(mem[_45618]) + 64 len mem[_45618] % 32] or Mask(8 * -(mem[_45618] % 32) + 32, -(8 * -(mem[_45618] % 32) + 32) + 256, mem[_45617 + floor32(mem[_45618]) + 164])
                        call underlyingAddress.mem[_45617 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45617 + 168 len _48872 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45617 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45617 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45617 + 168] = 32
                            mem[_45617 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45617 + 232] = mem[idx + _45617 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45617 + -mem[64] + 264
                        mem[64] = _45617 + ceil32(return_data.size) + 165
                        mem[_45617 + 164] = return_data.size
                        mem[_45617 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45617 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45617 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45617 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45617 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45617 + ceil32(return_data.size) + 233] = mem[idx + _45617 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45617 + ceil32(return_data.size) + 233]
                    if not ext_call.return_data[0]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    if caps[idx] <= 0:
                        mem[0] = 6
                        _43589 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = ext_call.return_data[0]
                        _43590 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_43590 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43590 + 36 len 28]
                        mem[64] = _43589 + 164
                        mem[_43589 + 100] = 32
                        mem[_43589 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43589 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _44668 = mem[_43590]
                        t = _43590 + 32
                        u = mem[64]
                        s = mem[_43590]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_43590])] = mem[_43590 + floor32(mem[_43590]) + -(mem[_43590] % 32) + 64 len mem[_43590] % 32] or Mask(8 * -(mem[_43590] % 32) + 32, -(8 * -(mem[_43590] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43590])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _44668 + _43589 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59723 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_43589 + 100]
                            _59725 = mem[_43589 + 100]
                            idx = 0
                            while idx < _59725:
                                mem[idx + _59723 + 68] = mem[idx + _43589 + 132]
                                idx = idx + 32
                                continue 
                            if not _59725 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59725 + _59723 + -mem[64] + 68
                            mem[floor32(_59725) + _59723 + 68] = mem[floor32(_59725) + _59723 + -(_59725 % 32) + 100 len _59725 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59725) + _59723 + -mem[64] + 100
                        _57410 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57410] = return_data.size
                        mem[_57410 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57410 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59727 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_43589 + 100]
                        _59729 = mem[_43589 + 100]
                        idx = 0
                        while idx < _59729:
                            mem[idx + _59727 + 68] = mem[idx + _43589 + 132]
                            idx = idx + 32
                            continue 
                        if not _59729 % 32:
                            revert with memory
                              from mem[64]
                               len _59729 + _59727 + -mem[64] + 68
                        mem[floor32(_59729) + _59727 + 68] = mem[floor32(_59729) + _59727 + -(_59729 % 32) + 100 len _59729 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59729) + _59727 + -mem[64] + 100
                    require ext_code.size(address(activeStrategies[idx]))
                    staticcall address(activeStrategies[idx]).0x45d01e4a with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require idx < caps.length
                    mem[0] = 7
                    if ext_call.return_data[0] >= caps[idx]:
                        idx = idx + 1
                        continue 
                    require idx < caps.length
                    require idx < activeStrategies.length
                    mem[0] = 6
                    if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                        _45621 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45622 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45622 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45622 + 36 len 28]
                        mem[64] = _45621 + 164
                        mem[_45621 + 100] = 32
                        mem[_45621 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45621 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48882 = mem[_45622]
                        t = _45622 + 32
                        u = _45621 + 164
                        s = mem[_45622]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[_45621 + floor32(mem[_45622]) + 164] = mem[_45622 + -(mem[_45622] % 32) + floor32(mem[_45622]) + 64 len mem[_45622] % 32] or Mask(8 * -(mem[_45622] % 32) + 32, -(8 * -(mem[_45622] % 32) + 32) + 256, mem[_45621 + floor32(mem[_45622]) + 164])
                        call underlyingAddress.mem[_45621 + 164 len 4] with:
                             gas gas_remaining wei
                            args mem[_45621 + 168 len _48882 - 4]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45621 + 274 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            mem[_45621 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45621 + 168] = 32
                            mem[_45621 + 200] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45621 + 232] = mem[idx + _45621 + 132]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _45621 + -mem[64] + 264
                        mem[64] = _45621 + ceil32(return_data.size) + 165
                        mem[_45621 + 164] = return_data.size
                        mem[_45621 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_45621 + 196]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[_45621 + ceil32(return_data.size) + 275 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_45621 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[_45621 + ceil32(return_data.size) + 169] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _45621 + ceil32(return_data.size) + 233] = mem[idx + _45621 + 132]
                            idx = idx + 32
                            continue 
                        revert with 0, 32, 32, mem[_45621 + ceil32(return_data.size) + 233]
                    _45845 = mem[64]
                    mem[mem[64] + 36] = address(activeStrategies[idx])
                    mem[mem[64] + 68] = ext_call.return_data[0]
                    _45846 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_45846 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45846 + 36 len 28]
                    mem[64] = _45845 + 164
                    mem[_45845 + 100] = 32
                    mem[_45845 + 132] = 'SafeERC20: low-level call failed'
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45845 + 270 len 26]
                    if not ext_code.size(underlyingAddress):
                        revert with 0, 'Address: call to non-contract'
                    _49595 = mem[_45846]
                    t = _45846 + 32
                    u = mem[64]
                    s = mem[_45846]
                    while s >= 32:
                        mem[u] = mem[t]
                        t = t + 32
                        u = u + 32
                        s = s - 32
                        continue 
                    mem[mem[64] + floor32(mem[_45846])] = mem[_45846 + floor32(mem[_45846]) + -(mem[_45846] % 32) + 64 len mem[_45846] % 32] or Mask(8 * -(mem[_45846] % 32) + 32, -(8 * -(mem[_45846] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45846])])
                    call underlyingAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _49595 + _45845 + -mem[64] + 160]
                    if not return_data.size:
                        if ext_call.success:
                            if mem[96]:
                                require mem[96] >= 32
                                if not mem[128]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if mem[96]:
                            revert with memory
                              from 128
                               len mem[96]
                        _59739 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45845 + 100]
                        _59741 = mem[_45845 + 100]
                        idx = 0
                        while idx < _59741:
                            mem[idx + _59739 + 68] = mem[idx + _45845 + 132]
                            idx = idx + 32
                            continue 
                        if not _59741 % 32:
                            revert with memory
                              from mem[64]
                               len _59741 + _59739 + -mem[64] + 68
                        mem[floor32(_59741) + _59739 + 68] = mem[floor32(_59741) + _59739 + -(_59741 % 32) + 100 len _59741 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59741) + _59739 + -mem[64] + 100
                    _57412 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_57412] = return_data.size
                    mem[_57412 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if ext_call.success:
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[_57412 + 32]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[mem[64] + 110 len 22]
                        idx = idx + 1
                        continue 
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    _59743 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = mem[_45845 + 100]
                    _59745 = mem[_45845 + 100]
                    idx = 0
                    while idx < _59745:
                        mem[idx + _59743 + 68] = mem[idx + _45845 + 132]
                        idx = idx + 32
                        continue 
                    if not _59745 % 32:
                        revert with memory
                          from mem[64]
                           len _59745 + _59743 + -mem[64] + 68
                    mem[floor32(_59745) + _59743 + 68] = mem[floor32(_59745) + _59743 + -(_59745 % 32) + 100 len _59745 % 32]
                    revert with memory
                      from mem[64]
                       len floor32(_59745) + _59743 + -mem[64] + 100
            else:
                mem[64] = ceil32(return_data.size) + 261
                mem[260] = return_data.size
                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    mem[ceil32(return_data.size) + 265] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43101 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43102 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43102 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43102 + 36 len 28]
                                    mem[64] = _43101 + 164
                                    mem[_43101 + 100] = 32
                                    mem[_43101 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43101 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44276 = mem[_43102]
                                    t = _43102 + 32
                                    u = _43101 + 164
                                    s = mem[_43102]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_43101 + floor32(mem[_43102]) + 164] = mem[_43102 + -(mem[_43102] % 32) + floor32(mem[_43102]) + 64 len mem[_43102] % 32] or Mask(8 * -(mem[_43102] % 32) + 32, -(8 * -(mem[_43102] % 32) + 32) + 256, mem[_43101 + floor32(mem[_43102]) + 164])
                                    call underlyingAddress.mem[_43101 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_43101 + 168 len _44276 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_43101 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_43101 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_43101 + 168] = 32
                                        mem[_43101 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _43101 + 232] = mem[idx + _43101 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _43101 + -mem[64] + 264
                                    mem[64] = _43101 + ceil32(return_data.size) + 165
                                    mem[_43101 + 164] = return_data.size
                                    mem[_43101 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_43101 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43101 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_43101 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43101 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43101 + ceil32(return_data.size) + 233] = mem[idx + _43101 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_43101 + ceil32(return_data.size) + 233]
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] < 0 / investmentRatioDenominator:
                                    _44944 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                    _44945 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_44945 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44945 + 36 len 28]
                                    mem[64] = _44944 + 164
                                    mem[_44944 + 100] = 32
                                    mem[_44944 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44944 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _47518 = mem[_44945]
                                    t = _44945 + 32
                                    u = _44944 + 164
                                    s = mem[_44945]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_44944 + floor32(mem[_44945]) + 164] = mem[_44945 + -(mem[_44945] % 32) + floor32(mem[_44945]) + 64 len mem[_44945] % 32] or Mask(8 * -(mem[_44945] % 32) + 32, -(8 * -(mem[_44945] % 32) + 32) + 256, mem[_44944 + floor32(mem[_44945]) + 164])
                                    call underlyingAddress.mem[_44944 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_44944 + 168 len _47518 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_44944 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_44944 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_44944 + 168] = 32
                                        mem[_44944 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _44944 + 232] = mem[idx + _44944 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _44944 + -mem[64] + 264
                                    mem[64] = _44944 + ceil32(return_data.size) + 165
                                    mem[_44944 + 164] = return_data.size
                                    mem[_44944 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_44944 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_44944 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_44944 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_44944 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _44944 + ceil32(return_data.size) + 233] = mem[idx + _44944 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_44944 + ceil32(return_data.size) + 233]
                                _45308 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                _45309 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45309 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45309 + 36 len 28]
                                mem[64] = _45308 + 164
                                mem[_45308 + 100] = 32
                                mem[_45308 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45308 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48160 = mem[_45309]
                                t = _45309 + 32
                                u = _45308 + 164
                                s = mem[_45309]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45308 + floor32(mem[_45309]) + 164] = mem[_45309 + -(mem[_45309] % 32) + floor32(mem[_45309]) + 64 len mem[_45309] % 32] or Mask(8 * -(mem[_45309] % 32) + 32, -(8 * -(mem[_45309] % 32) + 32) + 256, mem[_45308 + floor32(mem[_45309]) + 164])
                                call underlyingAddress.mem[_45308 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45308 + 168 len _48160 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45308 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45308 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45308 + 168] = 32
                                    mem[_45308 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45308 + 232] = mem[idx + _45308 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45308 + -mem[64] + 264
                                mem[64] = _45308 + ceil32(return_data.size) + 165
                                mem[_45308 + 164] = return_data.size
                                mem[_45308 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45308 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45308 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45308 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45308 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45308 + ceil32(return_data.size) + 233] = mem[idx + _45308 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45308 + ceil32(return_data.size) + 233]
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43388 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43389 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43389 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43389 + 36 len 28]
                                mem[64] = _43388 + 164
                                mem[_43388 + 100] = 32
                                mem[_43388 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43388 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44483 = mem[_43389]
                                t = _43389 + 32
                                u = mem[64]
                                s = mem[_43389]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_43389])] = mem[_43389 + floor32(mem[_43389]) + -(mem[_43389] % 32) + 64 len mem[_43389] % 32] or Mask(8 * -(mem[_43389] % 32) + 32, -(8 * -(mem[_43389] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43389])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _44483 + _43388 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59867 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43388 + 100]
                                    _59869 = mem[_43388 + 100]
                                    idx = 0
                                    while idx < _59869:
                                        mem[idx + _59867 + 68] = mem[idx + _43388 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59869 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59869 + _59867 + -mem[64] + 68
                                    mem[floor32(_59869) + _59867 + 68] = mem[floor32(_59869) + _59867 + -(_59869 % 32) + 100 len _59869 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59869) + _59867 + -mem[64] + 100
                                _57428 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57428] = return_data.size
                                mem[_57428 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57428 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59871 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43388 + 100]
                                _59873 = mem[_43388 + 100]
                                idx = 0
                                while idx < _59873:
                                    mem[idx + _59871 + 68] = mem[idx + _43388 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59873 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59873 + _59871 + -mem[64] + 68
                                mem[floor32(_59873) + _59871 + 68] = mem[floor32(_59873) + _59871 + -(_59873 % 32) + 100 len _59873 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59873) + _59871 + -mem[64] + 100
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                                _45639 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _45640 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45640 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45640 + 36 len 28]
                                mem[64] = _45639 + 164
                                mem[_45639 + 100] = 32
                                mem[_45639 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45639 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48928 = mem[_45640]
                                t = _45640 + 32
                                u = _45639 + 164
                                s = mem[_45640]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45639 + floor32(mem[_45640]) + 164] = mem[_45640 + -(mem[_45640] % 32) + floor32(mem[_45640]) + 64 len mem[_45640] % 32] or Mask(8 * -(mem[_45640] % 32) + 32, -(8 * -(mem[_45640] % 32) + 32) + 256, mem[_45639 + floor32(mem[_45640]) + 164])
                                call underlyingAddress.mem[_45639 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45639 + 168 len _48928 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45639 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45639 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45639 + 168] = 32
                                    mem[_45639 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45639 + 232] = mem[idx + _45639 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45639 + -mem[64] + 264
                                mem[64] = _45639 + ceil32(return_data.size) + 165
                                mem[_45639 + 164] = return_data.size
                                mem[_45639 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45639 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45639 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45639 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45639 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45639 + ceil32(return_data.size) + 233] = mem[idx + _45639 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45639 + ceil32(return_data.size) + 233]
                            _45312 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                            _45313 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45313 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45313 + 36 len 28]
                            mem[64] = _45312 + 164
                            mem[_45312 + 100] = 32
                            mem[_45312 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45312 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48170 = mem[_45313]
                            t = _45313 + 32
                            u = mem[64]
                            s = mem[_45313]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45313])] = mem[_45313 + floor32(mem[_45313]) + -(mem[_45313] % 32) + 64 len mem[_45313] % 32] or Mask(8 * -(mem[_45313] % 32) + 32, -(8 * -(mem[_45313] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45313])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48170 + _45312 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59875 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45312 + 100]
                                _59877 = mem[_45312 + 100]
                                idx = 0
                                while idx < _59877:
                                    mem[idx + _59875 + 68] = mem[idx + _45312 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59877 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59877 + _59875 + -mem[64] + 68
                                mem[floor32(_59877) + _59875 + 68] = mem[floor32(_59877) + _59875 + -(_59877 % 32) + 100 len _59877 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59877) + _59875 + -mem[64] + 100
                            _57429 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57429] = return_data.size
                            mem[_57429 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57429 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59879 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45312 + 100]
                            _59881 = mem[_45312 + 100]
                            idx = 0
                            while idx < _59881:
                                mem[idx + _59879 + 68] = mem[idx + _45312 + 132]
                                idx = idx + 32
                                continue 
                            if not _59881 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59881 + _59879 + -mem[64] + 68
                            mem[floor32(_59881) + _59879 + 68] = mem[floor32(_59881) + _59879 + -(_59881 % 32) + 100 len _59881 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59881) + _59879 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                            if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43379 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _43380 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43380 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43380 + 36 len 28]
                                mem[64] = _43379 + 164
                                mem[_43379 + 100] = 32
                                mem[_43379 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43379 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44478 = mem[_43380]
                                t = _43380 + 32
                                u = _43379 + 164
                                s = mem[_43380]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43379 + floor32(mem[_43380]) + 164] = mem[_43380 + -(mem[_43380] % 32) + floor32(mem[_43380]) + 64 len mem[_43380] % 32] or Mask(8 * -(mem[_43380] % 32) + 32, -(8 * -(mem[_43380] % 32) + 32) + 256, mem[_43379 + floor32(mem[_43380]) + 164])
                                call underlyingAddress.mem[_43379 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43379 + 168 len _44478 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43379 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43379 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43379 + 168] = 32
                                    mem[_43379 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43379 + 232] = mem[idx + _43379 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43379 + -mem[64] + 264
                                mem[64] = _43379 + ceil32(return_data.size) + 165
                                mem[_43379 + 164] = return_data.size
                                mem[_43379 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43379 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43379 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43379 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43379 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43379 + ceil32(return_data.size) + 233] = mem[idx + _43379 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43379 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                _45300 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45301 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45301 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45301 + 36 len 28]
                                mem[64] = _45300 + 164
                                mem[_45300 + 100] = 32
                                mem[_45300 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45300 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48150 = mem[_45301]
                                t = _45301 + 32
                                u = _45300 + 164
                                s = mem[_45301]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45300 + floor32(mem[_45301]) + 164] = mem[_45301 + -(mem[_45301] % 32) + floor32(mem[_45301]) + 64 len mem[_45301] % 32] or Mask(8 * -(mem[_45301] % 32) + 32, -(8 * -(mem[_45301] % 32) + 32) + 256, mem[_45300 + floor32(mem[_45301]) + 164])
                                call underlyingAddress.mem[_45300 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45300 + 168 len _48150 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45300 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45300 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45300 + 168] = 32
                                    mem[_45300 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45300 + 232] = mem[idx + _45300 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45300 + -mem[64] + 264
                                mem[64] = _45300 + ceil32(return_data.size) + 165
                                mem[_45300 + 164] = return_data.size
                                mem[_45300 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45300 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45300 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45300 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45300 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45300 + ceil32(return_data.size) + 233] = mem[idx + _45300 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45300 + ceil32(return_data.size) + 233]
                            _45630 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _45631 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45631 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45631 + 36 len 28]
                            mem[64] = _45630 + 164
                            mem[_45630 + 100] = 32
                            mem[_45630 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45630 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48904 = mem[_45631]
                            t = _45631 + 32
                            u = _45630 + 164
                            s = mem[_45631]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45630 + floor32(mem[_45631]) + 164] = mem[_45631 + -(mem[_45631] % 32) + floor32(mem[_45631]) + 64 len mem[_45631] % 32] or Mask(8 * -(mem[_45631] % 32) + 32, -(8 * -(mem[_45631] % 32) + 32) + 256, mem[_45630 + floor32(mem[_45631]) + 164])
                            call underlyingAddress.mem[_45630 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45630 + 168 len _48904 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45630 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45630 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45630 + 168] = 32
                                mem[_45630 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45630 + 232] = mem[idx + _45630 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45630 + -mem[64] + 264
                            mem[64] = _45630 + ceil32(return_data.size) + 165
                            mem[_45630 + 164] = return_data.size
                            mem[_45630 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45630 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45630 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45630 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45630 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45630 + ceil32(return_data.size) + 233] = mem[idx + _45630 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45630 + ceil32(return_data.size) + 233]
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43597 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43598 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43598 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43598 + 36 len 28]
                            mem[64] = _43597 + 164
                            mem[_43597 + 100] = 32
                            mem[_43597 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43597 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44676 = mem[_43598]
                            t = _43598 + 32
                            u = _43597 + 164
                            s = mem[_43598]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_43597 + floor32(mem[_43598]) + 164] = mem[_43598 + -(mem[_43598] % 32) + floor32(mem[_43598]) + 64 len mem[_43598] % 32] or Mask(8 * -(mem[_43598] % 32) + 32, -(8 * -(mem[_43598] % 32) + 32) + 256, mem[_43597 + floor32(mem[_43598]) + 164])
                            call underlyingAddress.mem[_43597 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_43597 + 168 len _44676 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43597 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_43597 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43597 + 168] = 32
                                mem[_43597 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43597 + 232] = mem[idx + _43597 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _43597 + -mem[64] + 264
                            mem[64] = _43597 + ceil32(return_data.size) + 165
                            mem[_43597 + 164] = return_data.size
                            mem[_43597 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_43597 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_43597 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_43597 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_43597 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _43597 + ceil32(return_data.size) + 233] = mem[idx + _43597 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_43597 + ceil32(return_data.size) + 233]
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                            _45853 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45854 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45854 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45854 + 36 len 28]
                            mem[64] = _45853 + 164
                            mem[_45853 + 100] = 32
                            mem[_45853 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45853 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49624 = mem[_45854]
                            t = _45854 + 32
                            u = _45853 + 164
                            s = mem[_45854]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45853 + floor32(mem[_45854]) + 164] = mem[_45854 + -(mem[_45854] % 32) + floor32(mem[_45854]) + 64 len mem[_45854] % 32] or Mask(8 * -(mem[_45854] % 32) + 32, -(8 * -(mem[_45854] % 32) + 32) + 256, mem[_45853 + floor32(mem[_45854]) + 164])
                            call underlyingAddress.mem[_45853 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45853 + 168 len _49624 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45853 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45853 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45853 + 168] = 32
                                mem[_45853 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45853 + 232] = mem[idx + _45853 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45853 + -mem[64] + 264
                            mem[64] = _45853 + ceil32(return_data.size) + 165
                            mem[_45853 + 164] = return_data.size
                            mem[_45853 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45853 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45853 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45853 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45853 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45853 + ceil32(return_data.size) + 233] = mem[idx + _45853 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45853 + ceil32(return_data.size) + 233]
                        _45634 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45635 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45635 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45635 + 36 len 28]
                        mem[64] = _45634 + 164
                        mem[_45634 + 100] = 32
                        mem[_45634 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45634 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48914 = mem[_45635]
                        t = _45635 + 32
                        u = mem[64]
                        s = mem[_45635]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45635])] = mem[_45635 + floor32(mem[_45635]) + -(mem[_45635] % 32) + 64 len mem[_45635] % 32] or Mask(8 * -(mem[_45635] % 32) + 32, -(8 * -(mem[_45635] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45635])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48914 + _45634 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59827 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45634 + 100]
                            _59829 = mem[_45634 + 100]
                            idx = 0
                            while idx < _59829:
                                mem[idx + _59827 + 68] = mem[idx + _45634 + 132]
                                idx = idx + 32
                                continue 
                            if not _59829 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59829 + _59827 + -mem[64] + 68
                            mem[floor32(_59829) + _59827 + 68] = mem[floor32(_59829) + _59827 + -(_59829 % 32) + 100 len _59829 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59829) + _59827 + -mem[64] + 100
                        _57423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57423] = return_data.size
                        mem[_57423 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57423 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59831 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45634 + 100]
                        _59833 = mem[_45634 + 100]
                        idx = 0
                        while idx < _59833:
                            mem[idx + _59831 + 68] = mem[idx + _45634 + 132]
                            idx = idx + 32
                            continue 
                        if not _59833 % 32:
                            revert with memory
                              from mem[64]
                               len _59833 + _59831 + -mem[64] + 68
                        mem[floor32(_59833) + _59831 + 68] = mem[floor32(_59833) + _59831 + -(_59833 % 32) + 100 len _59833 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59833) + _59831 + -mem[64] + 100
                else:
                    require return_data.size >= 32
                    if not mem[292]:
                        revert with 0, 
                                    32,
                                    42,
                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[ceil32(return_data.size) + 371 len 22]
                    mem[ceil32(return_data.size) + 265] = this.address
                    require ext_code.size(underlyingAddress)
                    staticcall underlyingAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[ceil32(return_data.size) + 261] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    idx = 0
                    while idx < activeStrategies.length:
                        require idx < investmentRatioNumerators.length
                        mem[0] = 8
                        if not ext_call.return_data[0]:
                            if investmentRatioDenominator <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require investmentRatioDenominator
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(underlyingAddress)
                            staticcall underlyingAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 / investmentRatioDenominator < ext_call.return_data[0]:
                                if not 0 / investmentRatioDenominator:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                if caps[idx] <= 0:
                                    mem[0] = 6
                                    _43112 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _43113 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_43113 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43113 + 36 len 28]
                                    mem[64] = _43112 + 164
                                    mem[_43112 + 100] = 32
                                    mem[_43112 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43112 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _44283 = mem[_43113]
                                    t = _43113 + 32
                                    u = mem[64]
                                    s = mem[_43113]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[mem[64] + floor32(mem[_43113])] = mem[_43113 + floor32(mem[_43113]) + -(mem[_43113] % 32) + 64 len mem[_43113] % 32] or Mask(8 * -(mem[_43113] % 32) + 32, -(8 * -(mem[_43113] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43113])])
                                    call underlyingAddress.mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _44283 + _43112 + -mem[64] + 160]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[mem[64] + 110 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        _59939 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = mem[_43112 + 100]
                                        _59941 = mem[_43112 + 100]
                                        idx = 0
                                        while idx < _59941:
                                            mem[idx + _59939 + 68] = mem[idx + _43112 + 132]
                                            idx = idx + 32
                                            continue 
                                        if not _59941 % 32:
                                            revert with memory
                                              from mem[64]
                                               len _59941 + _59939 + -mem[64] + 68
                                        mem[floor32(_59941) + _59939 + 68] = mem[floor32(_59941) + _59939 + -(_59941 % 32) + 100 len _59941 % 32]
                                        revert with memory
                                          from mem[64]
                                           len floor32(_59941) + _59939 + -mem[64] + 100
                                    _57437 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                    mem[_57437] = return_data.size
                                    mem[_57437 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_57437 + 32]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _59943 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_43112 + 100]
                                    _59945 = mem[_43112 + 100]
                                    idx = 0
                                    while idx < _59945:
                                        mem[idx + _59943 + 68] = mem[idx + _43112 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59945 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59945 + _59943 + -mem[64] + 68
                                    mem[floor32(_59945) + _59943 + 68] = mem[floor32(_59945) + _59943 + -(_59945 % 32) + 100 len _59945 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59945) + _59943 + -mem[64] + 100
                                require ext_code.size(address(activeStrategies[idx]))
                                staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require idx < caps.length
                                mem[0] = 7
                                if ext_call.return_data[0] >= caps[idx]:
                                    idx = idx + 1
                                    continue 
                                require idx < caps.length
                                require idx < activeStrategies.length
                                mem[0] = 6
                                if caps[idx] - ext_call.return_data[0] >= 0 / investmentRatioDenominator:
                                    _45324 = mem[64]
                                    mem[mem[64] + 36] = address(activeStrategies[idx])
                                    mem[mem[64] + 68] = 0 / investmentRatioDenominator
                                    _45325 = mem[64]
                                    mem[mem[64]] = 68
                                    mem[64] = mem[64] + 100
                                    mem[_45325 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45325 + 36 len 28]
                                    mem[64] = _45324 + 164
                                    mem[_45324 + 100] = 32
                                    mem[_45324 + 132] = 'SafeERC20: low-level call failed'
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45324 + 270 len 26]
                                    if not ext_code.size(underlyingAddress):
                                        revert with 0, 'Address: call to non-contract'
                                    _48190 = mem[_45325]
                                    t = _45325 + 32
                                    u = _45324 + 164
                                    s = mem[_45325]
                                    while s >= 32:
                                        mem[u] = mem[t]
                                        t = t + 32
                                        u = u + 32
                                        s = s - 32
                                        continue 
                                    mem[_45324 + floor32(mem[_45325]) + 164] = mem[_45325 + -(mem[_45325] % 32) + floor32(mem[_45325]) + 64 len mem[_45325] % 32] or Mask(8 * -(mem[_45325] % 32) + 32, -(8 * -(mem[_45325] % 32) + 32) + 256, mem[_45324 + floor32(mem[_45325]) + 164])
                                    call underlyingAddress.mem[_45324 + 164 len 4] with:
                                         gas gas_remaining wei
                                        args mem[_45324 + 168 len _48190 - 4]
                                    if not return_data.size:
                                        if ext_call.success:
                                            if mem[96]:
                                                require mem[96] >= 32
                                                if not mem[128]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[_45324 + 274 len 22]
                                            idx = idx + 1
                                            continue 
                                        if mem[96]:
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        mem[_45324 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[_45324 + 168] = 32
                                        mem[_45324 + 200] = 32
                                        idx = 0
                                        while idx < 32:
                                            mem[idx + _45324 + 232] = mem[idx + _45324 + 132]
                                            idx = idx + 32
                                            continue 
                                        revert with memory
                                          from mem[64]
                                           len _45324 + -mem[64] + 264
                                    mem[64] = _45324 + ceil32(return_data.size) + 165
                                    mem[_45324 + 164] = return_data.size
                                    mem[_45324 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if ext_call.success:
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[_45324 + 196]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45324 + ceil32(return_data.size) + 275 len 22]
                                        idx = idx + 1
                                        continue 
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[_45324 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45324 + ceil32(return_data.size) + 169] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45324 + ceil32(return_data.size) + 233] = mem[idx + _45324 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with 0, 32, 32, mem[_45324 + ceil32(return_data.size) + 233]
                                _44956 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _44957 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_44957 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_44957 + 36 len 28]
                                mem[64] = _44956 + 164
                                mem[_44956 + 100] = 32
                                mem[_44956 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_44956 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _47534 = mem[_44957]
                                t = _44957 + 32
                                u = mem[64]
                                s = mem[_44957]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[mem[64] + floor32(mem[_44957])] = mem[_44957 + floor32(mem[_44957]) + -(mem[_44957] % 32) + 64 len mem[_44957] % 32] or Mask(8 * -(mem[_44957] % 32) + 32, -(8 * -(mem[_44957] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_44957])])
                                call underlyingAddress.mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _47534 + _44956 + -mem[64] + 160]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[mem[64] + 110 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    _59947 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = mem[_44956 + 100]
                                    _59949 = mem[_44956 + 100]
                                    idx = 0
                                    while idx < _59949:
                                        mem[idx + _59947 + 68] = mem[idx + _44956 + 132]
                                        idx = idx + 32
                                        continue 
                                    if not _59949 % 32:
                                        revert with memory
                                          from mem[64]
                                           len _59949 + _59947 + -mem[64] + 68
                                    mem[floor32(_59949) + _59947 + 68] = mem[floor32(_59949) + _59947 + -(_59949 % 32) + 100 len _59949 % 32]
                                    revert with memory
                                      from mem[64]
                                       len floor32(_59949) + _59947 + -mem[64] + 100
                                _57438 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_57438] = return_data.size
                                mem[_57438 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_57438 + 32]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _59951 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_44956 + 100]
                                _59953 = mem[_44956 + 100]
                                idx = 0
                                while idx < _59953:
                                    mem[idx + _59951 + 68] = mem[idx + _44956 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59953 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59953 + _59951 + -mem[64] + 68
                                mem[floor32(_59953) + _59951 + 68] = mem[floor32(_59953) + _59951 + -(_59953 % 32) + 100 len _59953 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59953) + _59951 + -mem[64] + 100
                            if not ext_call.return_data[0]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43400 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = ext_call.return_data[0]
                                _43401 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43401 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43401 + 36 len 28]
                                mem[64] = _43400 + 164
                                mem[_43400 + 100] = 32
                                mem[_43400 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43400 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44492 = mem[_43401]
                                t = _43401 + 32
                                u = _43400 + 164
                                s = mem[_43401]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43400 + floor32(mem[_43401]) + 164] = mem[_43401 + -(mem[_43401] % 32) + floor32(mem[_43401]) + 64 len mem[_43401] % 32] or Mask(8 * -(mem[_43401] % 32) + 32, -(8 * -(mem[_43401] % 32) + 32) + 256, mem[_43400 + floor32(mem[_43401]) + 164])
                                call underlyingAddress.mem[_43400 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43400 + 168 len _44492 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43400 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43400 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43400 + 168] = 32
                                    mem[_43400 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43400 + 232] = mem[idx + _43400 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43400 + -mem[64] + 264
                                mem[64] = _43400 + ceil32(return_data.size) + 165
                                mem[_43400 + 164] = return_data.size
                                mem[_43400 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43400 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43400 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43400 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43400 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43400 + ceil32(return_data.size) + 233] = mem[idx + _43400 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43400 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < ext_call.return_data[0]:
                                _45328 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45329 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45329 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45329 + 36 len 28]
                                mem[64] = _45328 + 164
                                mem[_45328 + 100] = 32
                                mem[_45328 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45328 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48200 = mem[_45329]
                                t = _45329 + 32
                                u = _45328 + 164
                                s = mem[_45329]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45328 + floor32(mem[_45329]) + 164] = mem[_45329 + -(mem[_45329] % 32) + floor32(mem[_45329]) + 64 len mem[_45329] % 32] or Mask(8 * -(mem[_45329] % 32) + 32, -(8 * -(mem[_45329] % 32) + 32) + 256, mem[_45328 + floor32(mem[_45329]) + 164])
                                call underlyingAddress.mem[_45328 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45328 + 168 len _48200 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45328 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45328 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45328 + 168] = 32
                                    mem[_45328 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45328 + 232] = mem[idx + _45328 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45328 + -mem[64] + 264
                                mem[64] = _45328 + ceil32(return_data.size) + 165
                                mem[_45328 + 164] = return_data.size
                                mem[_45328 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45328 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45328 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45328 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45328 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45328 + ceil32(return_data.size) + 233] = mem[idx + _45328 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45328 + ceil32(return_data.size) + 233]
                            _45652 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45653 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45653 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45653 + 36 len 28]
                            mem[64] = _45652 + 164
                            mem[_45652 + 100] = 32
                            mem[_45652 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45652 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48960 = mem[_45653]
                            t = _45653 + 32
                            u = mem[64]
                            s = mem[_45653]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45653])] = mem[_45653 + floor32(mem[_45653]) + -(mem[_45653] % 32) + 64 len mem[_45653] % 32] or Mask(8 * -(mem[_45653] % 32) + 32, -(8 * -(mem[_45653] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45653])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48960 + _45652 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59979 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45652 + 100]
                                _59981 = mem[_45652 + 100]
                                idx = 0
                                while idx < _59981:
                                    mem[idx + _59979 + 68] = mem[idx + _45652 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59981 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59981 + _59979 + -mem[64] + 68
                                mem[floor32(_59981) + _59979 + 68] = mem[floor32(_59981) + _59979 + -(_59981 % 32) + 100 len _59981 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59981) + _59979 + -mem[64] + 100
                            _57442 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57442] = return_data.size
                            mem[_57442 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57442 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59983 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45652 + 100]
                            _59985 = mem[_45652 + 100]
                            idx = 0
                            while idx < _59985:
                                mem[idx + _59983 + 68] = mem[idx + _45652 + 132]
                                idx = idx + 32
                                continue 
                            if not _59985 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59985 + _59983 + -mem[64] + 68
                            mem[floor32(_59985) + _59983 + 68] = mem[floor32(_59985) + _59983 + -(_59985 % 32) + 100 len _59985 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59985) + _59983 + -mem[64] + 100
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / ext_call.return_data[0] != investmentRatioNumerators[idx]:
                            revert with 0, 32, 33, 0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if investmentRatioDenominator <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require investmentRatioDenominator
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(underlyingAddress)
                        staticcall underlyingAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator < ext_call.return_data[0]:
                            if not investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            if caps[idx] <= 0:
                                mem[0] = 6
                                _43391 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                                _43392 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_43392 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43392 + 36 len 28]
                                mem[64] = _43391 + 164
                                mem[_43391 + 100] = 32
                                mem[_43391 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43391 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _44487 = mem[_43392]
                                t = _43392 + 32
                                u = _43391 + 164
                                s = mem[_43392]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_43391 + floor32(mem[_43392]) + 164] = mem[_43392 + -(mem[_43392] % 32) + floor32(mem[_43392]) + 64 len mem[_43392] % 32] or Mask(8 * -(mem[_43392] % 32) + 32, -(8 * -(mem[_43392] % 32) + 32) + 256, mem[_43391 + floor32(mem[_43392]) + 164])
                                call underlyingAddress.mem[_43391 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_43391 + 168 len _44487 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_43391 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_43391 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_43391 + 168] = 32
                                    mem[_43391 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _43391 + 232] = mem[idx + _43391 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _43391 + -mem[64] + 264
                                mem[64] = _43391 + ceil32(return_data.size) + 165
                                mem[_43391 + 164] = return_data.size
                                mem[_43391 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_43391 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_43391 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_43391 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_43391 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _43391 + ceil32(return_data.size) + 233] = mem[idx + _43391 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_43391 + ceil32(return_data.size) + 233]
                            require ext_code.size(address(activeStrategies[idx]))
                            staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require idx < caps.length
                            mem[0] = 7
                            if ext_call.return_data[0] >= caps[idx]:
                                idx = idx + 1
                                continue 
                            require idx < caps.length
                            require idx < activeStrategies.length
                            mem[0] = 6
                            if caps[idx] - ext_call.return_data[0] < investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator:
                                _45316 = mem[64]
                                mem[mem[64] + 36] = address(activeStrategies[idx])
                                mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                                _45317 = mem[64]
                                mem[mem[64]] = 68
                                mem[64] = mem[64] + 100
                                mem[_45317 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45317 + 36 len 28]
                                mem[64] = _45316 + 164
                                mem[_45316 + 100] = 32
                                mem[_45316 + 132] = 'SafeERC20: low-level call failed'
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45316 + 270 len 26]
                                if not ext_code.size(underlyingAddress):
                                    revert with 0, 'Address: call to non-contract'
                                _48180 = mem[_45317]
                                t = _45317 + 32
                                u = _45316 + 164
                                s = mem[_45317]
                                while s >= 32:
                                    mem[u] = mem[t]
                                    t = t + 32
                                    u = u + 32
                                    s = s - 32
                                    continue 
                                mem[_45316 + floor32(mem[_45317]) + 164] = mem[_45317 + -(mem[_45317] % 32) + floor32(mem[_45317]) + 64 len mem[_45317] % 32] or Mask(8 * -(mem[_45317] % 32) + 32, -(8 * -(mem[_45317] % 32) + 32) + 256, mem[_45316 + floor32(mem[_45317]) + 164])
                                call underlyingAddress.mem[_45316 + 164 len 4] with:
                                     gas gas_remaining wei
                                    args mem[_45316 + 168 len _48180 - 4]
                                if not return_data.size:
                                    if ext_call.success:
                                        if mem[96]:
                                            require mem[96] >= 32
                                            if not mem[128]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[_45316 + 274 len 22]
                                        idx = idx + 1
                                        continue 
                                    if mem[96]:
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    mem[_45316 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[_45316 + 168] = 32
                                    mem[_45316 + 200] = 32
                                    idx = 0
                                    while idx < 32:
                                        mem[idx + _45316 + 232] = mem[idx + _45316 + 132]
                                        idx = idx + 32
                                        continue 
                                    revert with memory
                                      from mem[64]
                                       len _45316 + -mem[64] + 264
                                mem[64] = _45316 + ceil32(return_data.size) + 165
                                mem[_45316 + 164] = return_data.size
                                mem[_45316 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if ext_call.success:
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[_45316 + 196]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45316 + ceil32(return_data.size) + 275 len 22]
                                    idx = idx + 1
                                    continue 
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_45316 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45316 + ceil32(return_data.size) + 169] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45316 + ceil32(return_data.size) + 233] = mem[idx + _45316 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with 0, 32, 32, mem[_45316 + ceil32(return_data.size) + 233]
                            _45643 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = investmentRatioNumerators[idx] * ext_call.return_data[0] / investmentRatioDenominator
                            _45644 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45644 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45644 + 36 len 28]
                            mem[64] = _45643 + 164
                            mem[_45643 + 100] = 32
                            mem[_45643 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45643 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _48936 = mem[_45644]
                            t = _45644 + 32
                            u = mem[64]
                            s = mem[_45644]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_45644])] = mem[_45644 + floor32(mem[_45644]) + -(mem[_45644] % 32) + 64 len mem[_45644] % 32] or Mask(8 * -(mem[_45644] % 32) + 32, -(8 * -(mem[_45644] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45644])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _48936 + _45643 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59907 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_45643 + 100]
                                _59909 = mem[_45643 + 100]
                                idx = 0
                                while idx < _59909:
                                    mem[idx + _59907 + 68] = mem[idx + _45643 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59909 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59909 + _59907 + -mem[64] + 68
                                mem[floor32(_59909) + _59907 + 68] = mem[floor32(_59909) + _59907 + -(_59909 % 32) + 100 len _59909 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59909) + _59907 + -mem[64] + 100
                            _57433 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57433] = return_data.size
                            mem[_57433 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57433 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59911 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45643 + 100]
                            _59913 = mem[_45643 + 100]
                            idx = 0
                            while idx < _59913:
                                mem[idx + _59911 + 68] = mem[idx + _45643 + 132]
                                idx = idx + 32
                                continue 
                            if not _59913 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59913 + _59911 + -mem[64] + 68
                            mem[floor32(_59913) + _59911 + 68] = mem[floor32(_59913) + _59911 + -(_59913 % 32) + 100 len _59913 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59913) + _59911 + -mem[64] + 100
                        if not ext_call.return_data[0]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        if caps[idx] <= 0:
                            mem[0] = 6
                            _43605 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _43606 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_43606 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_43606 + 36 len 28]
                            mem[64] = _43605 + 164
                            mem[_43605 + 100] = 32
                            mem[_43605 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_43605 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _44684 = mem[_43606]
                            t = _43606 + 32
                            u = mem[64]
                            s = mem[_43606]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[mem[64] + floor32(mem[_43606])] = mem[_43606 + floor32(mem[_43606]) + -(mem[_43606] % 32) + 64 len mem[_43606] % 32] or Mask(8 * -(mem[_43606] % 32) + 32, -(8 * -(mem[_43606] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_43606])])
                            call underlyingAddress.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _44684 + _43605 + -mem[64] + 160]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[mem[64] + 110 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                _59915 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = mem[_43605 + 100]
                                _59917 = mem[_43605 + 100]
                                idx = 0
                                while idx < _59917:
                                    mem[idx + _59915 + 68] = mem[idx + _43605 + 132]
                                    idx = idx + 32
                                    continue 
                                if not _59917 % 32:
                                    revert with memory
                                      from mem[64]
                                       len _59917 + _59915 + -mem[64] + 68
                                mem[floor32(_59917) + _59915 + 68] = mem[floor32(_59917) + _59915 + -(_59917 % 32) + 100 len _59917 % 32]
                                revert with memory
                                  from mem[64]
                                   len floor32(_59917) + _59915 + -mem[64] + 100
                            _57434 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_57434] = return_data.size
                            mem[_57434 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_57434 + 32]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            _59919 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_43605 + 100]
                            _59921 = mem[_43605 + 100]
                            idx = 0
                            while idx < _59921:
                                mem[idx + _59919 + 68] = mem[idx + _43605 + 132]
                                idx = idx + 32
                                continue 
                            if not _59921 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59921 + _59919 + -mem[64] + 68
                            mem[floor32(_59921) + _59919 + 68] = mem[floor32(_59921) + _59919 + -(_59921 % 32) + 100 len _59921 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59921) + _59919 + -mem[64] + 100
                        require ext_code.size(address(activeStrategies[idx]))
                        staticcall address(activeStrategies[idx]).0x45d01e4a with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require idx < caps.length
                        mem[0] = 7
                        if ext_call.return_data[0] >= caps[idx]:
                            idx = idx + 1
                            continue 
                        require idx < caps.length
                        require idx < activeStrategies.length
                        mem[0] = 6
                        if caps[idx] - ext_call.return_data[0] >= ext_call.return_data[0]:
                            _45861 = mem[64]
                            mem[mem[64] + 36] = address(activeStrategies[idx])
                            mem[mem[64] + 68] = ext_call.return_data[0]
                            _45862 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_45862 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45862 + 36 len 28]
                            mem[64] = _45861 + 164
                            mem[_45861 + 100] = 32
                            mem[_45861 + 132] = 'SafeERC20: low-level call failed'
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45861 + 270 len 26]
                            if not ext_code.size(underlyingAddress):
                                revert with 0, 'Address: call to non-contract'
                            _49653 = mem[_45862]
                            t = _45862 + 32
                            u = _45861 + 164
                            s = mem[_45862]
                            while s >= 32:
                                mem[u] = mem[t]
                                t = t + 32
                                u = u + 32
                                s = s - 32
                                continue 
                            mem[_45861 + floor32(mem[_45862]) + 164] = mem[_45862 + -(mem[_45862] % 32) + floor32(mem[_45862]) + 64 len mem[_45862] % 32] or Mask(8 * -(mem[_45862] % 32) + 32, -(8 * -(mem[_45862] % 32) + 32) + 256, mem[_45861 + floor32(mem[_45862]) + 164])
                            call underlyingAddress.mem[_45861 + 164 len 4] with:
                                 gas gas_remaining wei
                                args mem[_45861 + 168 len _49653 - 4]
                            if not return_data.size:
                                if ext_call.success:
                                    if mem[96]:
                                        require mem[96] >= 32
                                        if not mem[128]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[_45861 + 274 len 22]
                                    idx = idx + 1
                                    continue 
                                if mem[96]:
                                    revert with memory
                                      from 128
                                       len mem[96]
                                mem[_45861 + 164] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[_45861 + 168] = 32
                                mem[_45861 + 200] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _45861 + 232] = mem[idx + _45861 + 132]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _45861 + -mem[64] + 264
                            mem[64] = _45861 + ceil32(return_data.size) + 165
                            mem[_45861 + 164] = return_data.size
                            mem[_45861 + 196 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if ext_call.success:
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[_45861 + 196]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[_45861 + ceil32(return_data.size) + 275 len 22]
                                idx = idx + 1
                                continue 
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_45861 + ceil32(return_data.size) + 165] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[_45861 + ceil32(return_data.size) + 169] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _45861 + ceil32(return_data.size) + 233] = mem[idx + _45861 + 132]
                                idx = idx + 32
                                continue 
                            revert with 0, 32, 32, mem[_45861 + ceil32(return_data.size) + 233]
                        _45647 = mem[64]
                        mem[mem[64] + 36] = address(activeStrategies[idx])
                        mem[mem[64] + 68] = caps[idx] - ext_call.return_data[0]
                        _45648 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_45648 + 32] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000 or mem[_45648 + 36 len 28]
                        mem[64] = _45647 + 164
                        mem[_45647 + 100] = 32
                        mem[_45647 + 132] = 'SafeERC20: low-level call failed'
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x65416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[_45647 + 270 len 26]
                        if not ext_code.size(underlyingAddress):
                            revert with 0, 'Address: call to non-contract'
                        _48946 = mem[_45648]
                        t = _45648 + 32
                        u = mem[64]
                        s = mem[_45648]
                        while s >= 32:
                            mem[u] = mem[t]
                            t = t + 32
                            u = u + 32
                            s = s - 32
                            continue 
                        mem[mem[64] + floor32(mem[_45648])] = mem[_45648 + floor32(mem[_45648]) + -(mem[_45648] % 32) + 64 len mem[_45648] % 32] or Mask(8 * -(mem[_45648] % 32) + 32, -(8 * -(mem[_45648] % 32) + 32) + 256, mem[mem[64] + floor32(mem[_45648])])
                        call underlyingAddress.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _48946 + _45647 + -mem[64] + 160]
                        if not return_data.size:
                            if ext_call.success:
                                if mem[96]:
                                    require mem[96] >= 32
                                    if not mem[128]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[mem[64] + 110 len 22]
                                idx = idx + 1
                                continue 
                            if mem[96]:
                                revert with memory
                                  from 128
                                   len mem[96]
                            _59923 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = mem[_45647 + 100]
                            _59925 = mem[_45647 + 100]
                            idx = 0
                            while idx < _59925:
                                mem[idx + _59923 + 68] = mem[idx + _45647 + 132]
                                idx = idx + 32
                                continue 
                            if not _59925 % 32:
                                revert with memory
                                  from mem[64]
                                   len _59925 + _59923 + -mem[64] + 68
                            mem[floor32(_59925) + _59923 + 68] = mem[floor32(_59925) + _59923 + -(_59925 % 32) + 100 len _59925 % 32]
                            revert with memory
                              from mem[64]
                               len floor32(_59925) + _59923 + -mem[64] + 100
                        _57435 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_57435] = return_data.size
                        mem[_57435 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if ext_call.success:
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[_57435 + 32]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x795361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[mem[64] + 110 len 22]
                            idx = idx + 1
                            continue 
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        _59927 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = mem[_45647 + 100]
                        _59929 = mem[_45647 + 100]
                        idx = 0
                        while idx < _59929:
                            mem[idx + _59927 + 68] = mem[idx + _45647 + 132]
                            idx = idx + 32
                            continue 
                        if not _59929 % 32:
                            revert with memory
                              from mem[64]
                               len _59929 + _59927 + -mem[64] + 68
                        mem[floor32(_59929) + _59927 + 68] = mem[floor32(_59929) + _59927 + -(_59929 % 32) + 100 len _59929 % 32]
                        revert with memory
                          from mem[64]
                           len floor32(_59929) + _59927 + -mem[64] + 100
}



}
