contract main {




// =====================  Runtime code  =====================


#
#  - sub_049ebda6(?)
#  - sub_335ce7a9(?)
#  - sub_48c49ed0(?)
#  - sub_d04267c3(?)
#
address owner;
array of struct stor1;
array of struct stor2;
mapping of address ownerOf;
array of uint256 balanceOf;
array of struct stor5;
mapping of address approved;
array of struct stor7;
mapping of struct stor8;
uint256 sub_b49bb8f3;
uint256 sub_222d9d4a;
uint256 sub_fb0ecf68;
uint256 sub_f5597032;
uint256 sub_7e953ee7;
uint256 sub_6f8f1ceb;
uint256 sub_0ae55ae5;
uint256 sub_146daff4;
uint256 sub_e5d76232;
uint256 sub_19a41ea9;
uint256 sub_1ec4a4a8;
address stor20;
uint256 currentTokenId;
mapping of uint8 stor22;
mapping of struct sub_ded2abc3;
mapping of struct stor24;
array of struct stor25;

function getApproved(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not address(ownerOf[arg1]):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return address(approved[arg1])
}

function sub_0ae55ae5(?) payable {
    return sub_0ae55ae5
}

function sub_146daff4(?) payable {
    return sub_146daff4
}

function sub_19a41ea9(?) payable {
    return sub_19a41ea9
}

function sub_1ec4a4a8(?) payable {
    return sub_1ec4a4a8
}

function sub_222d9d4a(?) payable {
    return sub_222d9d4a
}

function WhiteListed(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor22[arg1])
}

function getCurrentTokenId() payable {
    return currentTokenId
}

function ownerOf(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    return address(ownerOf[arg1])
}

function sub_6f8f1ceb(?) payable {
    return sub_6f8f1ceb
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function sub_7e953ee7(?) payable {
    return sub_7e953ee7
}

function owner() payable {
    return owner
}

function sub_b49bb8f3(?) payable {
    return sub_b49bb8f3
}

function sub_ded2abc3(?) payable {
    require calldata.size - 4 >= 32
    return uint256(sub_ded2abc3[arg1].field_0)
}

function sub_e5d76232(?) payable {
    return sub_e5d76232
}

function isApprovedForAll(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(uint8(stor7[address(arg1)][address(arg2)].field_0))
}

function sub_f5597032(?) payable {
    return sub_f5597032
}

function sub_fb0ecf68(?) payable {
    return sub_fb0ecf68
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function setHelper(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor20 = arg1
}

function sub_9d041475(?) payable {
    require calldata.size - 4 >= 96
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_b49bb8f3 = arg1
    sub_222d9d4a = arg2
    sub_fb0ecf68 = arg3
}

function sub_37dc0aba(?) payable {
    require calldata.size - 4 >= 64
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    require uint8(stor24[arg1].field_1800) == 5
    uint256(sub_ded2abc3[arg1].field_0) = arg2
}

function setApprovalForAll(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    uint8(stor7[address(msg.sender)][address(arg1)].field_0) = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function sub_61c873f5(?) payable {
    require calldata.size - 4 >= 64
    require arg1 < 6
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 5:
        revert with 0, 33
    if arg1 == 4:
        sub_7e953ee7 = arg2
    else:
        if arg1 > 5:
            revert with 0, 33
        if arg1 != 5:
            sub_f5597032 = arg2
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function supportsInterface(bytes4 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function sub_d5abc335(?) payable {
    if stor25.length:
        mem[128] = uint256(stor25.field_0)
        idx = 128
        s = 0
        while (32 * stor25.length) + 96 > idx:
            mem[idx + 32] = uint256(stor25[s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
        return Array(len=stor25.length, data=mem[128 len 32 * stor25.length])
    mem[(32 * stor25.length) + 128] = 32
    mem[(32 * stor25.length) + 160] = stor25.length
    mem[(32 * stor25.length) + 192 len 32 * stor25.length] = mem[128 len 32 * stor25.length]
    return memory
      from (32 * stor25.length) + 128
       len (96 * stor25.length) + 64
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if arg1 == address(ownerOf[arg2]):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if address(ownerOf[arg2]) != msg.sender:
        if not uint8(stor7[address(stor3[arg2])][address(msg.sender)].field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    address(approved[arg2]) = arg1
    emit Approval(address(ownerOf[arg2]), arg1, arg2);
}

function setWhitelist(address[] arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < arg1.length:
        require cd[((32 * idx) + arg1 + 36)] == address(cd[((32 * idx) + arg1 + 36)])
        mem[0] = address(cd[((32 * idx) + arg1 + 36)])
        mem[32] = 22
        stor22[address(cd[((32 * idx) + arg1 + 36)])] = uint8(arg2)
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function getTokens(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if uint256(stor5[address(arg1)].field_0):
        mem[128] = uint256(stor5[address(arg1)].field_0)
        idx = 128
        s = 0
        while (32 * uint256(stor5[address(arg1)].field_0)) + 96 > idx:
            mem[idx + 32] = uint256(stor5[address(arg1)][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
        return Array(len=uint256(stor5[address(arg1)].field_0), data=mem[128 len 32 * uint256(stor5[address(arg1)].field_0)])
    mem[(32 * uint256(stor5[address(arg1)].field_0)) + 128] = 32
    mem[(32 * uint256(stor5[address(arg1)].field_0)) + 160] = uint256(stor5[address(arg1)].field_0)
    mem[(32 * uint256(stor5[address(arg1)].field_0)) + 192 len 32 * uint256(stor5[address(arg1)].field_0)] = mem[128 len 32 * uint256(stor5[address(arg1)].field_0)]
    return memory
      from (32 * uint256(stor5[address(arg1)].field_0)) + 128
       len (96 * uint256(stor5[address(arg1)].field_0)) + 64
}

function updateName(uint256 arg1, string arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 0, 65
    require arg2 + arg2.length + 36 <= calldata.size
    if address(ownerOf[arg1]) != msg.sender:
        revert with 0, 'Not owner'
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if arg2.length:
            uint256(stor24[arg1][].field_0) = Array(len=arg2.length, data=arg2[all])
        else:
            uint256(stor24[arg1].field_0) = 0
            idx = 0
            while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 31 / 32 > idx:
                uint256(stor24[arg1][idx].field_0) = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if arg2.length:
            uint256(stor24[arg1][].field_0) = Array(len=arg2.length, data=arg2[all])
        else:
            uint256(stor24[arg1].field_0) = 0
            idx = 0
            while stor24[arg1].field_1 % 128 + 31 / 32 > idx:
                uint256(stor24[arg1][idx].field_0) = 0
                idx = idx + 1
                continue 
    emit UpdateName(arg1, Array(len=arg2.length, data=arg2[all]));
}

function sub_67001c52(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    idx = 0
    while idx < ('cd', 4).length:
        require cd[((32 * idx) + cd[4] + 36)] < 6
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[36] + 36)] < 2
        if idx >= ('cd', 68).length:
            revert with 0, 50
        if cd[((32 * idx) + cd[4] + 36)] > 5:
            revert with 0, 33
        if cd[((32 * idx) + cd[4] + 36)] == 4:
            if cd[((32 * idx) + cd[36] + 36)] > 1:
                revert with 0, 33
            if cd[((32 * idx) + cd[36] + 36)]:
                sub_1ec4a4a8 = cd[((32 * idx) + cd[68] + 36)]
            else:
                sub_19a41ea9 = cd[((32 * idx) + cd[68] + 36)]
        else:
            if cd[((32 * idx) + cd[4] + 36)] > 5:
                revert with 0, 33
            if cd[((32 * idx) + cd[36] + 36)] > 1:
                revert with 0, 33
            if cd[((32 * idx) + cd[4] + 36)] != 5:
                if cd[((32 * idx) + cd[36] + 36)]:
                    sub_0ae55ae5 = cd[((32 * idx) + cd[68] + 36)]
                else:
                    sub_6f8f1ceb = cd[((32 * idx) + cd[68] + 36)]
            else:
                if cd[((32 * idx) + cd[36] + 36)]:
                    sub_e5d76232 = cd[((32 * idx) + cd[68] + 36)]
                else:
                    sub_146daff4 = cd[((32 * idx) + cd[68] + 36)]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function transferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not address(ownerOf[arg3]):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if address(ownerOf[arg3]) != msg.sender:
        if not address(ownerOf[arg3]):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if address(approved[arg3]) != msg.sender:
            if not uint8(stor7[address(stor3[arg3])][address(msg.sender)].field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer caller is not owner nor approved'
    if address(ownerOf[arg3]) != arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer to the zero address'
    address(approved[arg3]) = 0
    emit Approval(address(ownerOf[arg3]), 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    address(ownerOf[arg3]) = arg2
    emit Transfer(arg1, arg2, arg3);
    if arg1:
        idx = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if idx >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            if uint256(stor5[address(arg1)][idx].field_0) != arg3:
                if idx == -1:
                    revert with 0, 17
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                continue 
            if uint256(stor5[address(arg1)].field_0) < 1:
                revert with 0, 17
            if uint256(stor5[address(arg1)].field_0) - 1 >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            if idx >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            uint256(stor5[address(arg1)][idx].field_0) = uint256(stor5[address(arg1)][uint256(stor5[address(arg1)].field_0)].field_0)
            if not uint256(stor5[address(arg1)].field_0):
                revert with 0, 49
            uint256(stor5[address(arg1)][uint256(stor5[address(arg1)].field_0)].field_0) = 0
            uint256(stor5[address(arg1)].field_0)--
            if arg2:
                uint256(stor5[address(arg2)].field_0)++
                uint256(stor5[address(arg2)][uint256(stor5[address(arg2)].field_0)].field_0) = arg3
    if arg2:
        uint256(stor5[address(arg2)].field_0)++
        uint256(stor5[address(arg2)][uint256(stor5[address(arg2)].field_0)].field_0) = arg3
}

function name() payable {
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor1.length):
            if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor1.length):
                if 31 < uint255(stor1.length) * 0.5:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor1.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = uint256(stor1[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
        else:
            if bool(stor1.length) == stor1.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor1.length.field_1 % 128:
                if 31 < stor1.length.field_1 % 128:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while stor1.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = uint256(stor1[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
        mem[ceil32(uint255(stor1.length) * 0.5) + 192 len ceil32(uint255(stor1.length) * 0.5)] = mem[128 len ceil32(uint255(stor1.length) * 0.5)]
        if ceil32(uint255(stor1.length) * 0.5) > uint255(stor1.length) * 0.5:
            mem[(uint255(stor1.length) * 0.5) + ceil32(uint255(stor1.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)], mem[(2 * ceil32(uint255(stor1.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor1.length) * 0.5)]), 
    if bool(stor1.length) == stor1.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor1.length):
            if 31 < uint255(stor1.length) * 0.5:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while (uint255(stor1.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = uint256(stor1[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
    else:
        if bool(stor1.length) == stor1.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor1.length.field_1 % 128:
            if 31 < stor1.length.field_1 % 128:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while stor1.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = uint256(stor1[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor1.length.field_8)
    mem[ceil32(stor1.length.field_1 % 128) + 192 len ceil32(stor1.length.field_1 % 128)] = mem[128 len ceil32(stor1.length.field_1 % 128)]
    if ceil32(stor1.length.field_1 % 128) > stor1.length.field_1 % 128:
        mem[stor1.length.field_1 % 128 + ceil32(stor1.length.field_1 % 128) + 192] = 0
    return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1 % 128)], mem[(2 * ceil32(stor1.length.field_1 % 128)) + 192 len 2 * ceil32(stor1.length.field_1 % 128)]), 
}

function symbol() payable {
    if bool(stor2.length):
        if bool(stor2.length) == uint255(stor2.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor2.length):
            if bool(stor2.length) == uint255(stor2.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor2.length):
                if 31 < uint255(stor2.length) * 0.5:
                    mem[128] = uint256(stor2.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor2.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = uint256(stor2[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor2.length), data=mem[128 len ceil32(uint255(stor2.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
        else:
            if bool(stor2.length) == stor2.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor2.length.field_1 % 128:
                if 31 < stor2.length.field_1 % 128:
                    mem[128] = uint256(stor2.field_0)
                    idx = 128
                    s = 0
                    while stor2.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = uint256(stor2[s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor2.length), data=mem[128 len ceil32(uint255(stor2.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
        mem[ceil32(uint255(stor2.length) * 0.5) + 192 len ceil32(uint255(stor2.length) * 0.5)] = mem[128 len ceil32(uint255(stor2.length) * 0.5)]
        if ceil32(uint255(stor2.length) * 0.5) > uint255(stor2.length) * 0.5:
            mem[(uint255(stor2.length) * 0.5) + ceil32(uint255(stor2.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor2.length), data=mem[128 len ceil32(uint255(stor2.length) * 0.5)], mem[(2 * ceil32(uint255(stor2.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor2.length) * 0.5)]), 
    if bool(stor2.length) == stor2.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor2.length):
        if bool(stor2.length) == uint255(stor2.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor2.length):
            if 31 < uint255(stor2.length) * 0.5:
                mem[128] = uint256(stor2.field_0)
                idx = 128
                s = 0
                while (uint255(stor2.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = uint256(stor2[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
    else:
        if bool(stor2.length) == stor2.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor2.length.field_1 % 128:
            if 31 < stor2.length.field_1 % 128:
                mem[128] = uint256(stor2.field_0)
                idx = 128
                s = 0
                while stor2.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = uint256(stor2[s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor2.length.field_8)
    mem[ceil32(stor2.length.field_1 % 128) + 192 len ceil32(stor2.length.field_1 % 128)] = mem[128 len ceil32(stor2.length.field_1 % 128)]
    if ceil32(stor2.length.field_1 % 128) > stor2.length.field_1 % 128:
        mem[stor2.length.field_1 % 128 + ceil32(stor2.length.field_1 % 128) + 192] = 0
    return Array(len=stor2.length % 128, data=mem[128 len ceil32(stor2.length.field_1 % 128)], mem[(2 * ceil32(stor2.length.field_1 % 128)) + 192 len 2 * ceil32(stor2.length.field_1 % 128)]), 
}

function getMeta(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not stor22[msg.sender]:
        if address(ownerOf[arg1]) != msg.sender:
            revert with 0, 'Not allowed'
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if bool(stor24[arg1].field_0):
            if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, uint256(stor24[arg1].field_0)):
                if 31 >= uint255(uint256(stor24[arg1].field_0)) * 0.5:
                    mem[704] = 256 * Mask(248, 0, stor24[arg1].field_8)
                else:
                    mem[704] = uint256(stor24[arg1].field_0)
                    idx = 704
                    s = 0
                    while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 672 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                revert with 0, 34
            if stor24[arg1].field_1 % 128:
                if 31 >= stor24[arg1].field_1 % 128:
                    mem[704] = 256 * Mask(248, 0, stor24[arg1].field_8)
                else:
                    mem[704] = uint256(stor24[arg1].field_0)
                    idx = 704
                    s = 0
                    while stor24[arg1].field_1 % 128 + 672 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        if uint8(stor24[arg1].field_1792) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1792) >= 6:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) >= 6:
            revert with 0, 33
        return 32, 288, 
               uint256(stor24[arg1].field_256),
               uint256(stor24[arg1].field_512),
               uint256(stor24[arg1].field_768),
               uint256(stor24[arg1].field_1024),
               uint256(stor24[arg1].field_1280),
               uint256(stor24[arg1].field_1536),
               uint8(stor24[arg1].field_1792),
               uint8(stor24[arg1].field_1800),
               2 * Mask(256, -1, uint256(stor24[arg1].field_0)),
               mem[704 len ceil32(uint255(uint256(stor24[arg1].field_0)) * 0.5)]
    if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, uint256(stor24[arg1].field_0)):
            if 31 >= uint255(uint256(stor24[arg1].field_0)) * 0.5:
                mem[704] = 256 * Mask(248, 0, stor24[arg1].field_8)
            else:
                mem[704] = uint256(stor24[arg1].field_0)
                idx = 704
                s = 0
                while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 672 > idx:
                    mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if stor24[arg1].field_1 % 128:
            if 31 >= stor24[arg1].field_1 % 128:
                mem[704] = 256 * Mask(248, 0, stor24[arg1].field_8)
            else:
                mem[704] = uint256(stor24[arg1].field_0)
                idx = 704
                s = 0
                while stor24[arg1].field_1 % 128 + 672 > idx:
                    mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
    if uint8(stor24[arg1].field_1792) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1792) >= 6:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) >= 6:
        revert with 0, 33
    return 32, 288, 
           uint256(stor24[arg1].field_256),
           uint256(stor24[arg1].field_512),
           uint256(stor24[arg1].field_768),
           uint256(stor24[arg1].field_1024),
           uint256(stor24[arg1].field_1280),
           uint256(stor24[arg1].field_1536),
           uint8(stor24[arg1].field_1792),
           uint8(stor24[arg1].field_1800),
           stor24[arg1].field_0 % 128,
           mem[704 len ceil32(stor24[arg1].field_1 % 128)]
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    mem[64] = 128
    mem[96] = 0
    if not address(ownerOf[arg3]):
        revert with 0, 'ERC721: operator query for nonexistent token'
    if address(ownerOf[arg3]) != msg.sender:
        if not address(ownerOf[arg3]):
            revert with 0, 'ERC721: approved query for nonexistent token'
        if address(approved[arg3]) != msg.sender:
            if not uint8(stor7[address(stor3[arg3])][address(msg.sender)].field_0):
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if address(ownerOf[arg3]) != arg1:
        revert with 0, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    address(approved[arg3]) = 0
    emit Approval(address(ownerOf[arg3]), 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    address(ownerOf[arg3]) = arg2
    emit Transfer(arg1, arg2, arg3);
    if arg1:
        mem[0] = arg1
        mem[32] = 5
        idx = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if idx >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            if uint256(stor5[address(arg1)][idx].field_0) != arg3:
                if idx == -1:
                    revert with 0, 17
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                continue 
            if uint256(stor5[address(arg1)].field_0) < 1:
                revert with 0, 17
            if uint256(stor5[address(arg1)].field_0) - 1 >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            if idx >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            uint256(stor5[address(arg1)][idx].field_0) = uint256(stor5[address(arg1)][uint256(stor5[address(arg1)].field_0)].field_0)
            if not uint256(stor5[address(arg1)].field_0):
                revert with 0, 49
            uint256(stor5[address(arg1)][uint256(stor5[address(arg1)].field_0)].field_0) = 0
            uint256(stor5[address(arg1)].field_0)--
            if arg2:
                uint256(stor5[address(arg2)].field_0)++
                uint256(stor5[address(arg2)][uint256(stor5[address(arg2)].field_0)].field_0) = arg3
            if ext_code.size(arg2):
                mem[128] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                mem[132] = msg.sender
                idx = 0
                while idx < 0:
                    mem[idx + 292] = mem[idx + 128]
                    mem[0] = arg1
                    mem[32] = 5
                    idx = idx + 32
                    continue 
                require ext_code.size(arg2)
                call arg2.0x150b7a02 with:
                     gas gas_remaining wei
                    args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                if not ext_call.success:
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    if arg2:
        uint256(stor5[address(arg2)].field_0)++
        uint256(stor5[address(arg2)][uint256(stor5[address(arg2)].field_0)].field_0) = arg3
    if ext_code.size(arg2):
        require ext_code.size(arg2)
        call arg2.0x150b7a02 with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
        if not ext_call.success:
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require calldata.size > arg4 + 35
    if arg4.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 0, 65
    mem[64] = ceil32(ceil32(arg4.length)) + 97
    mem[96] = arg4.length
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    if not address(ownerOf[arg3]):
        revert with 0, 'ERC721: operator query for nonexistent token'
    if address(ownerOf[arg3]) != msg.sender:
        if not address(ownerOf[arg3]):
            revert with 0, 'ERC721: approved query for nonexistent token'
        if address(approved[arg3]) != msg.sender:
            if not uint8(stor7[address(stor3[arg3])][address(msg.sender)].field_0):
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if address(ownerOf[arg3]) != arg1:
        revert with 0, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    address(approved[arg3]) = 0
    emit Approval(address(ownerOf[arg3]), 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    address(ownerOf[arg3]) = arg2
    emit Transfer(arg1, arg2, arg3);
    if arg1:
        mem[0] = arg1
        mem[32] = 5
        idx = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if idx >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            if uint256(stor5[address(arg1)][idx].field_0) != arg3:
                if idx == -1:
                    revert with 0, 17
                mem[0] = arg1
                mem[32] = 5
                idx = idx + 1
                continue 
            if uint256(stor5[address(arg1)].field_0) < 1:
                revert with 0, 17
            if uint256(stor5[address(arg1)].field_0) - 1 >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            if idx >= uint256(stor5[address(arg1)].field_0):
                revert with 0, 50
            uint256(stor5[address(arg1)][idx].field_0) = uint256(stor5[address(arg1)][uint256(stor5[address(arg1)].field_0)].field_0)
            if not uint256(stor5[address(arg1)].field_0):
                revert with 0, 49
            uint256(stor5[address(arg1)][uint256(stor5[address(arg1)].field_0)].field_0) = 0
            uint256(stor5[address(arg1)].field_0)--
            if arg2:
                uint256(stor5[address(arg2)].field_0)++
                uint256(stor5[address(arg2)][uint256(stor5[address(arg2)].field_0)].field_0) = arg3
            if ext_code.size(arg2):
                mem[ceil32(ceil32(arg4.length)) + 97] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                mem[ceil32(ceil32(arg4.length)) + 101] = msg.sender
                mem[ceil32(ceil32(arg4.length)) + 133] = arg1
                idx = 0
                while idx < arg4.length:
                    mem[idx + ceil32(ceil32(arg4.length)) + 261] = mem[idx + 128]
                    mem[0] = arg1
                    mem[32] = 5
                    idx = idx + 32
                    continue 
                if ceil32(arg4.length) > arg4.length:
                    mem[arg4.length + ceil32(ceil32(arg4.length)) + 261] = 0
                require ext_code.size(arg2)
                call arg2.0x150b7a02 with:
                     gas gas_remaining wei
                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=mem[ceil32(ceil32(arg4.length)) + 261 len ceil32(arg4.length)])
                if not ext_call.success:
                    if not return_data.size:
                        if not arg4.length:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with arg4[all]
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    if arg2:
        uint256(stor5[address(arg2)].field_0)++
        uint256(stor5[address(arg2)][uint256(stor5[address(arg2)].field_0)].field_0) = arg3
    if ext_code.size(arg2):
        require ext_code.size(arg2)
        call arg2.0x150b7a02 with:
             gas gas_remaining wei
            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
        if not ext_call.success:
            if not return_data.size:
                if not arg4.length:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                revert with arg4[all]
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function claim(uint256[] arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    idx = 0
    while idx < arg1.length:
        mem[0] = cd[((32 * idx) + arg1 + 36)]
        mem[32] = 24
        _37 = mem[64]
        mem[64] = mem[64] + 288
        if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0):
            if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0) == uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5 < 32:
                revert with 0, 34
            _38 = mem[64]
            mem[64] = mem[64] + ceil32(uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5) + 32
            mem[_38] = uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5
            if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0):
                if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0) == uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)):
                    if 31 >= uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5:
                        mem[_38 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + arg1 + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + arg1 + 36)], 24)
                        mem[_38 + 32] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)
                        s = _38 + 32
                        t = sha3(sha3(cd[((32 * idx) + arg1 + 36)], 24))
                        while _38 + (uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5) > s:
                            mem[s + 32] = uint256(stor1[t].field_0)
                            s = s + 32
                            t = t + 1
                            continue 
            else:
                if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0) == stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128 < 32:
                    revert with 0, 34
                if stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128:
                    if 31 >= stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128:
                        mem[_38 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + arg1 + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + arg1 + 36)], 24)
                        mem[_38 + 32] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)
                        s = _38 + 32
                        t = sha3(sha3(cd[((32 * idx) + arg1 + 36)], 24))
                        while _38 + stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128 > s:
                            mem[s + 32] = uint256(stor1[t].field_0)
                            s = s + 32
                            t = t + 1
                            continue 
            mem[_37] = _38
        else:
            if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0) == stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128 < 32:
                revert with 0, 34
            _39 = mem[64]
            mem[64] = mem[64] + ceil32(stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128) + 32
            mem[_39] = stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128
            if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0):
                if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0) == uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)):
                    if 31 >= uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5:
                        mem[_39 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + arg1 + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + arg1 + 36)], 24)
                        mem[_39 + 32] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)
                        s = _39 + 32
                        t = sha3(sha3(cd[((32 * idx) + arg1 + 36)], 24))
                        while _39 + (uint255(uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)) * 0.5) > s:
                            mem[s + 32] = uint256(stor1[t].field_0)
                            s = s + 32
                            t = t + 1
                            continue 
            else:
                if bool(stor24[cd[((32 * idx) + arg1 + 36)]].field_0) == stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128 < 32:
                    revert with 0, 34
                if stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128:
                    if 31 >= stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128:
                        mem[_39 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + arg1 + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + arg1 + 36)], 24)
                        mem[_39 + 32] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_0)
                        s = _39 + 32
                        t = sha3(sha3(cd[((32 * idx) + arg1 + 36)], 24))
                        while _39 + stor24[cd[((32 * idx) + arg1 + 36)]].field_1 % 128 > s:
                            mem[s + 32] = uint256(stor1[t].field_0)
                            s = s + 32
                            t = t + 1
                            continue 
            mem[_37] = _39
        mem[_37 + 32] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_256)
        mem[_37 + 64] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_512)
        mem[_37 + 96] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_768)
        mem[_37 + 128] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_1024)
        mem[_37 + 160] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_1280)
        mem[_37 + 192] = uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_1536)
        if uint8(stor24[cd[((32 * idx) + arg1 + 36)]].field_1792) > 5:
            revert with 0, 33
        mem[_37 + 224] = uint8(stor24[cd[((32 * idx) + arg1 + 36)]].field_1792)
        if uint8(stor24[cd[((32 * idx) + arg1 + 36)]].field_1800) > 5:
            revert with 0, 33
        mem[_37 + 256] = uint8(stor24[cd[((32 * idx) + arg1 + 36)]].field_1800)
        if uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_768) > !sub_fb0ecf68:
            revert with 0, 17
        if uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_768) + sub_fb0ecf68 <= block.timestamp:
            mem[0] = cd[((32 * idx) + arg1 + 36)]
            mem[32] = 24
            uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_1024) = 0
            uint256(stor24[cd[((32 * idx) + arg1 + 36)]].field_768) = block.timestamp
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_a43e4818(?) payable {
    mem[64] = 96
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] == address(cd[36])
    require cd[68] < 2
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    idx = 0
    s = 1
    while idx < ('cd', 4).length:
        if address(ownerOf[cd[((32 * idx) + cd[4] + 36)]]) != address(cd[36]):
            revert with 0, 'Not owner'
        mem[0] = cd[((32 * idx) + cd[4] + 36)]
        mem[32] = 24
        _57 = mem[64]
        mem[64] = mem[64] + 288
        if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0):
            if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0) == uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5 < 32:
                revert with 0, 34
            _60 = mem[64]
            mem[64] = mem[64] + ceil32(uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5) + 32
            mem[_60] = uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5
            if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0):
                if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0) == uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)):
                    if 31 >= uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5:
                        mem[_60 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + cd[4] + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + cd[4] + 36)], 24)
                        mem[_60 + 32] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)
                        t = _60 + 32
                        u = sha3(sha3(cd[((32 * idx) + cd[4] + 36)], 24))
                        while _60 + (uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5) > t:
                            mem[t + 32] = uint256(stor1[u].field_0)
                            t = t + 32
                            u = u + 1
                            continue 
            else:
                if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0) == stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128 < 32:
                    revert with 0, 34
                if stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128:
                    if 31 >= stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128:
                        mem[_60 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + cd[4] + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + cd[4] + 36)], 24)
                        mem[_60 + 32] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)
                        t = _60 + 32
                        u = sha3(sha3(cd[((32 * idx) + cd[4] + 36)], 24))
                        while _60 + stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128 > t:
                            mem[t + 32] = uint256(stor1[u].field_0)
                            t = t + 32
                            u = u + 1
                            continue 
            mem[_57] = _60
        else:
            if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0) == stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128 < 32:
                revert with 0, 34
            _61 = mem[64]
            mem[64] = mem[64] + ceil32(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128) + 32
            mem[_61] = stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128
            if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0):
                if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0) == uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)):
                    if 31 >= uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5:
                        mem[_61 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + cd[4] + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + cd[4] + 36)], 24)
                        mem[_61 + 32] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)
                        t = _61 + 32
                        u = sha3(sha3(cd[((32 * idx) + cd[4] + 36)], 24))
                        while _61 + (uint255(uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)) * 0.5) > t:
                            mem[t + 32] = uint256(stor1[u].field_0)
                            t = t + 32
                            u = u + 1
                            continue 
            else:
                if bool(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0) == stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128 < 32:
                    revert with 0, 34
                if stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128:
                    if 31 >= stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128:
                        mem[_61 + 32] = 256 * Mask(248, 0, stor24[cd[((32 * idx) + cd[4] + 36)]].field_8)
                    else:
                        mem[0] = sha3(cd[((32 * idx) + cd[4] + 36)], 24)
                        mem[_61 + 32] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_0)
                        t = _61 + 32
                        u = sha3(sha3(cd[((32 * idx) + cd[4] + 36)], 24))
                        while _61 + stor24[cd[((32 * idx) + cd[4] + 36)]].field_1 % 128 > t:
                            mem[t + 32] = uint256(stor1[u].field_0)
                            t = t + 32
                            u = u + 1
                            continue 
            mem[_57] = _61
        mem[_57 + 32] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_256)
        mem[_57 + 64] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_512)
        mem[_57 + 96] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_768)
        mem[_57 + 128] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1024)
        mem[_57 + 160] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1280)
        mem[_57 + 192] = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1536)
        if uint8(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1792) > 5:
            revert with 0, 33
        mem[_57 + 224] = uint8(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1792)
        if uint8(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1800) > 5:
            revert with 0, 33
        mem[_57 + 256] = uint8(stor24[cd[((32 * idx) + cd[4] + 36)]].field_1800)
        if not s:
            return bool(s)
        if uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_768) > !sub_fb0ecf68:
            revert with 0, 17
        if uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_768) + sub_fb0ecf68 > block.timestamp:
            return uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_768) + sub_fb0ecf68 <= block.timestamp
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = uint256(stor24[cd[((32 * idx) + cd[4] + 36)]].field_768) + sub_fb0ecf68 <= block.timestamp
        continue 
    return bool(s)
}

function sub_a5a1fd29(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require calldata.size + -cd[4] - 4 >= 288
    require ('cd', 4).length <= test266151307()
    require cd[4] + ('cd', 4).length + 35 < calldata.size
    if cd[(cd[4] + ('cd', 4).length + 4)] > test266151307():
        revert with 0, 65
    if ceil32(ceil32(cd[(cd[4] + ('cd', 4).length + 4)])) + 385 < 384 or ceil32(ceil32(cd[(cd[4] + ('cd', 4).length + 4)])) + 385 > test266151307():
        revert with 0, 65
    require cd[4] + ('cd', 4).length + cd[(cd[4] + ('cd', 4).length + 4)] + 36 <= calldata.size
    require ('cd', 4)[6] < 6
    require ('cd', 4)[7] < 6
    require cd[36] == address(cd[36])
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if currentTokenId > -2:
        revert with 0, 17
    currentTokenId++
    if not address(cd[36]):
        revert with 0, 'ERC721: mint to the zero address'
    if address(ownerOf[stor21]):
        revert with 0, 'ERC721: token already minted'
    if balanceOf[address(cd[36])] > -2:
        revert with 0, 17
    balanceOf[address(cd[36])]++
    address(ownerOf[stor21]) = address(cd[36])
    emit Transfer(0, address(cd[36]), currentTokenId);
    if address(cd[36]):
        uint256(stor5[address(cd[36])].field_0)++
        uint256(stor5[address(cd[36])][uint256(stor5[address(cd[36])].field_0)].field_0) = currentTokenId
    if ('cd', 4)[7] > 5:
        revert with 0, 33
    if ('cd', 4)[7] == 4:
        if ('cd', 4)[6] > 5:
            revert with 0, 33
        if bool(stor24[stor21].field_0):
            if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                revert with 0, 34
            if cd[(cd[4] + ('cd', 4).length + 4)]:
                uint256(stor24[stor21][].field_0) = Array(len=cd[(cd[4] + ('cd', 4).length + 4)], data=call.data[cd[4] + ('cd', 4).length + 36 len cd[(cd[4] + ('cd', 4).length + 4)]])
            else:
                uint256(stor24[stor21].field_0) = 0
                idx = 0
                while (uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32 > idx:
                    uint256(stor24[stor21][idx].field_0) = 0
                    idx = idx + 1
                    continue 
        else:
            if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                revert with 0, 34
            if cd[(cd[4] + ('cd', 4).length + 4)]:
                uint256(stor24[stor21][].field_0) = Array(len=cd[(cd[4] + ('cd', 4).length + 4)], data=call.data[cd[4] + ('cd', 4).length + 36 len cd[(cd[4] + ('cd', 4).length + 4)]])
            else:
                uint256(stor24[stor21].field_0) = 0
                idx = 0
                while stor24[stor21].field_1 % 128 + 31 / 32 > idx:
                    uint256(stor24[stor21][idx].field_0) = 0
                    idx = idx + 1
                    continue 
        uint256(stor24[stor21].field_256) = currentTokenId
        uint256(stor24[stor21].field_512) = ('cd', 4)[1]
        uint256(stor24[stor21].field_768) = ('cd', 4)[2]
        uint256(stor24[stor21].field_1024) = ('cd', 4)[3]
        uint256(stor24[stor21].field_1280) = ('cd', 4)[4]
        uint256(stor24[stor21].field_1536) = ('cd', 4)[5]
        if ('cd', 4)[6] > 5:
            revert with 0, 33
        uint256(stor24[stor21].field_1792) = ('cd', 4)[6] or Mask(248, 8, uint256(stor24[stor21].field_1792))
    else:
        if ('cd', 4)[7] > 5:
            revert with 0, 33
        if ('cd', 4)[7] == 5:
            if ('cd', 4)[6] > 5:
                revert with 0, 33
            if bool(stor24[stor21].field_0):
                if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if cd[(cd[4] + ('cd', 4).length + 4)]:
                    uint256(stor24[stor21][].field_0) = Array(len=cd[(cd[4] + ('cd', 4).length + 4)], data=call.data[cd[4] + ('cd', 4).length + 36 len cd[(cd[4] + ('cd', 4).length + 4)]])
                else:
                    uint256(stor24[stor21].field_0) = 0
                    idx = 0
                    while (uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32 > idx:
                        uint256(stor24[stor21][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                    revert with 0, 34
                if cd[(cd[4] + ('cd', 4).length + 4)]:
                    uint256(stor24[stor21][].field_0) = Array(len=cd[(cd[4] + ('cd', 4).length + 4)], data=call.data[cd[4] + ('cd', 4).length + 36 len cd[(cd[4] + ('cd', 4).length + 4)]])
                else:
                    uint256(stor24[stor21].field_0) = 0
                    idx = 0
                    while stor24[stor21].field_1 % 128 + 31 / 32 > idx:
                        uint256(stor24[stor21][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            uint256(stor24[stor21].field_256) = currentTokenId
            uint256(stor24[stor21].field_512) = ('cd', 4)[1]
            uint256(stor24[stor21].field_768) = ('cd', 4)[2]
            uint256(stor24[stor21].field_1024) = ('cd', 4)[3]
            uint256(stor24[stor21].field_1280) = ('cd', 4)[4]
            uint256(stor24[stor21].field_1536) = ('cd', 4)[5]
            if ('cd', 4)[6] > 5:
                revert with 0, 33
            uint256(stor24[stor21].field_1792) = ('cd', 4)[6] or Mask(248, 8, uint256(stor24[stor21].field_1792))
        else:
            require ext_code.size(stor20)
            staticcall stor20.0x164af651 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] < 6
            if ext_call.return_data[0] > 5:
                revert with 0, 33
            if bool(stor24[stor21].field_0):
                if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if cd[(cd[4] + ('cd', 4).length + 4)]:
                    uint256(stor24[stor21][].field_0) = Array(len=cd[(cd[4] + ('cd', 4).length + 4)], data=call.data[cd[4] + ('cd', 4).length + 36 len cd[(cd[4] + ('cd', 4).length + 4)]])
                else:
                    uint256(stor24[stor21].field_0) = 0
                    idx = 0
                    while (uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32 > idx:
                        uint256(stor24[stor21][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                    revert with 0, 34
                if cd[(cd[4] + ('cd', 4).length + 4)]:
                    uint256(stor24[stor21][].field_0) = Array(len=cd[(cd[4] + ('cd', 4).length + 4)], data=call.data[cd[4] + ('cd', 4).length + 36 len cd[(cd[4] + ('cd', 4).length + 4)]])
                else:
                    uint256(stor24[stor21].field_0) = 0
                    idx = 0
                    while stor24[stor21].field_1 % 128 + 31 / 32 > idx:
                        uint256(stor24[stor21][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            uint256(stor24[stor21].field_256) = currentTokenId
            uint256(stor24[stor21].field_512) = ('cd', 4)[1]
            uint256(stor24[stor21].field_768) = ('cd', 4)[2]
            uint256(stor24[stor21].field_1024) = ('cd', 4)[3]
            uint256(stor24[stor21].field_1280) = ('cd', 4)[4]
            uint256(stor24[stor21].field_1536) = ('cd', 4)[5]
            if ext_call.return_data[0] > 5:
                revert with 0, 33
            uint256(stor24[stor21].field_1792) = ext_call.return_data[0]
    if ('cd', 4)[7] > 5:
        revert with 0, 33
    Mask(248, 0, stor24[stor21].field_1800) = Mask(248, 0, ('cd', 4)[7])
    if ('cd', 4)[7] > 5:
        revert with 0, 33
    if ('cd', 4)[7] >= stor25.length:
        revert with 0, 50
    if uint256(stor25[('cd', 4)[7]].field_0) == -1:
        revert with 0, 17
    uint256(stor25[('cd', 4)[7]].field_0)++
    return currentTokenId
}

function sub_c4d4c5f0(?) payable {
    require calldata.size - 4 >= 64
    require cd[36] <= test266151307()
    require calldata.size + -cd[36] - 4 >= 288
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    require ('cd', 36).length < calldata.size + -cd[36] - 35
    require cd[(cd[36] + ('cd', 36).length + 4)] <= test266151307()
    require cd[36] + ('cd', 36).length + 36 <= calldata.size - cd[(cd[36] + ('cd', 36).length + 4)]
    if cd[(cd[36] + ('cd', 36).length + 4)] > test266151307():
        revert with 0, 65
    if bool(stor24[cd[4]].field_0):
        if bool(stor24[cd[4]].field_0) == uint255(uint256(stor24[cd[4]].field_0)) * 0.5 < 32:
            revert with 0, 34
        if uint255(uint256(stor24[cd[4]].field_0)) * 0.5 <= 31 and cd[(cd[36] + ('cd', 36).length + 4)] <= 31:
            if uint255(uint256(stor24[cd[4]].field_0)) * 0.5 > 31:
                if cd[(cd[36] + ('cd', 36).length + 4)] >= 32:
                    idx = Mask(251, 0, cd[(cd[36] + ('cd', 36).length + 4)] + 31) * 0.03125
                    while idx < Mask(251, 0, (uint255(uint256(stor24[cd[4]].field_0)) * 0.5) + 31) * 0.03125:
                        uint256(stor[idx].field_0) = 0
                        idx = idx + 1
                        continue 
                else:
                    idx = 0
                    while idx < Mask(251, 0, (uint255(uint256(stor24[cd[4]].field_0)) * 0.5) + 31) * 0.03125:
                        uint256(stor[idx].field_0) = 0
                        idx = idx + 1
                        continue 
            if cd[(cd[36] + ('cd', 36).length + 4)] > 31 != 1:
                if not cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor24[cd[4]].field_0) = 2 * cd[(cd[36] + ('cd', 36).length + 4)]
                else:
                    uint256(stor24[cd[4]].field_0) = cd[(cd[36] + ('cd', 36).length + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)], -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)]) or 2 * cd[(cd[36] + ('cd', 36).length + 4)]
            else:
                idx = 0
                s = 0
                t = 0
                while idx < floor32(cd[(cd[36] + ('cd', 36).length + 4)]):
                    uint256(stor[s].field_0) = cd[(t + cd[36] + ('cd', 36).length + 36)]
                    idx = idx + 32
                    s = s + 1
                    t = t + 32
                    continue 
                if floor32(cd[(cd[36] + ('cd', 36).length + 4)]) < cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor[Mask(251, 0, floor32(cd[(cd[36] + ('cd', 36).length + 4)]) + 31) >> 5].field_0) = cd[(cd[36] + ('cd', 36).length + ceil32(floor32(cd[(cd[36] + ('cd', 36).length + 4)])) + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32, -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32)
                uint256(stor24[cd[4]].field_0) = (2 * cd[(cd[36] + ('cd', 36).length + 4)]) + 1
        else:
            if uint255(uint256(stor24[cd[4]].field_0)) * 0.5 > 31:
                if cd[(cd[36] + ('cd', 36).length + 4)] >= 32:
                    idx = Mask(251, 0, cd[(cd[36] + ('cd', 36).length + 4)] + 31) * 0.03125
                    while idx < Mask(251, 0, (uint255(uint256(stor24[cd[4]].field_0)) * 0.5) + 31) * 0.03125:
                        uint256(stor24[cd[4]][idx].field_0) = 0
                        idx = idx + 1
                        continue 
                else:
                    idx = 0
                    while idx < Mask(251, 0, (uint255(uint256(stor24[cd[4]].field_0)) * 0.5) + 31) * 0.03125:
                        uint256(stor24[cd[4]][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            if cd[(cd[36] + ('cd', 36).length + 4)] > 31 != 1:
                if not cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor24[cd[4]].field_0) = 2 * cd[(cd[36] + ('cd', 36).length + 4)]
                else:
                    uint256(stor24[cd[4]].field_0) = cd[(cd[36] + ('cd', 36).length + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)], -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)]) or 2 * cd[(cd[36] + ('cd', 36).length + 4)]
            else:
                idx = 0
                s = 0
                t = 0
                while idx < floor32(cd[(cd[36] + ('cd', 36).length + 4)]):
                    uint256(stor24[cd[4]][s].field_0) = cd[(t + cd[36] + ('cd', 36).length + 36)]
                    idx = idx + 32
                    s = s + 1
                    t = t + 32
                    continue 
                if floor32(cd[(cd[36] + ('cd', 36).length + 4)]) < cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor24[cd[4]][Mask(251, 0, floor32(cd[(cd[36] + ('cd', 36).length + 4)]) + 31) >> 5].field_0) = cd[(cd[36] + ('cd', 36).length + ceil32(floor32(cd[(cd[36] + ('cd', 36).length + 4)])) + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32, -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32)
                uint256(stor24[cd[4]].field_0) = (2 * cd[(cd[36] + ('cd', 36).length + 4)]) + 1
    else:
        if bool(stor24[cd[4]].field_0) == stor24[cd[4]].field_1 % 128 < 32:
            revert with 0, 34
        if stor24[cd[4]].field_1 % 128 <= 31 and cd[(cd[36] + ('cd', 36).length + 4)] <= 31:
            if stor24[cd[4]].field_1 % 128 > 31:
                if cd[(cd[36] + ('cd', 36).length + 4)] >= 32:
                    idx = Mask(251, 0, cd[(cd[36] + ('cd', 36).length + 4)] + 31) * 0.03125
                    while idx < Mask(251, 0, stor24[cd[4]].field_1 % 128 + 31) * 0.03125:
                        uint256(stor[idx].field_0) = 0
                        idx = idx + 1
                        continue 
                else:
                    idx = 0
                    while idx < Mask(251, 0, stor24[cd[4]].field_1 % 128 + 31) * 0.03125:
                        uint256(stor[idx].field_0) = 0
                        idx = idx + 1
                        continue 
            if cd[(cd[36] + ('cd', 36).length + 4)] > 31 != 1:
                if not cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor24[cd[4]].field_0) = 2 * cd[(cd[36] + ('cd', 36).length + 4)]
                else:
                    uint256(stor24[cd[4]].field_0) = cd[(cd[36] + ('cd', 36).length + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)], -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)]) or 2 * cd[(cd[36] + ('cd', 36).length + 4)]
            else:
                idx = 0
                s = 0
                t = 0
                while idx < floor32(cd[(cd[36] + ('cd', 36).length + 4)]):
                    uint256(stor[s].field_0) = cd[(t + cd[36] + ('cd', 36).length + 36)]
                    idx = idx + 32
                    s = s + 1
                    t = t + 32
                    continue 
                if floor32(cd[(cd[36] + ('cd', 36).length + 4)]) < cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor[Mask(251, 0, floor32(cd[(cd[36] + ('cd', 36).length + 4)]) + 31) >> 5].field_0) = cd[(cd[36] + ('cd', 36).length + ceil32(floor32(cd[(cd[36] + ('cd', 36).length + 4)])) + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32, -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32)
                uint256(stor24[cd[4]].field_0) = (2 * cd[(cd[36] + ('cd', 36).length + 4)]) + 1
        else:
            if stor24[cd[4]].field_1 % 128 > 31:
                if cd[(cd[36] + ('cd', 36).length + 4)] >= 32:
                    idx = Mask(251, 0, cd[(cd[36] + ('cd', 36).length + 4)] + 31) * 0.03125
                    while idx < Mask(251, 0, stor24[cd[4]].field_1 % 128 + 31) * 0.03125:
                        uint256(stor24[cd[4]][idx].field_0) = 0
                        idx = idx + 1
                        continue 
                else:
                    idx = 0
                    while idx < Mask(251, 0, stor24[cd[4]].field_1 % 128 + 31) * 0.03125:
                        uint256(stor24[cd[4]][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            if cd[(cd[36] + ('cd', 36).length + 4)] > 31 != 1:
                if not cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor24[cd[4]].field_0) = 2 * cd[(cd[36] + ('cd', 36).length + 4)]
                else:
                    uint256(stor24[cd[4]].field_0) = cd[(cd[36] + ('cd', 36).length + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)], -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)]) or 2 * cd[(cd[36] + ('cd', 36).length + 4)]
            else:
                idx = 0
                s = 0
                t = 0
                while idx < floor32(cd[(cd[36] + ('cd', 36).length + 4)]):
                    uint256(stor24[cd[4]][s].field_0) = cd[(t + cd[36] + ('cd', 36).length + 36)]
                    idx = idx + 32
                    s = s + 1
                    t = t + 32
                    continue 
                if floor32(cd[(cd[36] + ('cd', 36).length + 4)]) < cd[(cd[36] + ('cd', 36).length + 4)]:
                    uint256(stor24[cd[4]][Mask(251, 0, floor32(cd[(cd[36] + ('cd', 36).length + 4)]) + 31) >> 5].field_0) = cd[(cd[36] + ('cd', 36).length + ceil32(floor32(cd[(cd[36] + ('cd', 36).length + 4)])) + 36)] and !(Mask(256, -8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32, -1) >> 8 * cd[(cd[36] + ('cd', 36).length + 4)] % 32)
                uint256(stor24[cd[4]].field_0) = (2 * cd[(cd[36] + ('cd', 36).length + 4)]) + 1
    uint256(stor24[cd[4]].field_256) = ('cd', 36)[0]
    uint256(stor24[cd[4]].field_512) = ('cd', 36)[1]
    uint256(stor24[cd[4]].field_768) = ('cd', 36)[2]
    uint256(stor24[cd[4]].field_1024) = ('cd', 36)[3]
    uint256(stor24[cd[4]].field_1280) = ('cd', 36)[4]
    uint256(stor24[cd[4]].field_1536) = ('cd', 36)[5]
    require ('cd', 36)[6] < 6
    uint8(stor24[cd[4]].field_1792) = uint8(('cd', 36)[6])
    require ('cd', 36)[7] < 6
    uint8(stor24[cd[4]].field_1800) = uint8(('cd', 36)[7])
}

function burnToken(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) >= stor25.length:
        revert with 0, 50
    if uint256(stor25[uint8(stor24[arg1].field_1800)].field_0) > 0:
        if uint8(stor24[arg1].field_1800) >= stor25.length:
            revert with 0, 50
        if not uint256(stor25[uint8(stor24[arg1].field_1800)].field_0):
            revert with 0, 17
        uint256(stor25[uint8(stor24[arg1].field_1800)].field_0)--
    address(approved[arg1]) = 0
    emit Approval(address(ownerOf[arg1]), 0, arg1);
    if balanceOf[address(stor3[arg1])] < 1:
        revert with 0, 17
    balanceOf[address(stor3[arg1])]--
    address(ownerOf[arg1]) = 0
    emit Transfer(address(ownerOf[arg1]), 0, arg1);
    if address(ownerOf[arg1]):
        mem[0] = address(ownerOf[arg1])
        idx = 0
        while idx < uint256(stor5[address(stor3[arg1])].field_0):
            if idx >= uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 50
            if uint256(stor5[address(stor3[arg1])][idx].field_0) != arg1:
                if idx == -1:
                    revert with 0, 17
                mem[0] = address(ownerOf[arg1])
                mem[32] = 5
                idx = idx + 1
                continue 
            if uint256(stor5[address(stor3[arg1])].field_0) < 1:
                revert with 0, 17
            if uint256(stor5[address(stor3[arg1])].field_0) - 1 >= uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 50
            if idx >= uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 50
            uint256(stor5[address(stor3[arg1])][idx].field_0) = uint256(stor5[address(stor3[arg1])][uint256(stor5[address(stor3[arg1])].field_0)].field_0)
            if not uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 49
            uint256(stor5[address(stor3[arg1])][uint256(stor5[address(stor3[arg1])].field_0)].field_0) = 0
            uint256(stor5[address(stor3[arg1])].field_0)--
            if bool(stor8[arg1].field_0):
                if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, uint256(stor8[arg1].field_0)):
                    if bool(stor8[arg1].field_0):
                        if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + ((uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
                    else:
                        if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < stor8[arg1].field_1 % 128:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + (stor8[arg1].field_1 % 128 + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
            else:
                if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                if stor8[arg1].field_1 % 128:
                    if bool(stor8[arg1].field_0):
                        if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + ((uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
                    else:
                        if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < stor8[arg1].field_1 % 128:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + (stor8[arg1].field_1 % 128 + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
            uint256(sub_ded2abc3[arg1].field_0) = 0
            if bool(stor24[arg1].field_0):
                if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                uint256(stor24[arg1].field_0) = 0
                if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                    mem[0] = sha3(arg1, 24)
                    idx = sha3(mem[0])
                    while sha3(sha3(arg1, 24)) + ((uint255(uint256(stor24[arg1].field_0)) * 0.5) + 31 / 32) > idx:
                        uint256(stor[idx].field_0) = 0
                        mem[0] = address(ownerOf[arg1])
                        mem[32] = 5
                        idx = idx + 1
                        continue 
            else:
                if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                uint256(stor24[arg1].field_0) = 0
                if 31 < stor24[arg1].field_1 % 128:
                    mem[0] = sha3(arg1, 24)
                    idx = sha3(mem[0])
                    while sha3(sha3(arg1, 24)) + (stor24[arg1].field_1 % 128 + 31 / 32) > idx:
                        uint256(stor[idx].field_0) = 0
                        mem[0] = address(ownerOf[arg1])
                        mem[32] = 5
                        idx = idx + 1
                        continue 
            uint256(stor24[arg1].field_256) = 0
            uint256(stor24[arg1].field_512) = 0
            uint256(stor24[arg1].field_768) = 0
            uint256(stor24[arg1].field_1024) = 0
            uint256(stor24[arg1].field_1280) = 0
            uint256(stor24[arg1].field_1536) = 0
            uint16(stor24[arg1].field_1792) = 0
    if bool(stor8[arg1].field_0):
        if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, uint256(stor8[arg1].field_0)):
            if bool(stor8[arg1].field_0):
                if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                    idx = 0
                    while (uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < stor8[arg1].field_1 % 128:
                    idx = 0
                    while stor8[arg1].field_1 % 128 + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
    else:
        if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if stor8[arg1].field_1 % 128:
            if bool(stor8[arg1].field_0):
                if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                    idx = 0
                    while (uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < stor8[arg1].field_1 % 128:
                    idx = 0
                    while stor8[arg1].field_1 % 128 + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
    uint256(sub_ded2abc3[arg1].field_0) = 0
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        uint256(stor24[arg1].field_0) = 0
        if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
            idx = 0
            while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 31 / 32 > idx:
                uint256(stor24[arg1][idx].field_0) = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        uint256(stor24[arg1].field_0) = 0
        if 31 < stor24[arg1].field_1 % 128:
            idx = 0
            while stor24[arg1].field_1 % 128 + 31 / 32 > idx:
                uint256(stor24[arg1][idx].field_0) = 0
                idx = idx + 1
                continue 
    uint256(stor24[arg1].field_256) = 0
    uint256(stor24[arg1].field_512) = 0
    uint256(stor24[arg1].field_768) = 0
    uint256(stor24[arg1].field_1024) = 0
    uint256(stor24[arg1].field_1280) = 0
    uint256(stor24[arg1].field_1536) = 0
    uint16(stor24[arg1].field_1792) = 0
}

function sub_37c14e70(?) payable {
    require calldata.size - 4 >= 64
    require arg2 == address(arg2)
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if address(ownerOf[arg1]) != address(arg2):
        revert with 0, 'Not owner'
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) >= stor25.length:
        revert with 0, 50
    if uint256(stor25[uint8(stor24[arg1].field_1800)].field_0) > 0:
        if uint8(stor24[arg1].field_1800) >= stor25.length:
            revert with 0, 50
        if not uint256(stor25[uint8(stor24[arg1].field_1800)].field_0):
            revert with 0, 17
        uint256(stor25[uint8(stor24[arg1].field_1800)].field_0)--
    address(approved[arg1]) = 0
    emit Approval(address(ownerOf[arg1]), 0, arg1);
    if balanceOf[address(stor3[arg1])] < 1:
        revert with 0, 17
    balanceOf[address(stor3[arg1])]--
    address(ownerOf[arg1]) = 0
    emit Transfer(address(ownerOf[arg1]), 0, arg1);
    if address(ownerOf[arg1]):
        mem[0] = address(ownerOf[arg1])
        idx = 0
        while idx < uint256(stor5[address(stor3[arg1])].field_0):
            if idx >= uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 50
            if uint256(stor5[address(stor3[arg1])][idx].field_0) != arg1:
                if idx == -1:
                    revert with 0, 17
                mem[0] = address(ownerOf[arg1])
                mem[32] = 5
                idx = idx + 1
                continue 
            if uint256(stor5[address(stor3[arg1])].field_0) < 1:
                revert with 0, 17
            if uint256(stor5[address(stor3[arg1])].field_0) - 1 >= uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 50
            if idx >= uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 50
            uint256(stor5[address(stor3[arg1])][idx].field_0) = uint256(stor5[address(stor3[arg1])][uint256(stor5[address(stor3[arg1])].field_0)].field_0)
            if not uint256(stor5[address(stor3[arg1])].field_0):
                revert with 0, 49
            uint256(stor5[address(stor3[arg1])][uint256(stor5[address(stor3[arg1])].field_0)].field_0) = 0
            uint256(stor5[address(stor3[arg1])].field_0)--
            if bool(stor8[arg1].field_0):
                if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, uint256(stor8[arg1].field_0)):
                    if bool(stor8[arg1].field_0):
                        if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + ((uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
                    else:
                        if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < stor8[arg1].field_1 % 128:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + (stor8[arg1].field_1 % 128 + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
            else:
                if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                if stor8[arg1].field_1 % 128:
                    if bool(stor8[arg1].field_0):
                        if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + ((uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
                    else:
                        if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                            revert with 0, 34
                        uint256(stor8[arg1].field_0) = 0
                        if 31 < stor8[arg1].field_1 % 128:
                            mem[0] = sha3(arg1, 8)
                            idx = sha3(mem[0])
                            while sha3(sha3(arg1, 8)) + (stor8[arg1].field_1 % 128 + 31 / 32) > idx:
                                uint256(stor[idx].field_0) = 0
                                mem[0] = address(ownerOf[arg1])
                                mem[32] = 5
                                idx = idx + 1
                                continue 
            if bool(stor24[arg1].field_0):
                if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                uint256(stor24[arg1].field_0) = 0
                if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                    mem[0] = sha3(arg1, 24)
                    idx = sha3(mem[0])
                    while sha3(sha3(arg1, 24)) + ((uint255(uint256(stor24[arg1].field_0)) * 0.5) + 31 / 32) > idx:
                        uint256(stor[idx].field_0) = 0
                        mem[0] = address(ownerOf[arg1])
                        mem[32] = 5
                        idx = idx + 1
                        continue 
            else:
                if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                uint256(stor24[arg1].field_0) = 0
                if 31 < stor24[arg1].field_1 % 128:
                    mem[0] = sha3(arg1, 24)
                    idx = sha3(mem[0])
                    while sha3(sha3(arg1, 24)) + (stor24[arg1].field_1 % 128 + 31 / 32) > idx:
                        uint256(stor[idx].field_0) = 0
                        mem[0] = address(ownerOf[arg1])
                        mem[32] = 5
                        idx = idx + 1
                        continue 
            uint256(stor24[arg1].field_256) = 0
            uint256(stor24[arg1].field_512) = 0
            uint256(stor24[arg1].field_768) = 0
            uint256(stor24[arg1].field_1024) = 0
            uint256(stor24[arg1].field_1280) = 0
            uint256(stor24[arg1].field_1536) = 0
            uint16(stor24[arg1].field_1792) = 0
            uint256(sub_ded2abc3[arg1].field_0) = 0
    if bool(stor8[arg1].field_0):
        if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, uint256(stor8[arg1].field_0)):
            if bool(stor8[arg1].field_0):
                if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                    idx = 0
                    while (uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < stor8[arg1].field_1 % 128:
                    idx = 0
                    while stor8[arg1].field_1 % 128 + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
    else:
        if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if stor8[arg1].field_1 % 128:
            if bool(stor8[arg1].field_0):
                if bool(stor8[arg1].field_0) == uint255(uint256(stor8[arg1].field_0)) * 0.5 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < uint255(uint256(stor8[arg1].field_0)) * 0.5:
                    idx = 0
                    while (uint255(uint256(stor8[arg1].field_0)) * 0.5) + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
            else:
                if bool(stor8[arg1].field_0) == stor8[arg1].field_1 % 128 < 32:
                    revert with 0, 34
                uint256(stor8[arg1].field_0) = 0
                if 31 < stor8[arg1].field_1 % 128:
                    idx = 0
                    while stor8[arg1].field_1 % 128 + 31 / 32 > idx:
                        uint256(stor8[arg1][idx].field_0) = 0
                        idx = idx + 1
                        continue 
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        uint256(stor24[arg1].field_0) = 0
        if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
            idx = 0
            while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 31 / 32 > idx:
                uint256(stor24[arg1][idx].field_0) = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        uint256(stor24[arg1].field_0) = 0
        if 31 < stor24[arg1].field_1 % 128:
            idx = 0
            while stor24[arg1].field_1 % 128 + 31 / 32 > idx:
                uint256(stor24[arg1][idx].field_0) = 0
                idx = idx + 1
                continue 
    uint256(stor24[arg1].field_256) = 0
    uint256(stor24[arg1].field_512) = 0
    uint256(stor24[arg1].field_768) = 0
    uint256(stor24[arg1].field_1024) = 0
    uint256(stor24[arg1].field_1280) = 0
    uint256(stor24[arg1].field_1536) = 0
    uint16(stor24[arg1].field_1792) = 0
    uint256(sub_ded2abc3[arg1].field_0) = 0
}

function sub_cc72ba0f(?) payable {
    require calldata.size - 4 >= 64
    mem[0] = msg.sender
    mem[32] = 22
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if arg2 <= arg1:
        mem[96] = 1
        mem[64] = 160
        mem[128] = 96
        mem[160] = 32
        mem[192] = 1
        idx = 0
        s = 128
        t = 224
        u = (32 * mem[96]) + 224
        while idx < 1:
            mem[t] = u - 224
            _63 = mem[s]
            _66 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            v = 0
            while v < _66:
                mem[v + u + 32] = mem[v + _63 + 32]
                v = v + 32
                continue 
            if ceil32(_66) > _66:
                mem[_66 + u + 32] = 0
            idx = idx + 1
            s = s + 32
            t = t + 32
            u = ceil32(_66) + u + 32
            continue 
    else:
        if arg2 < arg1:
            revert with 0, 17
        if 1 > !(arg2 - arg1):
            revert with 0, 17
        if arg2 + -arg1 + 1 > test266151307():
            revert with 0, 65
        mem[96] = arg2 + -arg1 + 1
        mem[64] = (32 * arg2 + -arg1 + 1) + 128
        if not arg2 + -arg1 + 1:
            idx = arg1
            while idx <= arg2:
                mem[0] = idx
                mem[32] = 24
                if bool(stor24[idx].field_0):
                    if bool(stor24[idx].field_0) == uint255(uint256(stor24[idx].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _70 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[idx].field_0)) * 0.5) + 32
                    mem[_70] = uint255(uint256(stor24[idx].field_0)) * 0.5
                    if bool(stor24[idx].field_0):
                        if bool(stor24[idx].field_0) == uint255(uint256(stor24[idx].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor24[idx].field_0)):
                            if 31 >= uint255(uint256(stor24[idx].field_0)) * 0.5:
                                mem[_70 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_70 + 32] = uint256(stor24[idx].field_0)
                                s = _70 + 32
                                t = sha3(sha3(idx, 24))
                                while _70 + (uint255(uint256(stor24[idx].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor24[idx].field_0) == stor24[idx].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor24[idx].field_1 % 128:
                            if 31 >= stor24[idx].field_1 % 128:
                                mem[_70 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_70 + 32] = uint256(stor24[idx].field_0)
                                s = _70 + 32
                                t = sha3(sha3(idx, 24))
                                while _70 + stor24[idx].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    if idx < arg1:
                        revert with 0, 17
                    if idx - arg1 >= mem[96]:
                        revert with 0, 50
                    mem[(32 * idx - arg1) + 128] = _70
                else:
                    if bool(stor24[idx].field_0) == stor24[idx].field_1 % 128 < 32:
                        revert with 0, 34
                    _75 = mem[64]
                    mem[64] = mem[64] + ceil32(stor24[idx].field_1 % 128) + 32
                    mem[_75] = stor24[idx].field_1 % 128
                    if bool(stor24[idx].field_0):
                        if bool(stor24[idx].field_0) == uint255(uint256(stor24[idx].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor24[idx].field_0)):
                            if 31 >= uint255(uint256(stor24[idx].field_0)) * 0.5:
                                mem[_75 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_75 + 32] = uint256(stor24[idx].field_0)
                                s = _75 + 32
                                t = sha3(sha3(idx, 24))
                                while _75 + (uint255(uint256(stor24[idx].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor24[idx].field_0) == stor24[idx].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor24[idx].field_1 % 128:
                            if 31 >= stor24[idx].field_1 % 128:
                                mem[_75 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_75 + 32] = uint256(stor24[idx].field_0)
                                s = _75 + 32
                                t = sha3(sha3(idx, 24))
                                while _75 + stor24[idx].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    if idx < arg1:
                        revert with 0, 17
                    if idx - arg1 >= mem[96]:
                        revert with 0, 50
                    mem[(32 * idx - arg1) + 128] = _75
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
            _64 = mem[64]
            mem[mem[64]] = 32
            _67 = mem[96]
            mem[mem[64] + 32] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 64
            u = mem[64] + (32 * mem[96]) + 64
            while idx < _67:
                mem[t] = u + -_64 - 64
                _116 = mem[s]
                _120 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                v = 0
                while v < _120:
                    mem[v + u + 32] = mem[v + _116 + 32]
                    v = v + 32
                    continue 
                if ceil32(_120) > _120:
                    mem[_120 + u + 32] = 0
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_120) + u + 32
                continue 
        else:
            mem[128] = 96
            s = 128
            idx = arg2 + -arg1 + 1
            while idx - 1:
                mem[s + 32] = 96
                s = s + 32
                idx = idx - 1
                continue 
            idx = arg1
            while idx <= arg2:
                mem[0] = idx
                mem[32] = 24
                if bool(stor24[idx].field_0):
                    if bool(stor24[idx].field_0) == uint255(uint256(stor24[idx].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _129 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[idx].field_0)) * 0.5) + 32
                    mem[_129] = uint255(uint256(stor24[idx].field_0)) * 0.5
                    if bool(stor24[idx].field_0):
                        if bool(stor24[idx].field_0) == uint255(uint256(stor24[idx].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor24[idx].field_0)):
                            if 31 >= uint255(uint256(stor24[idx].field_0)) * 0.5:
                                mem[_129 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_129 + 32] = uint256(stor24[idx].field_0)
                                s = _129 + 32
                                t = sha3(sha3(idx, 24))
                                while _129 + (uint255(uint256(stor24[idx].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor24[idx].field_0) == stor24[idx].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor24[idx].field_1 % 128:
                            if 31 >= stor24[idx].field_1 % 128:
                                mem[_129 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_129 + 32] = uint256(stor24[idx].field_0)
                                s = _129 + 32
                                t = sha3(sha3(idx, 24))
                                while _129 + stor24[idx].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    if idx < arg1:
                        revert with 0, 17
                    if idx - arg1 >= mem[96]:
                        revert with 0, 50
                    mem[(32 * idx - arg1) + 128] = _129
                else:
                    if bool(stor24[idx].field_0) == stor24[idx].field_1 % 128 < 32:
                        revert with 0, 34
                    _132 = mem[64]
                    mem[64] = mem[64] + ceil32(stor24[idx].field_1 % 128) + 32
                    mem[_132] = stor24[idx].field_1 % 128
                    if bool(stor24[idx].field_0):
                        if bool(stor24[idx].field_0) == uint255(uint256(stor24[idx].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor24[idx].field_0)):
                            if 31 >= uint255(uint256(stor24[idx].field_0)) * 0.5:
                                mem[_132 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_132 + 32] = uint256(stor24[idx].field_0)
                                s = _132 + 32
                                t = sha3(sha3(idx, 24))
                                while _132 + (uint255(uint256(stor24[idx].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor24[idx].field_0) == stor24[idx].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor24[idx].field_1 % 128:
                            if 31 >= stor24[idx].field_1 % 128:
                                mem[_132 + 32] = 256 * Mask(248, 0, stor24[idx].field_8)
                            else:
                                mem[0] = sha3(idx, 24)
                                mem[_132 + 32] = uint256(stor24[idx].field_0)
                                s = _132 + 32
                                t = sha3(sha3(idx, 24))
                                while _132 + stor24[idx].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    if idx < arg1:
                        revert with 0, 17
                    if idx - arg1 >= mem[96]:
                        revert with 0, 50
                    mem[(32 * idx - arg1) + 128] = _132
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                continue 
            _121 = mem[64]
            mem[mem[64]] = 32
            _122 = mem[96]
            mem[mem[64] + 32] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 64
            u = mem[64] + (32 * mem[96]) + 64
            while idx < _122:
                mem[t] = u + -_121 - 64
                _151 = mem[s]
                _153 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                v = 0
                while v < _153:
                    mem[v + u + 32] = mem[v + _151 + 32]
                    v = v + 32
                    continue 
                if ceil32(_153) > _153:
                    mem[_153 + u + 32] = 0
                idx = idx + 1
                s = s + 32
                t = t + 32
                u = ceil32(_153) + u + 32
                continue 
    return memory
      from mem[64]
       len u - mem[64]
}

function sub_2c2cdd21(?) payable {
    require calldata.size - 4 >= 96
    require arg3 == address(arg3)
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if address(ownerOf[arg1]) != address(arg3):
        revert with 0, 'Not owner'
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) != 4:
        revert with 0, 'Invalid token'
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, uint256(stor24[arg1].field_0)):
            if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                idx = 416
                s = 0
                while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 384 > idx:
                    mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if stor24[arg1].field_1 % 128:
            if 31 < stor24[arg1].field_1 % 128:
                idx = 416
                s = 0
                while stor24[arg1].field_1 % 128 + 384 > idx:
                    mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
    if uint8(stor24[arg1].field_1792) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) == 4:
        if block.timestamp < uint256(stor24[arg1].field_768):
            revert with 0, 17
        if uint8(stor24[arg1].field_1800) == 5:
            if uint256(stor24[arg1].field_1280) and sub_7e953ee7 > -1 / uint256(stor24[arg1].field_1280):
                revert with 0, 17
            if uint256(stor24[arg1].field_1280) * sub_7e953ee7 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * sub_7e953ee7:
                revert with 0, 17
            if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args arg1, 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            if uint256(stor24[arg1].field_512) > !arg2:
                revert with 0, 17
            uint256(stor24[arg1].field_512) += arg2
            uint256(stor24[arg1].field_1024) += (block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600
        else:
            if uint256(stor24[arg1].field_512) and sub_7e953ee7 > -1 / uint256(stor24[arg1].field_512):
                revert with 0, 17
            if uint256(stor24[arg1].field_512) * sub_7e953ee7 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * sub_7e953ee7:
                revert with 0, 17
            if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args arg1, 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            if uint256(stor24[arg1].field_512) > !arg2:
                revert with 0, 17
            uint256(stor24[arg1].field_512) += arg2
            uint256(stor24[arg1].field_1024) += (block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600
    else:
        if uint8(stor24[arg1].field_1800) > 5:
            revert with 0, 33
        if block.timestamp < uint256(stor24[arg1].field_768):
            revert with 0, 17
        if uint8(stor24[arg1].field_1800) == 5:
            if uint8(stor24[arg1].field_1800) == 5:
                if uint256(stor24[arg1].field_1280) and uint256(sub_ded2abc3[arg1].field_0) > -1 / uint256(stor24[arg1].field_1280):
                    revert with 0, 17
                if uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0) and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0):
                    revert with 0, 17
                if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args arg1, 1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if uint256(stor24[arg1].field_512) > !arg2:
                    revert with 0, 17
                uint256(stor24[arg1].field_512) += arg2
                uint256(stor24[arg1].field_1024) += (block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600
            else:
                if uint256(stor24[arg1].field_512) and uint256(sub_ded2abc3[arg1].field_0) > -1 / uint256(stor24[arg1].field_512):
                    revert with 0, 17
                if uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0) and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0):
                    revert with 0, 17
                if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args arg1, 1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if uint256(stor24[arg1].field_512) > !arg2:
                    revert with 0, 17
                uint256(stor24[arg1].field_512) += arg2
                uint256(stor24[arg1].field_1024) += (block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600
        else:
            if uint8(stor24[arg1].field_1800) == 5:
                if uint256(stor24[arg1].field_1280) and sub_f5597032 > -1 / uint256(stor24[arg1].field_1280):
                    revert with 0, 17
                if uint256(stor24[arg1].field_1280) * sub_f5597032 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * sub_f5597032:
                    revert with 0, 17
                if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args arg1, 1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if uint256(stor24[arg1].field_512) > !arg2:
                    revert with 0, 17
                uint256(stor24[arg1].field_512) += arg2
                uint256(stor24[arg1].field_1024) += (block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600
            else:
                if uint256(stor24[arg1].field_512) and sub_f5597032 > -1 / uint256(stor24[arg1].field_512):
                    revert with 0, 17
                if uint256(stor24[arg1].field_512) * sub_f5597032 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * sub_f5597032:
                    revert with 0, 17
                if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args arg1, 1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if uint256(stor24[arg1].field_512) > !arg2:
                    revert with 0, 17
                uint256(stor24[arg1].field_512) += arg2
                uint256(stor24[arg1].field_1024) += (block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600
    uint256(stor24[arg1].field_768) = block.timestamp
    emit 0x3efa6c5c: arg2, arg1, address(arg3)
}

function sub_d34db045(?) payable {
    require calldata.size - 4 >= 32
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, uint256(stor24[arg1].field_0)):
            if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                idx = 416
                s = 0
                while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 384 > idx:
                    mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if stor24[arg1].field_1 % 128:
            if 31 < stor24[arg1].field_1 % 128:
                idx = 416
                s = 0
                while stor24[arg1].field_1 % 128 + 384 > idx:
                    mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                    idx = idx + 32
                    s = s + 1
                    continue 
    if uint8(stor24[arg1].field_1792) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) == 4:
        if block.timestamp < uint256(stor24[arg1].field_768):
            revert with 0, 17
        if uint8(stor24[arg1].field_1800) == 5:
            if uint256(stor24[arg1].field_1280) and sub_7e953ee7 > -1 / uint256(stor24[arg1].field_1280):
                revert with 0, 17
            if uint256(stor24[arg1].field_1280) * sub_7e953ee7 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * sub_7e953ee7:
                revert with 0, 17
            if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args arg1, 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            return uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600), 
                   (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 10000,
                   uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600)
        if uint256(stor24[arg1].field_512) and sub_7e953ee7 > -1 / uint256(stor24[arg1].field_512):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) * sub_7e953ee7 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * sub_7e953ee7:
            revert with 0, 17
        if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args arg1, 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600):
            revert with 0, 17
        return uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600), 
               (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 10000,
               uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600)
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if block.timestamp < uint256(stor24[arg1].field_768):
        revert with 0, 17
    if uint8(stor24[arg1].field_1800) == 5:
        if uint8(stor24[arg1].field_1800) == 5:
            if uint256(stor24[arg1].field_1280) and uint256(sub_ded2abc3[arg1].field_0) > -1 / uint256(stor24[arg1].field_1280):
                revert with 0, 17
            if uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0) and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0):
                revert with 0, 17
            if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args arg1, 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            return uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600), 
                   (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 10000,
                   uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600)
        if uint256(stor24[arg1].field_512) and uint256(sub_ded2abc3[arg1].field_0) > -1 / uint256(stor24[arg1].field_512):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0) and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0):
            revert with 0, 17
        if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args arg1, 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        return uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600), 
               (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 10000,
               uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600)
    if uint8(stor24[arg1].field_1800) == 5:
        if uint256(stor24[arg1].field_1280) and sub_f5597032 > -1 / uint256(stor24[arg1].field_1280):
            revert with 0, 17
        if uint256(stor24[arg1].field_1280) * sub_f5597032 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * sub_f5597032:
            revert with 0, 17
        if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args arg1, 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600):
            revert with 0, 17
        return uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600), 
               (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 10000,
               uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600)
    if uint256(stor24[arg1].field_512) and sub_f5597032 > -1 / uint256(stor24[arg1].field_512):
        revert with 0, 17
    if uint256(stor24[arg1].field_512) * sub_f5597032 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * sub_f5597032:
        revert with 0, 17
    if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600):
        revert with 0, 17
    require ext_code.size(stor20)
    staticcall stor20.0x9a2754f4 with:
            gas gas_remaining wei
           args arg1, 1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600):
        revert with 0, 17
    return uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600), 
           (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 10000,
           uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600)
}

function tokenURI(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    mem[0] = arg1
    mem[32] = 24
    mem[96] = 0xa633b2f200000000000000000000000000000000000000000000000000000000
    mem[100] = uint256(sub_ded2abc3[arg1].field_0)
    mem[132] = 64
    mem[164] = 288
    if not bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        mem[452] = stor24[arg1].field_1 % 128
        if not bool(stor24[arg1].field_0):
            mem[484] = Mask(248, 8, uint256(stor24[arg1].field_0))
            mem[196] = uint256(stor24[arg1].field_256)
            mem[228] = uint256(stor24[arg1].field_512)
            mem[260] = uint256(stor24[arg1].field_768)
            mem[292] = uint256(stor24[arg1].field_1024)
            mem[324] = uint256(stor24[arg1].field_1280)
            mem[356] = uint256(stor24[arg1].field_1536)
            if uint8(stor24[arg1].field_1792) >= 6:
                revert with 0, 33
            mem[388] = uint8(stor24[arg1].field_1792)
            if uint8(stor24[arg1].field_1800) >= 6:
                revert with 0, 33
            mem[420] = uint8(stor24[arg1].field_1800)
            require ext_code.size(stor20)
            staticcall stor20.0xa633b2f2 with:
                    gas gas_remaining wei
                   args 0, uint32(sub_ded2abc3[arg1].field_0), 64, 288, uint256(stor24[arg1].field_256), uint256(stor24[arg1].field_512), uint256(stor24[arg1].field_768), uint256(stor24[arg1].field_1024), uint256(stor24[arg1].field_1280), uint256(stor24[arg1].field_1536), uint8(stor24[arg1].field_1792), uint8(stor24[arg1].field_1800), stor24[arg1].field_0 % 128, Mask(248, 8, uint256(stor24[arg1].field_0))
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = ceil32(return_data.size) + 96
            require return_data.size >= 32
            _19 = mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32)
            require mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) <= test266151307()
            require return_data.size + 96 > mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 127
            _25 = mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96]
            if mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96] > test266151307():
                revert with 0, 65
            if ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 1 < 0 or ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97 > test266151307():
                revert with 0, 65
            mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97
            mem[ceil32(return_data.size) + 96] = _25
            require _19 + _25 + 32 <= return_data.size
            mem[ceil32(return_data.size) + 128 len ceil32(_25)] = mem[_19 + 128 len ceil32(_25)]
            if ceil32(_25) <= _25:
                _110 = mem[64]
                mem[mem[64]] = 32
                mem[mem[64] + 32] = _25
                mem[mem[64] + 64 len ceil32(_25)] = mem[ceil32(return_data.size) + 128 len ceil32(_25)]
                if ceil32(_25) <= _25:
                    return Array(len=_25, data=mem[mem[64] + 64 len ceil32(_25)])
                mem[_25 + mem[64] + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_25) + _110 + -mem[64] + 64
            mem[_25 + ceil32(return_data.size) + 128] = 0
            _111 = mem[64]
            mem[mem[64]] = 32
            mem[mem[64] + 32] = _25
            mem[mem[64] + 64 len ceil32(_25)] = mem[ceil32(return_data.size) + 128 len ceil32(_25)]
            if ceil32(_25) <= _25:
                return Array(len=_25, data=mem[mem[64] + 64 len ceil32(_25)])
            mem[_25 + mem[64] + 64] = 0
            return memory
              from mem[64]
               len ceil32(_25) + _111 + -mem[64] + 64
        if bool(stor24[arg1].field_0) != 1:
            mem[196] = uint256(stor24[arg1].field_256)
            mem[228] = uint256(stor24[arg1].field_512)
            mem[260] = uint256(stor24[arg1].field_768)
            mem[292] = uint256(stor24[arg1].field_1024)
            mem[324] = uint256(stor24[arg1].field_1280)
            mem[356] = uint256(stor24[arg1].field_1536)
            if uint8(stor24[arg1].field_1792) >= 6:
                revert with 0, 33
            mem[388] = uint8(stor24[arg1].field_1792)
            if uint8(stor24[arg1].field_1800) >= 6:
                revert with 0, 33
            mem[420] = uint8(stor24[arg1].field_1800)
            require ext_code.size(stor20)
            staticcall stor20.0xa633b2f2 with:
                    gas gas_remaining wei
                   args mem[100 len -100]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = ceil32(return_data.size) + 96
            require return_data.size >= 32
            _22 = mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32)
            require mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) <= test266151307()
            require return_data.size + 96 > mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 127
            _27 = mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96]
            if mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96] > test266151307():
                revert with 0, 65
            if ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 1 < 0 or ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97 > test266151307():
                revert with 0, 65
            mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97
            mem[ceil32(return_data.size) + 96] = _27
            require _22 + _27 + 32 <= return_data.size
            mem[ceil32(return_data.size) + 128 len ceil32(_27)] = mem[_22 + 128 len ceil32(_27)]
            if ceil32(_27) > _27:
                mem[_27 + ceil32(return_data.size) + 128] = 0
            mem[mem[64]] = 32
            mem[mem[64] + 32] = _27
            mem[mem[64] + 64 len ceil32(_27)] = mem[ceil32(return_data.size) + 128 len ceil32(_27)]
            if ceil32(_27) > _27:
                mem[_27 + mem[64] + 64] = 0
            return Array(len=_27, data=mem[mem[64] + 64 len ceil32(_27)])
        mem[0] = sha3(arg1, 24)
        idx = 0
        s = 0
        while idx < stor24[arg1].field_1 % 128:
            mem[idx + 484] = uint256(stor24[arg1][s].field_0)
            idx = idx + 32
            s = s + 1
            continue 
        mem[196] = uint256(stor24[arg1].field_256)
        mem[228] = uint256(stor24[arg1].field_512)
        mem[260] = uint256(stor24[arg1].field_768)
        mem[292] = uint256(stor24[arg1].field_1024)
        mem[324] = uint256(stor24[arg1].field_1280)
        mem[356] = uint256(stor24[arg1].field_1536)
        if uint8(stor24[arg1].field_1792) >= 6:
            revert with 0, 33
        mem[388] = uint8(stor24[arg1].field_1792)
        if uint8(stor24[arg1].field_1800) >= 6:
            revert with 0, 33
        mem[420] = uint8(stor24[arg1].field_1800)
        require ext_code.size(stor20)
        staticcall stor20.0xa633b2f2 with:
                gas gas_remaining wei
               args 0, uint32(sub_ded2abc3[arg1].field_0), 64, 288, uint256(stor24[arg1].field_256), uint256(stor24[arg1].field_512), uint256(stor24[arg1].field_768), uint256(stor24[arg1].field_1024), uint256(stor24[arg1].field_1280), uint256(stor24[arg1].field_1536), uint8(stor24[arg1].field_1792), uint8(stor24[arg1].field_1800), stor24[arg1].field_0 % 128, mem[484 len ceil32(stor24[arg1].field_1 % 128)]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 96
        require return_data.size >= 32
        _151 = mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32)
        require mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) <= test266151307()
        require return_data.size + 96 > mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 127
        _153 = mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96]
        if mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96] > test266151307():
            revert with 0, 65
        if ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 1 < 0 or ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97 > test266151307():
            revert with 0, 65
        mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97
        mem[ceil32(return_data.size) + 96] = _153
        require _151 + _153 + 32 <= return_data.size
        mem[ceil32(return_data.size) + 128 len ceil32(_153)] = mem[_151 + 128 len ceil32(_153)]
        if ceil32(_153) > _153:
            mem[_153 + ceil32(return_data.size) + 128] = 0
        mem[mem[64]] = 32
        mem[mem[64] + 32] = _153
        mem[mem[64] + 64 len ceil32(_153)] = mem[ceil32(return_data.size) + 128 len ceil32(_153)]
        if ceil32(_153) > _153:
            mem[_153 + mem[64] + 64] = 0
        return Array(len=_153, data=mem[mem[64] + 64 len ceil32(_153)])
    if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
        revert with 0, 34
    mem[452] = uint255(uint256(stor24[arg1].field_0)) * 0.5
    if not bool(stor24[arg1].field_0):
        mem[484] = Mask(248, 8, uint256(stor24[arg1].field_0))
        mem[196] = uint256(stor24[arg1].field_256)
        mem[228] = uint256(stor24[arg1].field_512)
        mem[260] = uint256(stor24[arg1].field_768)
        mem[292] = uint256(stor24[arg1].field_1024)
        mem[324] = uint256(stor24[arg1].field_1280)
        mem[356] = uint256(stor24[arg1].field_1536)
        if uint8(stor24[arg1].field_1792) >= 6:
            revert with 0, 33
        mem[388] = uint8(stor24[arg1].field_1792)
        if uint8(stor24[arg1].field_1800) >= 6:
            revert with 0, 33
        mem[420] = uint8(stor24[arg1].field_1800)
        require ext_code.size(stor20)
        staticcall stor20.0xa633b2f2 with:
                gas gas_remaining wei
               args 0, uint32(sub_ded2abc3[arg1].field_0), 64, 288, uint256(stor24[arg1].field_256), uint256(stor24[arg1].field_512), uint256(stor24[arg1].field_768), uint256(stor24[arg1].field_1024), uint256(stor24[arg1].field_1280), uint256(stor24[arg1].field_1536), uint8(stor24[arg1].field_1792), uint8(stor24[arg1].field_1800), 2 * Mask(256, -1, uint256(stor24[arg1].field_0)), Mask(248, 8, uint256(stor24[arg1].field_0))
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 96
        require return_data.size >= 32
        _14 = mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32)
        require mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) <= test266151307()
        require return_data.size + 96 > mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 127
        _20 = mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96]
        if mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96] > test266151307():
            revert with 0, 65
        if ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 1 < 0 or ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97 > test266151307():
            revert with 0, 65
        mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97
        mem[ceil32(return_data.size) + 96] = _20
        require _14 + _20 + 32 <= return_data.size
        mem[ceil32(return_data.size) + 128 len ceil32(_20)] = mem[_14 + 128 len ceil32(_20)]
        if ceil32(_20) > _20:
            mem[_20 + ceil32(return_data.size) + 128] = 0
        mem[mem[64]] = 32
        mem[mem[64] + 32] = _20
        mem[mem[64] + 64 len ceil32(_20)] = mem[ceil32(return_data.size) + 128 len ceil32(_20)]
        if ceil32(_20) > _20:
            mem[_20 + mem[64] + 64] = 0
        return Array(len=_20, data=mem[mem[64] + 64 len ceil32(_20)])
    if bool(stor24[arg1].field_0) != 1:
        mem[196] = uint256(stor24[arg1].field_256)
        mem[228] = uint256(stor24[arg1].field_512)
        mem[260] = uint256(stor24[arg1].field_768)
        mem[292] = uint256(stor24[arg1].field_1024)
        mem[324] = uint256(stor24[arg1].field_1280)
        mem[356] = uint256(stor24[arg1].field_1536)
        if uint8(stor24[arg1].field_1792) >= 6:
            revert with 0, 33
        mem[388] = uint8(stor24[arg1].field_1792)
        if uint8(stor24[arg1].field_1800) >= 6:
            revert with 0, 33
        mem[420] = uint8(stor24[arg1].field_1800)
        require ext_code.size(stor20)
        staticcall stor20.0xa633b2f2 with:
                gas gas_remaining wei
               args mem[100 len -100]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 96
        require return_data.size >= 32
        _18 = mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32)
        require mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) <= test266151307()
        require return_data.size + 96 > mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 127
        _24 = mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96]
        if mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96] > test266151307():
            revert with 0, 65
        if ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 1 < 0 or ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97 > test266151307():
            revert with 0, 65
        mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97
        mem[ceil32(return_data.size) + 96] = _24
        require _18 + _24 + 32 <= return_data.size
        mem[ceil32(return_data.size) + 128 len ceil32(_24)] = mem[_18 + 128 len ceil32(_24)]
        if ceil32(_24) > _24:
            mem[_24 + ceil32(return_data.size) + 128] = 0
        mem[mem[64]] = 32
        mem[mem[64] + 32] = _24
        mem[mem[64] + 64 len ceil32(_24)] = mem[ceil32(return_data.size) + 128 len ceil32(_24)]
        if ceil32(_24) > _24:
            mem[_24 + mem[64] + 64] = 0
        return Array(len=_24, data=mem[mem[64] + 64 len ceil32(_24)])
    mem[0] = sha3(arg1, 24)
    idx = 0
    s = 0
    while idx < uint255(uint256(stor24[arg1].field_0)) * 0.5:
        mem[idx + 484] = uint256(stor24[arg1][s].field_0)
        idx = idx + 32
        s = s + 1
        continue 
    mem[196] = uint256(stor24[arg1].field_256)
    mem[228] = uint256(stor24[arg1].field_512)
    mem[260] = uint256(stor24[arg1].field_768)
    mem[292] = uint256(stor24[arg1].field_1024)
    mem[324] = uint256(stor24[arg1].field_1280)
    mem[356] = uint256(stor24[arg1].field_1536)
    if uint8(stor24[arg1].field_1792) >= 6:
        revert with 0, 33
    mem[388] = uint8(stor24[arg1].field_1792)
    if uint8(stor24[arg1].field_1800) >= 6:
        revert with 0, 33
    mem[420] = uint8(stor24[arg1].field_1800)
    require ext_code.size(stor20)
    staticcall stor20.0xa633b2f2 with:
            gas gas_remaining wei
           args 0, uint32(sub_ded2abc3[arg1].field_0), 64, 288, uint256(stor24[arg1].field_256), uint256(stor24[arg1].field_512), uint256(stor24[arg1].field_768), uint256(stor24[arg1].field_1024), uint256(stor24[arg1].field_1280), uint256(stor24[arg1].field_1536), uint8(stor24[arg1].field_1792), uint8(stor24[arg1].field_1800), 2 * Mask(256, -1, uint256(stor24[arg1].field_0)), mem[484 len ceil32(uint255(uint256(stor24[arg1].field_0)) * 0.5)]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    _150 = mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32)
    require mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) <= test266151307()
    require return_data.size + 96 > mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 127
    _152 = mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96]
    if mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96] > test266151307():
        revert with 0, 65
    if ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 1 < 0 or ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97 > test266151307():
        revert with 0, 65
    mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[mem[96 len 4], Mask(224, 0, sub_ded2abc3[arg1].field_32) + 96])) + 97
    mem[ceil32(return_data.size) + 96] = _152
    require _150 + _152 + 32 <= return_data.size
    mem[ceil32(return_data.size) + 128 len ceil32(_152)] = mem[_150 + 128 len ceil32(_152)]
    if ceil32(_152) <= _152:
        _192 = mem[64]
        mem[mem[64]] = 32
        mem[mem[64] + 32] = _152
        mem[mem[64] + 64 len ceil32(_152)] = mem[ceil32(return_data.size) + 128 len ceil32(_152)]
        if ceil32(_152) <= _152:
            return Array(len=_152, data=mem[mem[64] + 64 len ceil32(_152)])
        mem[_152 + mem[64] + 64] = 0
        return memory
          from mem[64]
           len ceil32(_152) + _192 + -mem[64] + 64
    mem[_152 + ceil32(return_data.size) + 128] = 0
    _193 = mem[64]
    mem[mem[64]] = 32
    mem[mem[64] + 32] = _152
    mem[mem[64] + 64 len ceil32(_152)] = mem[ceil32(return_data.size) + 128 len ceil32(_152)]
    if ceil32(_152) <= _152:
        return Array(len=_152, data=mem[mem[64] + 64 len ceil32(_152)])
    mem[_152 + mem[64] + 64] = 0
    return memory
      from mem[64]
       len ceil32(_152) + _193 + -mem[64] + 64
}

function sub_1a7c5631(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 < 6
    require arg3 == bool(arg3)
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    require balanceOf[address(arg1)] > 0
    mem[64] = (32 * uint256(stor5[address(arg1)].field_0)) + 128
    mem[96] = uint256(stor5[address(arg1)].field_0)
    if not uint256(stor5[address(arg1)].field_0):
        idx = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if not arg3:
                if idx >= mem[96]:
                    revert with 0, 50
                _85 = mem[(32 * idx) + 128]
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                _88 = sha3(mem[(32 * idx) + 128], 24)
                _89 = mem[64]
                mem[64] = mem[64] + 288
                if bool(stor24[mem[(32 * idx) + 128]].field_0):
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _92 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                    mem[_92] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                    if bool(stor[_88].field_0):
                        if bool(stor[_88].field_0) == uint255(uint256(stor[_88].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor[_88].field_0)):
                            if 31 >= uint255(uint256(stor[_88].field_0)) * 0.5:
                                mem[_92 + 32] = 256 * Mask(248, 0, stor[_88].field_8)
                            else:
                                mem[0] = _88
                                mem[_92 + 32] = uint256(stor[sha3(_88)].field_0)
                                s = _92 + 32
                                t = sha3(_88)
                                while _92 + (uint255(uint256(stor[_88].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor[_88].field_0) == stor[_88].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor[_88].field_1 % 128:
                            if 31 >= stor[_88].field_1 % 128:
                                mem[_92 + 32] = 256 * Mask(248, 0, stor[_88].field_8)
                            else:
                                mem[0] = _88
                                mem[_92 + 32] = uint256(stor[sha3(_88)].field_0)
                                s = _92 + 32
                                t = sha3(_88)
                                while _92 + stor[_88].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    mem[_89] = _92
                else:
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                        revert with 0, 34
                    _95 = mem[64]
                    mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                    mem[_95] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                    if bool(stor[_88].field_0):
                        if bool(stor[_88].field_0) == uint255(uint256(stor[_88].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor[_88].field_0)):
                            if 31 >= uint255(uint256(stor[_88].field_0)) * 0.5:
                                mem[_95 + 32] = 256 * Mask(248, 0, stor[_88].field_8)
                            else:
                                mem[0] = _88
                                mem[_95 + 32] = uint256(stor[sha3(_88)].field_0)
                                s = _95 + 32
                                t = sha3(_88)
                                while _95 + (uint255(uint256(stor[_88].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor[_88].field_0) == stor[_88].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor[_88].field_1 % 128:
                            if 31 >= stor[_88].field_1 % 128:
                                mem[_95 + 32] = 256 * Mask(248, 0, stor[_88].field_8)
                            else:
                                mem[0] = _88
                                mem[_95 + 32] = uint256(stor[sha3(_88)].field_0)
                                s = _95 + 32
                                t = sha3(_88)
                                while _95 + stor[_88].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    mem[_89] = _95
                mem[_89 + 32] = uint256(stor1[_88].field_0)
                mem[_89 + 64] = uint256(stor2[_88].field_0)
                mem[_89 + 96] = uint256(ownerOf[_88])
                mem[_89 + 128] = balanceOf[_88]
                mem[_89 + 160] = uint256(stor5[_88].field_0)
                mem[_89 + 192] = uint256(approved[_88])
                if uint8(stor7[_88].field_0) > 5:
                    revert with 0, 33
                mem[_89 + 224] = uint8(stor7[_88].field_0)
                if uint8(stor7[_88].field_8) > 5:
                    revert with 0, 33
                mem[_89 + 256] = uint8(stor7[_88].field_8)
                if uint256(ownerOf[_88]) > !sub_fb0ecf68:
                    revert with 0, 17
                if uint256(ownerOf[_88]) + sub_fb0ecf68 <= block.timestamp:
                    mem[0] = _85
                    mem[32] = 24
                    uint256(stor24[_85].field_1024) = 0
                    uint256(stor24[_85].field_768) = block.timestamp
            else:
                if arg2 > 5:
                    revert with 0, 33
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                if uint8(stor24[mem[(32 * idx) + 128]].field_1800) > 5:
                    revert with 0, 33
                if uint8(stor24[mem[(32 * idx) + 128]].field_1800) == arg2:
                    if idx >= mem[96]:
                        revert with 0, 50
                    _91 = mem[(32 * idx) + 128]
                    mem[0] = mem[(32 * idx) + 128]
                    mem[32] = 24
                    _93 = sha3(mem[(32 * idx) + 128], 24)
                    _94 = mem[64]
                    mem[64] = mem[64] + 288
                    if bool(stor24[mem[(32 * idx) + 128]].field_0):
                        if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        _96 = mem[64]
                        mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                        mem[_96] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                        if bool(stor[_93].field_0):
                            if bool(stor[_93].field_0) == uint255(uint256(stor[_93].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            if Mask(256, -1, uint256(stor[_93].field_0)):
                                if 31 >= uint255(uint256(stor[_93].field_0)) * 0.5:
                                    mem[_96 + 32] = 256 * Mask(248, 0, stor[_93].field_8)
                                else:
                                    mem[0] = _93
                                    mem[_96 + 32] = uint256(stor[sha3(_93)].field_0)
                                    s = _96 + 32
                                    t = sha3(_93)
                                    while _96 + (uint255(uint256(stor[_93].field_0)) * 0.5) > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        else:
                            if bool(stor[_93].field_0) == stor[_93].field_1 % 128 < 32:
                                revert with 0, 34
                            if stor[_93].field_1 % 128:
                                if 31 >= stor[_93].field_1 % 128:
                                    mem[_96 + 32] = 256 * Mask(248, 0, stor[_93].field_8)
                                else:
                                    mem[0] = _93
                                    mem[_96 + 32] = uint256(stor[sha3(_93)].field_0)
                                    s = _96 + 32
                                    t = sha3(_93)
                                    while _96 + stor[_93].field_1 % 128 > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        mem[_94] = _96
                    else:
                        if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                            revert with 0, 34
                        _97 = mem[64]
                        mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                        mem[_97] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                        if bool(stor[_93].field_0):
                            if bool(stor[_93].field_0) == uint255(uint256(stor[_93].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            if Mask(256, -1, uint256(stor[_93].field_0)):
                                if 31 >= uint255(uint256(stor[_93].field_0)) * 0.5:
                                    mem[_97 + 32] = 256 * Mask(248, 0, stor[_93].field_8)
                                else:
                                    mem[0] = _93
                                    mem[_97 + 32] = uint256(stor[sha3(_93)].field_0)
                                    s = _97 + 32
                                    t = sha3(_93)
                                    while _97 + (uint255(uint256(stor[_93].field_0)) * 0.5) > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        else:
                            if bool(stor[_93].field_0) == stor[_93].field_1 % 128 < 32:
                                revert with 0, 34
                            if stor[_93].field_1 % 128:
                                if 31 >= stor[_93].field_1 % 128:
                                    mem[_97 + 32] = 256 * Mask(248, 0, stor[_93].field_8)
                                else:
                                    mem[0] = _93
                                    mem[_97 + 32] = uint256(stor[sha3(_93)].field_0)
                                    s = _97 + 32
                                    t = sha3(_93)
                                    while _97 + stor[_93].field_1 % 128 > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        mem[_94] = _97
                    mem[_94 + 32] = uint256(stor1[_93].field_0)
                    mem[_94 + 64] = uint256(stor2[_93].field_0)
                    mem[_94 + 96] = uint256(ownerOf[_93])
                    mem[_94 + 128] = balanceOf[_93]
                    mem[_94 + 160] = uint256(stor5[_93].field_0)
                    mem[_94 + 192] = uint256(approved[_93])
                    if uint8(stor7[_93].field_0) > 5:
                        revert with 0, 33
                    mem[_94 + 224] = uint8(stor7[_93].field_0)
                    if uint8(stor7[_93].field_8) > 5:
                        revert with 0, 33
                    mem[_94 + 256] = uint8(stor7[_93].field_8)
                    if uint256(ownerOf[_93]) > !sub_fb0ecf68:
                        revert with 0, 17
                    if uint256(ownerOf[_93]) + sub_fb0ecf68 <= block.timestamp:
                        mem[0] = _91
                        mem[32] = 24
                        uint256(stor24[_91].field_1024) = 0
                        uint256(stor24[_91].field_768) = block.timestamp
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[128] = uint256(stor5[address(arg1)].field_0)
        idx = 128
        s = 0
        while (32 * uint256(stor5[address(arg1)].field_0)) + 96 > idx:
            mem[idx + 32] = uint256(stor5[address(arg1)][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
        idx = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if not arg3:
                if idx >= mem[96]:
                    revert with 0, 50
                _245 = mem[(32 * idx) + 128]
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                _248 = sha3(mem[(32 * idx) + 128], 24)
                _249 = mem[64]
                mem[64] = mem[64] + 288
                if bool(stor24[mem[(32 * idx) + 128]].field_0):
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _252 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                    mem[_252] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                    if bool(stor[_248].field_0):
                        if bool(stor[_248].field_0) == uint255(uint256(stor[_248].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor[_248].field_0)):
                            if 31 >= uint255(uint256(stor[_248].field_0)) * 0.5:
                                mem[_252 + 32] = 256 * Mask(248, 0, stor[_248].field_8)
                            else:
                                mem[0] = _248
                                mem[_252 + 32] = uint256(stor[sha3(_248)].field_0)
                                s = _252 + 32
                                t = sha3(_248)
                                while _252 + (uint255(uint256(stor[_248].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor[_248].field_0) == stor[_248].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor[_248].field_1 % 128:
                            if 31 >= stor[_248].field_1 % 128:
                                mem[_252 + 32] = 256 * Mask(248, 0, stor[_248].field_8)
                            else:
                                mem[0] = _248
                                mem[_252 + 32] = uint256(stor[sha3(_248)].field_0)
                                s = _252 + 32
                                t = sha3(_248)
                                while _252 + stor[_248].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    mem[_249] = _252
                else:
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                        revert with 0, 34
                    _255 = mem[64]
                    mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                    mem[_255] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                    if bool(stor[_248].field_0):
                        if bool(stor[_248].field_0) == uint255(uint256(stor[_248].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, uint256(stor[_248].field_0)):
                            if 31 >= uint255(uint256(stor[_248].field_0)) * 0.5:
                                mem[_255 + 32] = 256 * Mask(248, 0, stor[_248].field_8)
                            else:
                                mem[0] = _248
                                mem[_255 + 32] = uint256(stor[sha3(_248)].field_0)
                                s = _255 + 32
                                t = sha3(_248)
                                while _255 + (uint255(uint256(stor[_248].field_0)) * 0.5) > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    else:
                        if bool(stor[_248].field_0) == stor[_248].field_1 % 128 < 32:
                            revert with 0, 34
                        if stor[_248].field_1 % 128:
                            if 31 >= stor[_248].field_1 % 128:
                                mem[_255 + 32] = 256 * Mask(248, 0, stor[_248].field_8)
                            else:
                                mem[0] = _248
                                mem[_255 + 32] = uint256(stor[sha3(_248)].field_0)
                                s = _255 + 32
                                t = sha3(_248)
                                while _255 + stor[_248].field_1 % 128 > s:
                                    mem[s + 32] = uint256(stor1[t].field_0)
                                    s = s + 32
                                    t = t + 1
                                    continue 
                    mem[_249] = _255
                mem[_249 + 32] = uint256(stor1[_248].field_0)
                mem[_249 + 64] = uint256(stor2[_248].field_0)
                mem[_249 + 96] = uint256(ownerOf[_248])
                mem[_249 + 128] = balanceOf[_248]
                mem[_249 + 160] = uint256(stor5[_248].field_0)
                mem[_249 + 192] = uint256(approved[_248])
                if uint8(stor7[_248].field_0) > 5:
                    revert with 0, 33
                mem[_249 + 224] = uint8(stor7[_248].field_0)
                if uint8(stor7[_248].field_8) > 5:
                    revert with 0, 33
                mem[_249 + 256] = uint8(stor7[_248].field_8)
                if uint256(ownerOf[_248]) > !sub_fb0ecf68:
                    revert with 0, 17
                if uint256(ownerOf[_248]) + sub_fb0ecf68 <= block.timestamp:
                    mem[0] = _245
                    mem[32] = 24
                    uint256(stor24[_245].field_1024) = 0
                    uint256(stor24[_245].field_768) = block.timestamp
            else:
                if arg2 > 5:
                    revert with 0, 33
                if idx >= mem[96]:
                    revert with 0, 50
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                if uint8(stor24[mem[(32 * idx) + 128]].field_1800) > 5:
                    revert with 0, 33
                if uint8(stor24[mem[(32 * idx) + 128]].field_1800) == arg2:
                    if idx >= mem[96]:
                        revert with 0, 50
                    _251 = mem[(32 * idx) + 128]
                    mem[0] = mem[(32 * idx) + 128]
                    mem[32] = 24
                    _253 = sha3(mem[(32 * idx) + 128], 24)
                    _254 = mem[64]
                    mem[64] = mem[64] + 288
                    if bool(stor24[mem[(32 * idx) + 128]].field_0):
                        if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        _256 = mem[64]
                        mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                        mem[_256] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                        if bool(stor[_253].field_0):
                            if bool(stor[_253].field_0) == uint255(uint256(stor[_253].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            if Mask(256, -1, uint256(stor[_253].field_0)):
                                if 31 >= uint255(uint256(stor[_253].field_0)) * 0.5:
                                    mem[_256 + 32] = 256 * Mask(248, 0, stor[_253].field_8)
                                else:
                                    mem[0] = _253
                                    mem[_256 + 32] = uint256(stor[sha3(_253)].field_0)
                                    s = _256 + 32
                                    t = sha3(_253)
                                    while _256 + (uint255(uint256(stor[_253].field_0)) * 0.5) > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        else:
                            if bool(stor[_253].field_0) == stor[_253].field_1 % 128 < 32:
                                revert with 0, 34
                            if stor[_253].field_1 % 128:
                                if 31 >= stor[_253].field_1 % 128:
                                    mem[_256 + 32] = 256 * Mask(248, 0, stor[_253].field_8)
                                else:
                                    mem[0] = _253
                                    mem[_256 + 32] = uint256(stor[sha3(_253)].field_0)
                                    s = _256 + 32
                                    t = sha3(_253)
                                    while _256 + stor[_253].field_1 % 128 > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        mem[_254] = _256
                    else:
                        if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                            revert with 0, 34
                        _257 = mem[64]
                        mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                        mem[_257] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                        if bool(stor[_253].field_0):
                            if bool(stor[_253].field_0) == uint255(uint256(stor[_253].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            if Mask(256, -1, uint256(stor[_253].field_0)):
                                if 31 >= uint255(uint256(stor[_253].field_0)) * 0.5:
                                    mem[_257 + 32] = 256 * Mask(248, 0, stor[_253].field_8)
                                else:
                                    mem[0] = _253
                                    mem[_257 + 32] = uint256(stor[sha3(_253)].field_0)
                                    s = _257 + 32
                                    t = sha3(_253)
                                    while _257 + (uint255(uint256(stor[_253].field_0)) * 0.5) > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        else:
                            if bool(stor[_253].field_0) == stor[_253].field_1 % 128 < 32:
                                revert with 0, 34
                            if stor[_253].field_1 % 128:
                                if 31 >= stor[_253].field_1 % 128:
                                    mem[_257 + 32] = 256 * Mask(248, 0, stor[_253].field_8)
                                else:
                                    mem[0] = _253
                                    mem[_257 + 32] = uint256(stor[sha3(_253)].field_0)
                                    s = _257 + 32
                                    t = sha3(_253)
                                    while _257 + stor[_253].field_1 % 128 > s:
                                        mem[s + 32] = uint256(stor1[t].field_0)
                                        s = s + 32
                                        t = t + 1
                                        continue 
                        mem[_254] = _257
                    mem[_254 + 32] = uint256(stor1[_253].field_0)
                    mem[_254 + 64] = uint256(stor2[_253].field_0)
                    mem[_254 + 96] = uint256(ownerOf[_253])
                    mem[_254 + 128] = balanceOf[_253]
                    mem[_254 + 160] = uint256(stor5[_253].field_0)
                    mem[_254 + 192] = uint256(approved[_253])
                    if uint8(stor7[_253].field_0) > 5:
                        revert with 0, 33
                    mem[_254 + 224] = uint8(stor7[_253].field_0)
                    if uint8(stor7[_253].field_8) > 5:
                        revert with 0, 33
                    mem[_254 + 256] = uint8(stor7[_253].field_8)
                    if uint256(ownerOf[_253]) > !sub_fb0ecf68:
                        revert with 0, 17
                    if uint256(ownerOf[_253]) + sub_fb0ecf68 <= block.timestamp:
                        mem[0] = _251
                        mem[32] = 24
                        uint256(stor24[_251].field_1024) = 0
                        uint256(stor24[_251].field_768) = block.timestamp
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
}

function sub_4735e2a6(?) payable {
    require calldata.size - 4 >= 64
    require arg2 == address(arg2)
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if address(ownerOf[arg1]) != address(arg2):
        revert with 0, 'Not owner'
    if bool(stor24[arg1].field_0):
        if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
            revert with 0, 34
        if bool(stor24[arg1].field_0):
            if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, uint256(stor24[arg1].field_0)):
                if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                    idx = 416
                    s = 0
                    while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 384 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                revert with 0, 34
            if stor24[arg1].field_1 % 128:
                if 31 < stor24[arg1].field_1 % 128:
                    idx = 416
                    s = 0
                    while stor24[arg1].field_1 % 128 + 384 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        if uint8(stor24[arg1].field_1792) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) != 5:
            revert with 0, 'Not orb'
        if not stor22[msg.sender]:
            revert with 0, 'Not allowed'
        if bool(stor24[arg1].field_0):
            if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                revert with 0, 34
        else:
            if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                revert with 0, 34
        if bool(stor24[arg1].field_0):
            if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, uint256(stor24[arg1].field_0)):
                if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                    idx = ceil32(uint255(uint256(stor24[arg1].field_0)) * 0.5) + 736
                    s = 0
                    while ceil32(uint255(uint256(stor24[arg1].field_0)) * 0.5) + (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 704 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                revert with 0, 34
            if stor24[arg1].field_1 % 128:
                if 31 < stor24[arg1].field_1 % 128:
                    idx = ceil32(uint255(uint256(stor24[arg1].field_0)) * 0.5) + 736
                    s = 0
                    while ceil32(uint255(uint256(stor24[arg1].field_0)) * 0.5) + stor24[arg1].field_1 % 128 + 704 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
    else:
        if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
            revert with 0, 34
        if bool(stor24[arg1].field_0):
            if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, uint256(stor24[arg1].field_0)):
                if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                    idx = 416
                    s = 0
                    while (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 384 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                revert with 0, 34
            if stor24[arg1].field_1 % 128:
                if 31 < stor24[arg1].field_1 % 128:
                    idx = 416
                    s = 0
                    while stor24[arg1].field_1 % 128 + 384 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        if uint8(stor24[arg1].field_1792) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) > 5:
            revert with 0, 33
        if uint8(stor24[arg1].field_1800) != 5:
            revert with 0, 'Not orb'
        if not stor22[msg.sender]:
            revert with 0, 'Not allowed'
        if bool(stor24[arg1].field_0):
            if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                revert with 0, 34
        else:
            if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                revert with 0, 34
        if bool(stor24[arg1].field_0):
            if bool(stor24[arg1].field_0) == uint255(uint256(stor24[arg1].field_0)) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, uint256(stor24[arg1].field_0)):
                if 31 < uint255(uint256(stor24[arg1].field_0)) * 0.5:
                    idx = ceil32(stor24[arg1].field_1 % 128) + 736
                    s = 0
                    while ceil32(stor24[arg1].field_1 % 128) + (uint255(uint256(stor24[arg1].field_0)) * 0.5) + 704 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor24[arg1].field_0) == stor24[arg1].field_1 % 128 < 32:
                revert with 0, 34
            if stor24[arg1].field_1 % 128:
                if 31 < stor24[arg1].field_1 % 128:
                    idx = ceil32(stor24[arg1].field_1 % 128) + 736
                    s = 0
                    while ceil32(stor24[arg1].field_1 % 128) + stor24[arg1].field_1 % 128 + 704 > idx:
                        mem[idx + 32] = uint256(stor24[arg1][s].field_256)
                        idx = idx + 32
                        s = s + 1
                        continue 
    if uint8(stor24[arg1].field_1792) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if uint8(stor24[arg1].field_1800) == 4:
        if block.timestamp < uint256(stor24[arg1].field_768):
            revert with 0, 17
        if uint8(stor24[arg1].field_1800) == 5:
            if uint256(stor24[arg1].field_1280) and sub_7e953ee7 > -1 / uint256(stor24[arg1].field_1280):
                revert with 0, 17
            if uint256(stor24[arg1].field_1280) * sub_7e953ee7 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * sub_7e953ee7:
                revert with 0, 17
            if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args arg1, 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x7cddee37 with:
                    gas gas_remaining wei
                   args uint256(stor24[arg1].field_1536)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_512) > !(uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600)):
                revert with 0, 17
            if uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            if uint256(stor24[arg1].field_512) < (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100:
                revert with 0, 17
            return (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100, 
                   uint256(stor24[arg1].field_512) - ((uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100)
        if uint256(stor24[arg1].field_512) and sub_7e953ee7 > -1 / uint256(stor24[arg1].field_512):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) * sub_7e953ee7 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * sub_7e953ee7:
            revert with 0, 17
        if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args arg1, 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x7cddee37 with:
                gas gas_remaining wei
               args uint256(stor24[arg1].field_1536)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_512) > !(uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600)):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) < (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100:
            revert with 0, 17
        return (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100, 
               uint256(stor24[arg1].field_512) - ((uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_7e953ee7) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_7e953ee7) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100)
    if uint8(stor24[arg1].field_1800) > 5:
        revert with 0, 33
    if block.timestamp < uint256(stor24[arg1].field_768):
        revert with 0, 17
    if uint8(stor24[arg1].field_1800) == 5:
        if uint8(stor24[arg1].field_1800) == 5:
            if uint256(stor24[arg1].field_1280) and uint256(sub_ded2abc3[arg1].field_0) > -1 / uint256(stor24[arg1].field_1280):
                revert with 0, 17
            if uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0) and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0):
                revert with 0, 17
            if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args arg1, 1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            require ext_code.size(stor20)
            staticcall stor20.0x7cddee37 with:
                    gas gas_remaining wei
                   args uint256(stor24[arg1].field_1536)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if uint256(stor24[arg1].field_512) > !(uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if uint256(stor24[arg1].field_512) < (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100:
                revert with 0, 17
            return (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100, 
                   uint256(stor24[arg1].field_512) - ((uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100)
        if uint256(stor24[arg1].field_512) and uint256(sub_ded2abc3[arg1].field_0) > -1 / uint256(stor24[arg1].field_512):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0) and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0):
            revert with 0, 17
        if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args arg1, 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x7cddee37 with:
                gas gas_remaining wei
               args uint256(stor24[arg1].field_1536)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_512) > !(uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600)):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) < (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100:
            revert with 0, 17
        return (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100, 
               uint256(stor24[arg1].field_512) - ((uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * uint256(sub_ded2abc3[arg1].field_0)) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100)
    if uint8(stor24[arg1].field_1800) == 5:
        if uint256(stor24[arg1].field_1280) and sub_f5597032 > -1 / uint256(stor24[arg1].field_1280):
            revert with 0, 17
        if uint256(stor24[arg1].field_1280) * sub_f5597032 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_1280) * sub_f5597032:
            revert with 0, 17
        if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args arg1, 1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600):
            revert with 0, 17
        require ext_code.size(stor20)
        staticcall stor20.0x7cddee37 with:
                gas gas_remaining wei
               args uint256(stor24[arg1].field_1536)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if uint256(stor24[arg1].field_512) > !(uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600)):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600):
            revert with 0, 17
        if uint256(stor24[arg1].field_512) < (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100:
            revert with 0, 17
        return (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100, 
               uint256(stor24[arg1].field_512) - ((uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_1280) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_1280) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100)
    if uint256(stor24[arg1].field_512) and sub_f5597032 > -1 / uint256(stor24[arg1].field_512):
        revert with 0, 17
    if uint256(stor24[arg1].field_512) * sub_f5597032 and block.timestamp - uint256(stor24[arg1].field_768) > -1 / uint256(stor24[arg1].field_512) * sub_f5597032:
        revert with 0, 17
    if uint256(stor24[arg1].field_1024) > !((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600):
        revert with 0, 17
    require ext_code.size(stor20)
    staticcall stor20.0x9a2754f4 with:
            gas gas_remaining wei
           args arg1, 1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600):
        revert with 0, 17
    require ext_code.size(stor20)
    staticcall stor20.0x7cddee37 with:
            gas gas_remaining wei
           args uint256(stor24[arg1].field_1536)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if uint256(stor24[arg1].field_512) > !(uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600)):
        revert with 0, 17
    if uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600) and ext_call.return_data[0] > -1 / uint256(stor24[arg1].field_512) + uint256(stor24[arg1].field_1024) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600):
        revert with 0, 17
    if uint256(stor24[arg1].field_512) < (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100:
        revert with 0, 17
    return (uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100, 
           uint256(stor24[arg1].field_512) - ((uint256(stor24[arg1].field_512) * ext_call.return_data[0]) + (uint256(stor24[arg1].field_1024) * ext_call.return_data[0]) + ((block.timestamp * uint256(stor24[arg1].field_512) * sub_f5597032) - (uint256(stor24[arg1].field_768) * uint256(stor24[arg1].field_512) * sub_f5597032) / 10000 / 24 * 3600 * ext_call.return_data[0]) / 100)
}

function sub_09eb4ad4(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    mem[64] = ceil32(32 * ('cd', 4).length) + 97
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] <= test266151307()
        require calldata.size + -cd[4] + -cd[s] - 36 >= 288
        _574 = mem[64]
        if mem[64] + 288 < mem[64] or mem[64] + 288 > test266151307():
            revert with 0, 65
        mem[64] = mem[64] + 288
        require cd[(cd[4] + cd[s] + 36)] <= test266151307()
        require cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 67 < calldata.size
        if cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)] > test266151307():
            revert with 0, 65
        _586 = mem[64]
        if mem[64] + ceil32(ceil32(cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)])) + 1 < mem[64] or mem[64] + ceil32(ceil32(cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)])) + 1 > test266151307():
            revert with 0, 65
        mem[64] = mem[64] + ceil32(ceil32(cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)])) + 1
        mem[_586] = cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)]
        require cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)] + 68 <= calldata.size
        mem[_586 + 32 len cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)]] = call.data[cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 68 len cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)]]
        mem[_586 + cd[(cd[4] + cd[s] + cd[(cd[4] + cd[s] + 36)] + 36)] + 32] = 0
        mem[_574] = _586
        mem[_574 + 32] = cd[(cd[4] + cd[s] + 68)]
        mem[_574 + 64] = cd[(cd[4] + cd[s] + 100)]
        mem[_574 + 96] = cd[(cd[4] + cd[s] + 132)]
        mem[_574 + 128] = cd[(cd[4] + cd[s] + 164)]
        mem[_574 + 160] = cd[(cd[4] + cd[s] + 196)]
        mem[_574 + 192] = cd[(cd[4] + cd[s] + 228)]
        require cd[(cd[4] + cd[s] + 260)] < 6
        mem[_574 + 224] = cd[(cd[4] + cd[s] + 260)]
        require cd[(cd[4] + cd[s] + 292)] < 6
        mem[_574 + 256] = cd[(cd[4] + cd[s] + 292)]
        mem[t] = _574
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    mem[0] = msg.sender
    mem[32] = 22
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    _1146 = mem[96]
    idx = 0
    while idx < _1146:
        if idx >= mem[96]:
            revert with 0, 50
        if mem[mem[(32 * idx) + 128] + 64] != 0:
            if idx >= mem[96]:
                revert with 0, 50
            _1151 = mem[(32 * idx) + 128]
            if not stor22[msg.sender]:
                revert with 0, 'Not allowed'
            if currentTokenId > -2:
                revert with 0, 17
            currentTokenId++
            if not address(cd[36]):
                revert with 0, 'ERC721: mint to the zero address'
            if address(ownerOf[stor21]):
                revert with 0, 'ERC721: token already minted'
            if balanceOf[address(cd[36])] > -2:
                revert with 0, 17
            balanceOf[address(cd[36])]++
            mem[0] = currentTokenId
            mem[32] = 3
            address(ownerOf[stor21]) = address(cd[36])
            emit Transfer(0, address(cd[36]), currentTokenId);
            if not address(cd[36]):
                mem[mem[(32 * idx) + 128] + 32] = currentTokenId
                if mem[_1151 + 256] > 5:
                    revert with 0, 33
                if mem[_1151 + 256] == 4:
                    if mem[_1151 + 224] > 5:
                        revert with 0, 33
                    mem[0] = currentTokenId
                    mem[32] = 24
                    _1176 = mem[_1151]
                    _1177 = mem[mem[_1151]]
                    if bool(stor24[stor21].field_0):
                        if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        mem[0] = sha3(currentTokenId, 24)
                        if not _1177:
                            uint256(stor24[stor21].field_0) = 0
                            s = sha3(sha3(currentTokenId, 24))
                            while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2015 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2015].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2015].field_0)++
                        else:
                            uint256(stor24[stor21].field_0) = (2 * _1177) + 1
                            t = sha3(sha3(currentTokenId, 24))
                            s = _1176 + 32
                            while _1176 + _1177 + 32 > s:
                                uint256(stor[t].field_0) = mem[s]
                                _1146 = mem[96]
                                t = t + 1
                                s = s + 32
                                continue 
                            s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1177 + 31) >> 5)
                            while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2301 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2301].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2301].field_0)++
                    else:
                        if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                            revert with 0, 34
                        mem[0] = sha3(currentTokenId, 24)
                        if not _1177:
                            uint256(stor24[stor21].field_0) = 0
                            s = sha3(sha3(currentTokenId, 24))
                            while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2018 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2018].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2018].field_0)++
                        else:
                            uint256(stor24[stor21].field_0) = (2 * _1177) + 1
                            t = sha3(sha3(currentTokenId, 24))
                            s = _1176 + 32
                            while _1176 + _1177 + 32 > s:
                                uint256(stor[t].field_0) = mem[s]
                                _1146 = mem[96]
                                t = t + 1
                                s = s + 32
                                continue 
                            s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1177 + 31) >> 5)
                            while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2302 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2302].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2302].field_0)++
                else:
                    if mem[_1151 + 256] > 5:
                        revert with 0, 33
                    if mem[_1151 + 256] == 5:
                        if mem[_1151 + 224] > 5:
                            revert with 0, 33
                        mem[0] = currentTokenId
                        mem[32] = 24
                        _1184 = mem[_1151]
                        _1185 = mem[mem[_1151]]
                        if bool(stor24[stor21].field_0):
                            if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1185:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2027 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2027].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2027].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1185) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1184 + 32
                                while _1184 + _1185 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1185 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2305 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2305].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2305].field_0)++
                        else:
                            if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1185:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2030 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2030].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2030].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1185) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1184 + 32
                                while _1184 + _1185 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1185 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2306 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2306].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2306].field_0)++
                    else:
                        require ext_code.size(stor20)
                        staticcall stor20.0x164af651 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1178] < 6
                        if mem[_1178] > 5:
                            revert with 0, 33
                        mem[_1151 + 224] = mem[_1178]
                        mem[0] = currentTokenId
                        mem[32] = 24
                        _1203 = mem[_1151]
                        _1204 = mem[mem[_1151]]
                        if bool(stor24[stor21].field_0):
                            if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1204:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2021 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2021].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2021].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1204) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1203 + 32
                                while _1203 + _1204 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1204 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2303 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2303].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2303].field_0)++
                        else:
                            if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1204:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2024 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2024].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2024].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1204) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1203 + 32
                                while _1203 + _1204 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1204 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2304 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2304].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2304].field_0)++
            else:
                mem[32] = 5
                uint256(stor5[address(cd[36])].field_0)++
                mem[0] = sha3(address(cd[36]), 5)
                uint256(stor5[address(cd[36])][uint256(stor5[address(cd[36])].field_0)].field_0) = currentTokenId
                mem[mem[(32 * idx) + 128] + 32] = currentTokenId
                if mem[_1151 + 256] > 5:
                    revert with 0, 33
                if mem[_1151 + 256] == 4:
                    if mem[_1151 + 224] > 5:
                        revert with 0, 33
                    mem[0] = currentTokenId
                    mem[32] = 24
                    _1180 = mem[_1151]
                    _1181 = mem[mem[_1151]]
                    if bool(stor24[stor21].field_0):
                        if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        mem[0] = sha3(currentTokenId, 24)
                        if not _1181:
                            uint256(stor24[stor21].field_0) = 0
                            s = sha3(sha3(currentTokenId, 24))
                            while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2033 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2033].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2033].field_0)++
                        else:
                            uint256(stor24[stor21].field_0) = (2 * _1181) + 1
                            t = sha3(sha3(currentTokenId, 24))
                            s = _1180 + 32
                            while _1180 + _1181 + 32 > s:
                                uint256(stor[t].field_0) = mem[s]
                                _1146 = mem[96]
                                t = t + 1
                                s = s + 32
                                continue 
                            s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1181 + 31) >> 5)
                            while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2307 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2307].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2307].field_0)++
                    else:
                        if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                            revert with 0, 34
                        mem[0] = sha3(currentTokenId, 24)
                        if not _1181:
                            uint256(stor24[stor21].field_0) = 0
                            s = sha3(sha3(currentTokenId, 24))
                            while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2036 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2036].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2036].field_0)++
                        else:
                            uint256(stor24[stor21].field_0) = (2 * _1181) + 1
                            t = sha3(sha3(currentTokenId, 24))
                            s = _1180 + 32
                            while _1180 + _1181 + 32 > s:
                                uint256(stor[t].field_0) = mem[s]
                                _1146 = mem[96]
                                t = t + 1
                                s = s + 32
                                continue 
                            s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1181 + 31) >> 5)
                            while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                uint256(stor[s].field_0) = 0
                                _1146 = mem[96]
                                s = s + 1
                                continue 
                            uint256(stor24[stor21].field_256) = currentTokenId
                            uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                            uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                            uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                            uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                            uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                            if mem[_1151 + 224] > 5:
                                revert with 0, 33
                            uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                            _2308 = mem[_1151 + 256]
                            if mem[_1151 + 256] > 5:
                                revert with 0, 33
                            if mem[_1151 + 256] >= stor25.length:
                                revert with 0, 50
                            mem[0] = 25
                            if uint256(stor25[_2308].field_0) == -1:
                                revert with 0, 17
                            uint256(stor25[_2308].field_0)++
                else:
                    if mem[_1151 + 256] > 5:
                        revert with 0, 33
                    if mem[_1151 + 256] == 5:
                        if mem[_1151 + 224] > 5:
                            revert with 0, 33
                        mem[0] = currentTokenId
                        mem[32] = 24
                        _1187 = mem[_1151]
                        _1188 = mem[mem[_1151]]
                        if bool(stor24[stor21].field_0):
                            if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1188:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2045 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2045].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2045].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1188) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1187 + 32
                                while _1187 + _1188 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1188 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2311 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2311].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2311].field_0)++
                        else:
                            if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1188:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2048 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2048].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2048].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1188) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1187 + 32
                                while _1187 + _1188 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1188 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2312 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2312].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2312].field_0)++
                    else:
                        require ext_code.size(stor20)
                        staticcall stor20.0x164af651 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1182] < 6
                        if mem[_1182] > 5:
                            revert with 0, 33
                        mem[_1151 + 224] = mem[_1182]
                        mem[0] = currentTokenId
                        mem[32] = 24
                        _1208 = mem[_1151]
                        _1209 = mem[mem[_1151]]
                        if bool(stor24[stor21].field_0):
                            if bool(stor24[stor21].field_0) == uint255(uint256(stor24[stor21].field_0)) * 0.5 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1209:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2039 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2039].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2039].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1209) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1208 + 32
                                while _1208 + _1209 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1209 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + ((uint255(uint256(stor24[stor21].field_0)) * 0.5) + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2309 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2309].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2309].field_0)++
                        else:
                            if bool(stor24[stor21].field_0) == stor24[stor21].field_1 % 128 < 32:
                                revert with 0, 34
                            mem[0] = sha3(currentTokenId, 24)
                            if not _1209:
                                uint256(stor24[stor21].field_0) = 0
                                s = sha3(sha3(currentTokenId, 24))
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2042 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2042].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2042].field_0)++
                            else:
                                uint256(stor24[stor21].field_0) = (2 * _1209) + 1
                                t = sha3(sha3(currentTokenId, 24))
                                s = _1208 + 32
                                while _1208 + _1209 + 32 > s:
                                    uint256(stor[t].field_0) = mem[s]
                                    _1146 = mem[96]
                                    t = t + 1
                                    s = s + 32
                                    continue 
                                s = sha3(sha3(currentTokenId, 24)) + (Mask(251, 0, _1209 + 31) >> 5)
                                while sha3(sha3(currentTokenId, 24)) + (stor24[stor21].field_1 % 128 + 31 / 32) > s:
                                    uint256(stor[s].field_0) = 0
                                    _1146 = mem[96]
                                    s = s + 1
                                    continue 
                                uint256(stor24[stor21].field_256) = currentTokenId
                                uint256(stor24[stor21].field_512) = mem[_1151 + 64]
                                uint256(stor24[stor21].field_768) = mem[_1151 + 96]
                                uint256(stor24[stor21].field_1024) = mem[_1151 + 128]
                                uint256(stor24[stor21].field_1280) = mem[_1151 + 160]
                                uint256(stor24[stor21].field_1536) = mem[_1151 + 192]
                                if mem[_1151 + 224] > 5:
                                    revert with 0, 33
                                uint256(stor24[stor21].field_1792) = mem[_1151 + 224]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                Mask(248, 0, stor24[stor21].field_1800) = mem[_1151 + 257 len 31]
                                _2310 = mem[_1151 + 256]
                                if mem[_1151 + 256] > 5:
                                    revert with 0, 33
                                if mem[_1151 + 256] >= stor25.length:
                                    revert with 0, 50
                                mem[0] = 25
                                if uint256(stor25[_2310].field_0) == -1:
                                    revert with 0, 17
                                uint256(stor25[_2310].field_0)++
        if idx == -1:
            revert with 0, 17
        _1146 = mem[96]
        idx = idx + 1
        continue 
}

function sub_2ebee207(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require calldata.size > cd[4] + 35
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    mem[64] = ceil32(32 * ('cd', 4).length) + 97
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    s = cd[4] + 36
    t = 128
    idx = 0
    while idx < ('cd', 4).length:
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    mem[0] = msg.sender
    mem[32] = 22
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= mem[96]:
            revert with 0, 50
        if mem[(32 * idx) + 128] != 0:
            if idx >= mem[96]:
                revert with 0, 50
            _1202 = mem[(32 * idx) + 128]
            if not stor22[msg.sender]:
                revert with 0, 'Not allowed'
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            _1204 = sha3(mem[(32 * idx) + 128], 24)
            _1205 = mem[64]
            mem[64] = mem[64] + 288
            if bool(stor24[mem[(32 * idx) + 128]].field_0):
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                _1208 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                mem[_1208] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                if bool(stor[_1204].field_0):
                    if bool(stor[_1204].field_0) == uint255(uint256(stor[_1204].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_1204].field_0)):
                        mem[_1205] = _1208
                        mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                        mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                        mem[_1205 + 96] = uint256(ownerOf[_1204])
                        mem[_1205 + 128] = balanceOf[_1204]
                        mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                        mem[_1205 + 192] = uint256(approved[_1204])
                        if uint8(stor7[_1204].field_0) > 5:
                            revert with 0, 33
                        mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1204]):
                                revert with 0, 17
                            if uint8(stor7[_1204].field_8) == 5:
                                if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1542 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1542] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1542]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1542]) / 10000):
                                    revert with 0, 17
                            else:
                                if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1543 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1543] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1543]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1543]) / 10000):
                                    revert with 0, 17
                        else:
                            if uint8(stor7[_1204].field_8) != 5:
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1598 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1598] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1598]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1598]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1599 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1599] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1599]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1599]) / 10000):
                                        revert with 0, 17
                            else:
                                mem[0] = _1202
                                mem[32] = 23
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1596 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1596] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1596]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1596]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1597 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1597] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1597]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1597]) / 10000):
                                        revert with 0, 17
                    else:
                        if 31 >= uint255(uint256(stor[_1204].field_0)) * 0.5:
                            mem[_1208 + 32] = 256 * Mask(248, 0, stor[_1204].field_8)
                            mem[_1205] = _1208
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1602 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1602] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1602]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1602]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1603 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1603] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1603]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1603]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1670 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1670] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1670]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1670]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1671 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1671] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1671]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1671]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1668 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1668] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1668]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1668]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1669 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1669] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1669]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1669]) / 10000):
                                            revert with 0, 17
                        else:
                            mem[0] = _1204
                            mem[_1208 + 32] = uint256(stor[sha3(_1204)].field_0)
                            s = _1208 + 32
                            t = sha3(_1204)
                            while _1208 + (uint255(uint256(stor[_1204].field_0)) * 0.5) > s:
                                mem[s + 32] = uint256(stor1[t].field_0)
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1205] = _1208
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1918 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1918] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1918]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1918]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1919 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1919] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1919]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1919]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1946 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1946] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1946]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1946]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1947 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1947] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1947]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1947]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1944 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1944] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1944]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1944]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1945 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1945] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1945]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1945]) / 10000):
                                            revert with 0, 17
                else:
                    if bool(stor[_1204].field_0) == stor[_1204].field_1 % 128 < 32:
                        revert with 0, 34
                    if not stor[_1204].field_1 % 128:
                        mem[_1205] = _1208
                        mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                        mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                        mem[_1205 + 96] = uint256(ownerOf[_1204])
                        mem[_1205 + 128] = balanceOf[_1204]
                        mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                        mem[_1205 + 192] = uint256(approved[_1204])
                        if uint8(stor7[_1204].field_0) > 5:
                            revert with 0, 33
                        mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1204]):
                                revert with 0, 17
                            if uint8(stor7[_1204].field_8) == 5:
                                if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1572 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1572] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1572]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1572]) / 10000):
                                    revert with 0, 17
                            else:
                                if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1573 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1573] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1573]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1573]) / 10000):
                                    revert with 0, 17
                        else:
                            if uint8(stor7[_1204].field_8) != 5:
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1628 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1628] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1628]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1628]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1629 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1629] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1629]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1629]) / 10000):
                                        revert with 0, 17
                            else:
                                mem[0] = _1202
                                mem[32] = 23
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1626 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1626] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1626]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1626]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1627 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1627] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1627]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1627]) / 10000):
                                        revert with 0, 17
                    else:
                        if 31 >= stor[_1204].field_1 % 128:
                            mem[_1208 + 32] = 256 * Mask(248, 0, stor[_1204].field_8)
                            mem[_1205] = _1208
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1632 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1632] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1632]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1632]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1633 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1633] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1633]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1633]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1700 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1700] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1700]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1700]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1701 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1701] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1701]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1701]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1698 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1698] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1698]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1698]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1699 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1699] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1699]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1699]) / 10000):
                                            revert with 0, 17
                        else:
                            mem[0] = _1204
                            mem[_1208 + 32] = uint256(stor[sha3(_1204)].field_0)
                            s = _1208 + 32
                            t = sha3(_1204)
                            while _1208 + stor[_1204].field_1 % 128 > s:
                                mem[s + 32] = uint256(stor1[t].field_0)
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1205] = _1208
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1924 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1924] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1924]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1924]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1925 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1925] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1925]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1925]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1952 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1952] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1952]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1952]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1953 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1953] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1953]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1953]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1950 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1950] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1950]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1950]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1951 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1951] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1951]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1951]) / 10000):
                                            revert with 0, 17
            else:
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                    revert with 0, 34
                _1209 = mem[64]
                mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                mem[_1209] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                if bool(stor[_1204].field_0):
                    if bool(stor[_1204].field_0) == uint255(uint256(stor[_1204].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_1204].field_0)):
                        mem[_1205] = _1209
                        mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                        mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                        mem[_1205 + 96] = uint256(ownerOf[_1204])
                        mem[_1205 + 128] = balanceOf[_1204]
                        mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                        mem[_1205 + 192] = uint256(approved[_1204])
                        if uint8(stor7[_1204].field_0) > 5:
                            revert with 0, 33
                        mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1204]):
                                revert with 0, 17
                            if uint8(stor7[_1204].field_8) == 5:
                                if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1580 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1580] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1580]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1580]) / 10000):
                                    revert with 0, 17
                            else:
                                if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1581 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1581] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1581]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1581]) / 10000):
                                    revert with 0, 17
                        else:
                            if uint8(stor7[_1204].field_8) != 5:
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1642 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1642] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1642]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1642]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1643 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1643] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1643]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1643]) / 10000):
                                        revert with 0, 17
                            else:
                                mem[0] = _1202
                                mem[32] = 23
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1640 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1640] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1640]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1640]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1641 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1641] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1641]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1641]) / 10000):
                                        revert with 0, 17
                    else:
                        if 31 >= uint255(uint256(stor[_1204].field_0)) * 0.5:
                            mem[_1209 + 32] = 256 * Mask(248, 0, stor[_1204].field_8)
                            mem[_1205] = _1209
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1646 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1646] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1646]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1646]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1647 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1647] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1647]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1647]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1716 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1716] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1716]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1716]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1717 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1717] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1717]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1717]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1714 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1714] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1714]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1714]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1715 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1715] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1715]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1715]) / 10000):
                                            revert with 0, 17
                        else:
                            mem[0] = _1204
                            mem[_1209 + 32] = uint256(stor[sha3(_1204)].field_0)
                            s = _1209 + 32
                            t = sha3(_1204)
                            while _1209 + (uint255(uint256(stor[_1204].field_0)) * 0.5) > s:
                                mem[s + 32] = uint256(stor1[t].field_0)
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1205] = _1209
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1930 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1930] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1930]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1930]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1931 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1931] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1931]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1931]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1958 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1958] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1958]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1958]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1959 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1959] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1959]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1959]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1956 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1956] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1956]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1956]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1957 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1957] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1957]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1957]) / 10000):
                                            revert with 0, 17
                else:
                    if bool(stor[_1204].field_0) == stor[_1204].field_1 % 128 < 32:
                        revert with 0, 34
                    if not stor[_1204].field_1 % 128:
                        mem[_1205] = _1209
                        mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                        mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                        mem[_1205 + 96] = uint256(ownerOf[_1204])
                        mem[_1205 + 128] = balanceOf[_1204]
                        mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                        mem[_1205 + 192] = uint256(approved[_1204])
                        if uint8(stor7[_1204].field_0) > 5:
                            revert with 0, 33
                        mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1204].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1204]):
                                revert with 0, 17
                            if uint8(stor7[_1204].field_8) == 5:
                                if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1616 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1616] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1616]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1616]) / 10000):
                                    revert with 0, 17
                            else:
                                if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1202
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1202, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1617 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1617] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if 0 > !((balanceOf[_1204] * mem[_1617]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1617]) / 10000):
                                    revert with 0, 17
                        else:
                            if uint8(stor7[_1204].field_8) != 5:
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1676 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1676] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1676]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1676]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1677 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1677] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1677]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1677]) / 10000):
                                        revert with 0, 17
                            else:
                                mem[0] = _1202
                                mem[32] = 23
                                if uint8(stor7[_1204].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1674 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1674] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1674]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1674]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1675 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1675] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1675]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1675]) / 10000):
                                        revert with 0, 17
                    else:
                        if 31 >= stor[_1204].field_1 % 128:
                            mem[_1209 + 32] = 256 * Mask(248, 0, stor[_1204].field_8)
                            mem[_1205] = _1209
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1680 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1680] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1680]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1680]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1681] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1681]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1681]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1742 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1742] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1742]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1742]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1743 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1743] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1743]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1743]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1740 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1740] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1740]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1740]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1741 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1741] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1741]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1741]) / 10000):
                                            revert with 0, 17
                        else:
                            mem[0] = _1204
                            mem[_1209 + 32] = uint256(stor[sha3(_1204)].field_0)
                            s = _1209 + 32
                            t = sha3(_1204)
                            while _1209 + stor[_1204].field_1 % 128 > s:
                                mem[s + 32] = uint256(stor1[t].field_0)
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1205] = _1209
                            mem[_1205 + 32] = uint256(stor1[_1204].field_0)
                            mem[_1205 + 64] = uint256(stor2[_1204].field_0)
                            mem[_1205 + 96] = uint256(ownerOf[_1204])
                            mem[_1205 + 128] = balanceOf[_1204]
                            mem[_1205 + 160] = uint256(stor5[_1204].field_0)
                            mem[_1205 + 192] = uint256(approved[_1204])
                            if uint8(stor7[_1204].field_0) > 5:
                                revert with 0, 33
                            mem[_1205 + 224] = uint8(stor7[_1204].field_0)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            mem[_1205 + 256] = uint8(stor7[_1204].field_8)
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1204].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1204]):
                                    revert with 0, 17
                                if uint8(stor7[_1204].field_8) == 5:
                                    if uint256(stor5[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1936 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1936] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1936]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1936]) / 10000):
                                        revert with 0, 17
                                else:
                                    if uint256(stor2[_1204].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1204].field_0):
                                        revert with 0, 17
                                    if uint256(stor2[_1204].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1202
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1202, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1937 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1937] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if 0 > !((balanceOf[_1204] * mem[_1937]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1937]) / 10000):
                                        revert with 0, 17
                            else:
                                if uint8(stor7[_1204].field_8) != 5:
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and sub_f5597032 > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1964 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1964] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1964]) + ((block.timestamp * uint256(stor5[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1964]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and sub_f5597032 > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * sub_f5597032:
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1965 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1965] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1965]) + ((block.timestamp * uint256(stor2[_1204].field_0) * sub_f5597032) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1965]) / 10000):
                                            revert with 0, 17
                                else:
                                    mem[0] = _1202
                                    mem[32] = 23
                                    if uint8(stor7[_1204].field_8) > 5:
                                        revert with 0, 33
                                    if block.timestamp < uint256(ownerOf[_1204]):
                                        revert with 0, 17
                                    if uint8(stor7[_1204].field_8) == 5:
                                        if uint256(stor5[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor5[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1962 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1962] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1962]) + ((block.timestamp * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor5[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1962]) / 10000):
                                            revert with 0, 17
                                    else:
                                        if uint256(stor2[_1204].field_0) and uint256(sub_ded2abc3[_1202].field_0) > -1 / uint256(stor2[_1204].field_0):
                                            revert with 0, 17
                                        if uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0) and block.timestamp - uint256(ownerOf[_1204]) > -1 / uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0):
                                            revert with 0, 17
                                        if balanceOf[_1204] > !((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        mem[mem[64] + 4] = _1202
                                        mem[mem[64] + 36] = 1
                                        require ext_code.size(stor20)
                                        staticcall stor20.0x9a2754f4 with:
                                                gas gas_remaining wei
                                               args _1202, 1
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1963 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600) and mem[_1963] > -1 / balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600):
                                            revert with 0, 17
                                        if 0 > !(balanceOf[_1204] + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600)):
                                            revert with 0, 17
                                        if 0 > !((balanceOf[_1204] * mem[_1963]) + ((block.timestamp * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) - (uint256(ownerOf[_1204]) * uint256(stor2[_1204].field_0) * uint256(sub_ded2abc3[_1202].field_0)) / 10000 / 24 * 3600 * mem[_1963]) / 10000):
                                            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return 0
}

function sub_dc95b5c1(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require calldata.size > cd[4] + 35
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    mem[64] = ceil32(32 * ('cd', 4).length) + 97
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    s = cd[4] + 36
    t = 128
    idx = 0
    while idx < ('cd', 4).length:
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    mem[0] = msg.sender
    mem[32] = 22
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    idx = 0
    s = 0
    t = 0
    while idx < ('cd', 4).length:
        if idx >= mem[96]:
            revert with 0, 50
        _1771 = mem[(32 * idx) + 128]
        if not stor22[msg.sender]:
            revert with 0, 'Not allowed'
        mem[0] = mem[(32 * idx) + 128]
        mem[32] = 24
        _1774 = sha3(mem[(32 * idx) + 128], 24)
        _1775 = mem[64]
        mem[64] = mem[64] + 288
        if bool(stor24[mem[(32 * idx) + 128]].field_0):
            if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                revert with 0, 34
            _1778 = mem[64]
            mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
            mem[_1778] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
            if bool(stor[_1774].field_0):
                if bool(stor[_1774].field_0) == uint255(uint256(stor[_1774].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if not Mask(256, -1, uint256(stor[_1774].field_0)):
                    mem[_1775] = _1778
                    mem[_1775 + 32] = uint256(stor1[_1774].field_0)
                    mem[_1775 + 64] = uint256(stor2[_1774].field_0)
                    mem[_1775 + 96] = uint256(ownerOf[_1774])
                    mem[_1775 + 128] = balanceOf[_1774]
                    mem[_1775 + 160] = uint256(stor5[_1774].field_0)
                    mem[_1775 + 192] = uint256(approved[_1774])
                    if uint8(stor7[_1774].field_0) > 5:
                        revert with 0, 33
                    mem[_1775 + 224] = uint8(stor7[_1774].field_0)
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    mem[_1775 + 256] = uint8(stor7[_1774].field_8)
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1774].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1774]):
                            revert with 0, 17
                        if uint8(stor7[_1774].field_8) == 5:
                            if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2112 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2112] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2404 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2404] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1774] * mem[_2404]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2404]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1774] * mem[_2404]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2404]) / 10000)
                            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2113 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2113] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2405 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2405] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2405]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2405]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2405]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2405]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1774].field_8) != 5:
                        if uint8(stor7[_1774].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1774]):
                            revert with 0, 17
                        if uint8(stor7[_1774].field_8) == 5:
                            if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2168 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2168] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2456 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2456] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1774] * mem[_2456]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2456]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1774] * mem[_2456]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2456]) / 10000)
                            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2169 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2169] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2457 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2457] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2457]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2457]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2457]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2457]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2166 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2166] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2454 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2454] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2454]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2454]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2454]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2454]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2167 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2167] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2455 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2455] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2455]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2455]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2455]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2455]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= uint255(uint256(stor[_1774].field_0)) * 0.5:
                    mem[_1778 + 32] = 256 * Mask(248, 0, stor[_1774].field_8)
                    mem[_1775] = _1778
                    mem[_1775 + 32] = uint256(stor1[_1774].field_0)
                    mem[_1775 + 64] = uint256(stor2[_1774].field_0)
                    mem[_1775 + 96] = uint256(ownerOf[_1774])
                    mem[_1775 + 128] = balanceOf[_1774]
                    mem[_1775 + 160] = uint256(stor5[_1774].field_0)
                    mem[_1775 + 192] = uint256(approved[_1774])
                    if uint8(stor7[_1774].field_0) > 5:
                        revert with 0, 33
                    mem[_1775 + 224] = uint8(stor7[_1774].field_0)
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    mem[_1775 + 256] = uint8(stor7[_1774].field_8)
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1774].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1774]):
                            revert with 0, 17
                        if uint8(stor7[_1774].field_8) == 5:
                            if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2172] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2460 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2460] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1774] * mem[_2460]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2460]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1774] * mem[_2460]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2460]) / 10000)
                            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2173 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2173] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2461 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2461] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2461]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2461]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2461]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2461]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1774].field_8) != 5:
                        if uint8(stor7[_1774].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1774]):
                            revert with 0, 17
                        if uint8(stor7[_1774].field_8) == 5:
                            if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2240 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2240] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2528 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2528] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1774] * mem[_2528]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2528]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1774] * mem[_2528]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2528]) / 10000)
                            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2241 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2241] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2529 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2529] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2529]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2529]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2529]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2529]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2238 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2238] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2526 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2526] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2526]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2526]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2526]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2526]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2239 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2239] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2527 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2527] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2527]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2527]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2527]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2527]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1774
                mem[_1778 + 32] = uint256(stor[sha3(_1774)].field_0)
                u = _1778 + 32
                v = sha3(_1774)
                while _1778 + (uint255(uint256(stor[_1774].field_0)) * 0.5) > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_1775] = _1778
                mem[_1775 + 32] = uint256(stor1[_1774].field_0)
                mem[_1775 + 64] = uint256(stor2[_1774].field_0)
                mem[_1775 + 96] = uint256(ownerOf[_1774])
                mem[_1775 + 128] = balanceOf[_1774]
                mem[_1775 + 160] = uint256(stor5[_1774].field_0)
                mem[_1775 + 192] = uint256(approved[_1774])
                if uint8(stor7[_1774].field_0) > 5:
                    revert with 0, 33
                mem[_1775 + 224] = uint8(stor7[_1774].field_0)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                mem[_1775 + 256] = uint8(stor7[_1774].field_8)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2776 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2776] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2872 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2872] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2872]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2872]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2872]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2872]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2777 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2777] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2873 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2873] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2873]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2873]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2873]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2873]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1774].field_8) != 5:
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2804 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2804] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2900 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2900] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2900]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2900]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2900]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2900]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2805 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2805] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2901 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2901] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2901]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2901]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2901]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2901]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2802 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2802] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2898 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2898] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2898]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2898]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2898]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2898]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2803 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2803] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2899 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2899] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2899]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2899]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2899]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2899]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor[_1774].field_0) == stor[_1774].field_1 % 128 < 32:
                revert with 0, 34
            if not stor[_1774].field_1 % 128:
                mem[_1775] = _1778
                mem[_1775 + 32] = uint256(stor1[_1774].field_0)
                mem[_1775 + 64] = uint256(stor2[_1774].field_0)
                mem[_1775 + 96] = uint256(ownerOf[_1774])
                mem[_1775 + 128] = balanceOf[_1774]
                mem[_1775 + 160] = uint256(stor5[_1774].field_0)
                mem[_1775 + 192] = uint256(approved[_1774])
                if uint8(stor7[_1774].field_0) > 5:
                    revert with 0, 33
                mem[_1775 + 224] = uint8(stor7[_1774].field_0)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                mem[_1775 + 256] = uint8(stor7[_1774].field_8)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2142 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2142] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2430 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2430] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2430]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2430]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2430]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2430]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2143 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2143] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2431 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2431] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2431]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2431]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2431]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2431]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1774].field_8) != 5:
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2198 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2198] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2486 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2486] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2486]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2486]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2486]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2486]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2199 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2199] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2487 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2487] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2487]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2487]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2487]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2487]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2196 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2196] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2484 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2484] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2484]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2484]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2484]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2484]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2197 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2197] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2485 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2485] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2485]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2485]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2485]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2485]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if 31 >= stor[_1774].field_1 % 128:
                mem[_1778 + 32] = 256 * Mask(248, 0, stor[_1774].field_8)
                mem[_1775] = _1778
                mem[_1775 + 32] = uint256(stor1[_1774].field_0)
                mem[_1775 + 64] = uint256(stor2[_1774].field_0)
                mem[_1775 + 96] = uint256(ownerOf[_1774])
                mem[_1775 + 128] = balanceOf[_1774]
                mem[_1775 + 160] = uint256(stor5[_1774].field_0)
                mem[_1775 + 192] = uint256(approved[_1774])
                if uint8(stor7[_1774].field_0) > 5:
                    revert with 0, 33
                mem[_1775 + 224] = uint8(stor7[_1774].field_0)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                mem[_1775 + 256] = uint8(stor7[_1774].field_8)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2202 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2202] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2490 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2490] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2490]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2490]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2490]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2490]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2203 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2203] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2491 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2491] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2491]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2491]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2491]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2491]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1774].field_8) != 5:
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2270 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2270] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2558 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2558] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2558]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2558]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2558]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2558]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2271] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2559 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2559] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2559]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2559]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2559]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2559]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2268 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2268] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2556 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2556] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2556]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2556]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2556]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2556]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2269 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2269] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2557 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2557] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2557]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2557]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2557]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2557]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1774
            mem[_1778 + 32] = uint256(stor[sha3(_1774)].field_0)
            u = _1778 + 32
            v = sha3(_1774)
            while _1778 + stor[_1774].field_1 % 128 > u:
                mem[u + 32] = uint256(stor1[v].field_0)
                u = u + 32
                v = v + 1
                continue 
            mem[_1775] = _1778
            mem[_1775 + 32] = uint256(stor1[_1774].field_0)
            mem[_1775 + 64] = uint256(stor2[_1774].field_0)
            mem[_1775 + 96] = uint256(ownerOf[_1774])
            mem[_1775 + 128] = balanceOf[_1774]
            mem[_1775 + 160] = uint256(stor5[_1774].field_0)
            mem[_1775 + 192] = uint256(approved[_1774])
            if uint8(stor7[_1774].field_0) > 5:
                revert with 0, 33
            mem[_1775 + 224] = uint8(stor7[_1774].field_0)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            mem[_1775 + 256] = uint8(stor7[_1774].field_8)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2782 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2782] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2878 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2878] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2878]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2878]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2878]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2878]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2783 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2783] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2879 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2879] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2879]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2879]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2879]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2879]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_1774].field_8) != 5:
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2810 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2810] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2906 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2906] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2906]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2906]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2906]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2906]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2811 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2811] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2907 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2907] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2907]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2907]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2907]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2907]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1771
            mem[32] = 23
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_1774]):
                revert with 0, 17
            if uint8(stor7[_1774].field_8) == 5:
                if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                    revert with 0, 17
                if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2808 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2808] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2904 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2904] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2904]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2904]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2904]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2904]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                revert with 0, 17
            if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                revert with 0, 17
            if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2809 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2809] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2905 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2905] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1774] * mem[_2905]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2905]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1774] * mem[_2905]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2905]) / 10000)
            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
            continue 
        if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
            revert with 0, 34
        _1779 = mem[64]
        mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
        mem[_1779] = stor24[mem[(32 * idx) + 128]].field_1 % 128
        if bool(stor[_1774].field_0):
            if bool(stor[_1774].field_0) == uint255(uint256(stor[_1774].field_0)) * 0.5 < 32:
                revert with 0, 34
            if not Mask(256, -1, uint256(stor[_1774].field_0)):
                mem[_1775] = _1779
                mem[_1775 + 32] = uint256(stor1[_1774].field_0)
                mem[_1775 + 64] = uint256(stor2[_1774].field_0)
                mem[_1775 + 96] = uint256(ownerOf[_1774])
                mem[_1775 + 128] = balanceOf[_1774]
                mem[_1775 + 160] = uint256(stor5[_1774].field_0)
                mem[_1775 + 192] = uint256(approved[_1774])
                if uint8(stor7[_1774].field_0) > 5:
                    revert with 0, 33
                mem[_1775 + 224] = uint8(stor7[_1774].field_0)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                mem[_1775 + 256] = uint8(stor7[_1774].field_8)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2150 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2150] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2438 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2438] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2438]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2438]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2438]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2438]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2151 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2151] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2439 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2439] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2439]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2439]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2439]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2439]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1774].field_8) != 5:
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2212 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2212] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2500 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2500] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2500]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2500]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2500]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2500]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2213 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2213] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2501 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2501] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2501]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2501]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2501]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2501]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2210 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2210] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2498 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2498] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2498]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2498]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2498]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2498]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2211 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2211] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2499 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2499] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2499]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2499]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2499]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2499]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if 31 >= uint255(uint256(stor[_1774].field_0)) * 0.5:
                mem[_1779 + 32] = 256 * Mask(248, 0, stor[_1774].field_8)
                mem[_1775] = _1779
                mem[_1775 + 32] = uint256(stor1[_1774].field_0)
                mem[_1775 + 64] = uint256(stor2[_1774].field_0)
                mem[_1775 + 96] = uint256(ownerOf[_1774])
                mem[_1775 + 128] = balanceOf[_1774]
                mem[_1775 + 160] = uint256(stor5[_1774].field_0)
                mem[_1775 + 192] = uint256(approved[_1774])
                if uint8(stor7[_1774].field_0) > 5:
                    revert with 0, 33
                mem[_1775 + 224] = uint8(stor7[_1774].field_0)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                mem[_1775 + 256] = uint8(stor7[_1774].field_8)
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1774].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2216 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2216] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2504 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2504] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2504]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2504]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2504]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2504]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2217 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2217] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2505 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2505] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2505]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2505]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2505]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2505]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1774].field_8) != 5:
                    if uint8(stor7[_1774].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1774]):
                        revert with 0, 17
                    if uint8(stor7[_1774].field_8) == 5:
                        if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2286 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2286] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2574 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2574] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1774] * mem[_2574]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2574]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1774] * mem[_2574]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2574]) / 10000)
                        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2287 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2287] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2575 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2575] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2575]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2575]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2575]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2575]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2284 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2284] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2572 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2572] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2572]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2572]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2572]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2572]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2285 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2285] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2573 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2573] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2573]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2573]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2573]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2573]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1774
            mem[_1779 + 32] = uint256(stor[sha3(_1774)].field_0)
            u = _1779 + 32
            v = sha3(_1774)
            while _1779 + (uint255(uint256(stor[_1774].field_0)) * 0.5) > u:
                mem[u + 32] = uint256(stor1[v].field_0)
                u = u + 32
                v = v + 1
                continue 
            mem[_1775] = _1779
            mem[_1775 + 32] = uint256(stor1[_1774].field_0)
            mem[_1775 + 64] = uint256(stor2[_1774].field_0)
            mem[_1775 + 96] = uint256(ownerOf[_1774])
            mem[_1775 + 128] = balanceOf[_1774]
            mem[_1775 + 160] = uint256(stor5[_1774].field_0)
            mem[_1775 + 192] = uint256(approved[_1774])
            if uint8(stor7[_1774].field_0) > 5:
                revert with 0, 33
            mem[_1775 + 224] = uint8(stor7[_1774].field_0)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            mem[_1775 + 256] = uint8(stor7[_1774].field_8)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2788 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2788] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2884 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2884] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2884]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2884]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2884]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2884]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2789 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2789] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2885 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2885] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2885]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2885]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2885]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2885]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_1774].field_8) != 5:
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2816 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2816] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2912 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2912] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2912]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2912]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2912]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2912]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2817 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2817] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2913 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2913] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2913]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2913]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2913]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2913]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1771
            mem[32] = 23
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_1774]):
                revert with 0, 17
            if uint8(stor7[_1774].field_8) == 5:
                if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                    revert with 0, 17
                if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2814 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2814] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2910 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2910] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2910]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2910]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2910]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2910]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                revert with 0, 17
            if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                revert with 0, 17
            if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2815 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2815] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2911 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2911] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1774] * mem[_2911]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2911]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1774] * mem[_2911]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2911]) / 10000)
            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
            continue 
        if bool(stor[_1774].field_0) == stor[_1774].field_1 % 128 < 32:
            revert with 0, 34
        if not stor[_1774].field_1 % 128:
            mem[_1775] = _1779
            mem[_1775 + 32] = uint256(stor1[_1774].field_0)
            mem[_1775 + 64] = uint256(stor2[_1774].field_0)
            mem[_1775 + 96] = uint256(ownerOf[_1774])
            mem[_1775 + 128] = balanceOf[_1774]
            mem[_1775 + 160] = uint256(stor5[_1774].field_0)
            mem[_1775 + 192] = uint256(approved[_1774])
            if uint8(stor7[_1774].field_0) > 5:
                revert with 0, 33
            mem[_1775 + 224] = uint8(stor7[_1774].field_0)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            mem[_1775 + 256] = uint8(stor7[_1774].field_8)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2186 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2186] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2474 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2474] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2474]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2474]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2474]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2474]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2187 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2187] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2475 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2475] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2475]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2475]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2475]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2475]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_1774].field_8) != 5:
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2246 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2246] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2534 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2534] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2534]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2534]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2534]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2534]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2247 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2247] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2535 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2535] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2535]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2535]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2535]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2535]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1771
            mem[32] = 23
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_1774]):
                revert with 0, 17
            if uint8(stor7[_1774].field_8) == 5:
                if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                    revert with 0, 17
                if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2244 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2244] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2532 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2532] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2532]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2532]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2532]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2532]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                revert with 0, 17
            if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                revert with 0, 17
            if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2245 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2245] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2533 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2533] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1774] * mem[_2533]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2533]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1774] * mem[_2533]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2533]) / 10000)
            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
            continue 
        if 31 >= stor[_1774].field_1 % 128:
            mem[_1779 + 32] = 256 * Mask(248, 0, stor[_1774].field_8)
            mem[_1775] = _1779
            mem[_1775 + 32] = uint256(stor1[_1774].field_0)
            mem[_1775 + 64] = uint256(stor2[_1774].field_0)
            mem[_1775 + 96] = uint256(ownerOf[_1774])
            mem[_1775 + 128] = balanceOf[_1774]
            mem[_1775 + 160] = uint256(stor5[_1774].field_0)
            mem[_1775 + 192] = uint256(approved[_1774])
            if uint8(stor7[_1774].field_0) > 5:
                revert with 0, 33
            mem[_1775 + 224] = uint8(stor7[_1774].field_0)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            mem[_1775 + 256] = uint8(stor7[_1774].field_8)
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1774].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2250 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2250] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2538 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2538] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2538]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2538]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2538]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2538]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2251 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2251] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2539 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2539] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2539]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2539]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2539]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2539]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_1774].field_8) != 5:
                if uint8(stor7[_1774].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1774]):
                    revert with 0, 17
                if uint8(stor7[_1774].field_8) == 5:
                    if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2312 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2312] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2600 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2600] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1774] * mem[_2600]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2600]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1774] * mem[_2600]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2600]) / 10000)
                    t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                    revert with 0, 17
                if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2313 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2313] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2601 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2601] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2601]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2601]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2601]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2601]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1771
            mem[32] = 23
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_1774]):
                revert with 0, 17
            if uint8(stor7[_1774].field_8) == 5:
                if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                    revert with 0, 17
                if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2310 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2310] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2598 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2598] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2598]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2598]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2598]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2598]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
                revert with 0, 17
            if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                revert with 0, 17
            if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2311 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2311] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2599 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2599] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1774] * mem[_2599]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2599]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1774] * mem[_2599]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2599]) / 10000)
            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
            continue 
        mem[0] = _1774
        mem[_1779 + 32] = uint256(stor[sha3(_1774)].field_0)
        u = _1779 + 32
        v = sha3(_1774)
        while _1779 + stor[_1774].field_1 % 128 > u:
            mem[u + 32] = uint256(stor1[v].field_0)
            u = u + 32
            v = v + 1
            continue 
        mem[_1775] = _1779
        mem[_1775 + 32] = uint256(stor1[_1774].field_0)
        mem[_1775 + 64] = uint256(stor2[_1774].field_0)
        mem[_1775 + 96] = uint256(ownerOf[_1774])
        mem[_1775 + 128] = balanceOf[_1774]
        mem[_1775 + 160] = uint256(stor5[_1774].field_0)
        mem[_1775 + 192] = uint256(approved[_1774])
        if uint8(stor7[_1774].field_0) > 5:
            revert with 0, 33
        mem[_1775 + 224] = uint8(stor7[_1774].field_0)
        if uint8(stor7[_1774].field_8) > 5:
            revert with 0, 33
        mem[_1775 + 256] = uint8(stor7[_1774].field_8)
        if uint8(stor7[_1774].field_8) > 5:
            revert with 0, 33
        if uint8(stor7[_1774].field_8) > 5:
            revert with 0, 33
        if uint8(stor7[_1774].field_8) == 4:
            if block.timestamp < uint256(ownerOf[_1774]):
                revert with 0, 17
            if uint8(stor7[_1774].field_8) == 5:
                if uint256(stor5[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1774].field_0):
                    revert with 0, 17
                if uint256(stor5[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2794 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2794] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2890 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2890] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2890]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2890]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2890]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2890]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1774].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1774].field_0):
                revert with 0, 17
            if uint256(stor2[_1774].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_7e953ee7:
                revert with 0, 17
            if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2795 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2795] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2891 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2891] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1774] * mem[_2891]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2891]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1774] * mem[_2891]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2891]) / 10000)
            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
            continue 
        if uint8(stor7[_1774].field_8) != 5:
            if uint8(stor7[_1774].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_1774]):
                revert with 0, 17
            if uint8(stor7[_1774].field_8) == 5:
                if uint256(stor5[_1774].field_0) and sub_f5597032 > -1 / uint256(stor5[_1774].field_0):
                    revert with 0, 17
                if uint256(stor5[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2822 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2822] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2918 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2918] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1774] * mem[_2918]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2918]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1774] * mem[_2918]) + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2918]) / 10000)
                t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1774].field_0) and sub_f5597032 > -1 / uint256(stor2[_1774].field_0):
                revert with 0, 17
            if uint256(stor2[_1774].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * sub_f5597032:
                revert with 0, 17
            if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2823 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2823] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2919 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2919] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1774] * mem[_2919]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2919]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1774] * mem[_2919]) + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2919]) / 10000)
            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * sub_f5597032) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * sub_f5597032) / 10000 / 24 * 3600)
            continue 
        mem[0] = _1771
        mem[32] = 23
        if uint8(stor7[_1774].field_8) > 5:
            revert with 0, 33
        if block.timestamp < uint256(ownerOf[_1774]):
            revert with 0, 17
        if uint8(stor7[_1774].field_8) == 5:
            if uint256(stor5[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1774].field_0):
                revert with 0, 17
            if uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                revert with 0, 17
            if balanceOf[_1774] > !((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2820 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2820] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2916 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2916] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1774] * mem[_2916]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2916]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1774] * mem[_2916]) + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2916]) / 10000)
            t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor5[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
            continue 
        if uint256(stor2[_1774].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1774].field_0):
            revert with 0, 17
        if uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1774]) > -1 / uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0):
            revert with 0, 17
        if balanceOf[_1774] > !((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        mem[mem[64] + 4] = _1771
        mem[mem[64] + 36] = 1
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args _1771, 1
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2821 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2821] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        mem[mem[64] + 4] = _1771
        mem[mem[64] + 36] = 0
        require ext_code.size(stor20)
        staticcall stor20.0x9a2754f4 with:
                gas gas_remaining wei
               args _1771, 0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2917 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2917] > -1 / balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
            revert with 0, 17
        if t > !(balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
            revert with 0, 17
        if s > !((balanceOf[_1774] * mem[_2917]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2917]) / 10000):
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s + ((balanceOf[_1774] * mem[_2917]) + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_2917]) / 10000)
        t = t + balanceOf[_1774] + ((block.timestamp * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1774]) * uint256(stor2[_1774].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
        continue 
    return t, s
}

function sub_8c46d91b(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 < 6
    require arg3 == bool(arg3)
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if not balanceOf[address(arg1)]:
        return 0
    mem[0] = address(arg1)
    mem[32] = 5
    mem[64] = (32 * uint256(stor5[address(arg1)].field_0)) + 128
    mem[96] = uint256(stor5[address(arg1)].field_0)
    if not uint256(stor5[address(arg1)].field_0):
        idx = 0
        s = 0
        t = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if idx >= mem[96]:
                revert with 0, 50
            _1195 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) > !sub_fb0ecf68:
                revert with 0, 17
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) + sub_fb0ecf68 > block.timestamp:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not arg3:
                if not stor22[msg.sender]:
                    revert with 0, 'Not allowed'
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                _1201 = sha3(mem[(32 * idx) + 128], 24)
                _1202 = mem[64]
                mem[64] = mem[64] + 288
                if bool(stor24[mem[(32 * idx) + 128]].field_0):
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _1209 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                    mem[_1209] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                    if bool(stor[_1201].field_0):
                        if bool(stor[_1201].field_0) == uint255(uint256(stor[_1201].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if not Mask(256, -1, uint256(stor[_1201].field_0)):
                            mem[_1202] = _1209
                            mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                            mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                            mem[_1202 + 96] = uint256(ownerOf[_1201])
                            mem[_1202 + 128] = balanceOf[_1201]
                            mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                            mem[_1202 + 192] = uint256(approved[_1201])
                            if uint8(stor7[_1201].field_0) > 5:
                                revert with 0, 33
                            mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1201].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1201]):
                                    revert with 0, 17
                                if uint8(stor7[_1201].field_8) == 5:
                                    if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1195
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1195, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1810 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1810] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1201] * mem[_1810]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1810]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1201] * mem[_1810]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1810]) / 10000)
                                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1811 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1811] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1811]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1811]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1811]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1811]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_1201].field_8) != 5:
                                if uint8(stor7[_1201].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1201]):
                                    revert with 0, 17
                                if uint8(stor7[_1201].field_8) == 5:
                                    if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1195
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1195, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1910 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1910] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1201] * mem[_1910]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1910]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1201] * mem[_1910]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1910]) / 10000)
                                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1911 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1911] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1911]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1911]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1911]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1911]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _1195
                            mem[32] = 23
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1908 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_1908] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1908]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1908]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1908]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1908]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1909 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_1909] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1909]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1909]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1909]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1909]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if 31 >= uint255(uint256(stor[_1201].field_0)) * 0.5:
                            mem[_1209 + 32] = 256 * Mask(248, 0, stor[_1201].field_8)
                            mem[_1202] = _1209
                            mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                            mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                            mem[_1202 + 96] = uint256(ownerOf[_1201])
                            mem[_1202 + 128] = balanceOf[_1201]
                            mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                            mem[_1202 + 192] = uint256(approved[_1201])
                            if uint8(stor7[_1201].field_0) > 5:
                                revert with 0, 33
                            mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1201].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1201]):
                                    revert with 0, 17
                                if uint8(stor7[_1201].field_8) == 5:
                                    if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1195
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1195, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1914 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1914] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1201] * mem[_1914]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1914]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1201] * mem[_1914]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1914]) / 10000)
                                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1915 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1915] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1915]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1915]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1915]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1915]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_1201].field_8) != 5:
                                if uint8(stor7[_1201].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1201]):
                                    revert with 0, 17
                                if uint8(stor7[_1201].field_8) == 5:
                                    if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1195
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1195, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2032 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2032] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1201] * mem[_2032]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2032]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1201] * mem[_2032]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2032]) / 10000)
                                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2033 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2033] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_2033]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2033]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_2033]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2033]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _1195
                            mem[32] = 23
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2030 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2030] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_2030]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2030]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_2030]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2030]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2031 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2031] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2031]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2031]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2031]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2031]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1201
                        mem[_1209 + 32] = uint256(stor[sha3(_1201)].field_0)
                        u = _1209 + 32
                        v = sha3(_1201)
                        while _1209 + (uint255(uint256(stor[_1201].field_0)) * 0.5) > u:
                            mem[u + 32] = uint256(stor1[v].field_0)
                            u = u + 32
                            v = v + 1
                            continue 
                        mem[_1202] = _1209
                        mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                        mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                        mem[_1202 + 96] = uint256(ownerOf[_1201])
                        mem[_1202 + 128] = balanceOf[_1201]
                        mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                        mem[_1202 + 192] = uint256(approved[_1201])
                        if uint8(stor7[_1201].field_0) > 5:
                            revert with 0, 33
                        mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2835 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2835] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_2835]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2835]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_2835]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2835]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2836 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2836] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2836]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2836]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2836]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2836]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1201].field_8) != 5:
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2991 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2991] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_2991]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2991]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_2991]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2991]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2992 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2992] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2992]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2992]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2992]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2992]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1195
                        mem[32] = 23
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2989 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2989] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2989]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2989]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2989]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2989]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2990] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2990]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2990]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2990]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2990]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if bool(stor[_1201].field_0) == stor[_1201].field_1 % 128 < 32:
                        revert with 0, 34
                    if not stor[_1201].field_1 % 128:
                        mem[_1202] = _1209
                        mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                        mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                        mem[_1202 + 96] = uint256(ownerOf[_1201])
                        mem[_1202 + 128] = balanceOf[_1201]
                        mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                        mem[_1202 + 192] = uint256(approved[_1201])
                        if uint8(stor7[_1201].field_0) > 5:
                            revert with 0, 33
                        mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1860 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1860] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1860]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1860]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1860]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1860]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1861] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1861]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1861]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1861]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1861]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1201].field_8) != 5:
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1964 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1964] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1964]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1964]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1964]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1964]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1965 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1965] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1965]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1965]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1965]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1965]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1195
                        mem[32] = 23
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1962 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_1962] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1962]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1962]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1962]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1962]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1963 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_1963] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_1963]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1963]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_1963]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1963]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= stor[_1201].field_1 % 128:
                        mem[_1209 + 32] = 256 * Mask(248, 0, stor[_1201].field_8)
                        mem[_1202] = _1209
                        mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                        mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                        mem[_1202 + 96] = uint256(ownerOf[_1201])
                        mem[_1202 + 128] = balanceOf[_1201]
                        mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                        mem[_1202 + 192] = uint256(approved[_1201])
                        if uint8(stor7[_1201].field_0) > 5:
                            revert with 0, 33
                        mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1968 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1968] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1968]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1968]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1968]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1968]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1969 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1969] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1969]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1969]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1969]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1969]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1201].field_8) != 5:
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2088 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2088] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_2088]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2088]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_2088]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2088]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2089 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2089] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2089]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2089]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2089]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2089]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1195
                        mem[32] = 23
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2086 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2086] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2086]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2086]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2086]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2086]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2087 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2087] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2087]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2087]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2087]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2087]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1201
                    mem[_1209 + 32] = uint256(stor[sha3(_1201)].field_0)
                    u = _1209 + 32
                    v = sha3(_1201)
                    while _1209 + stor[_1201].field_1 % 128 > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_1202] = _1209
                    mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                    mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                    mem[_1202 + 96] = uint256(ownerOf[_1201])
                    mem[_1202 + 128] = balanceOf[_1201]
                    mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                    mem[_1202 + 192] = uint256(approved[_1201])
                    if uint8(stor7[_1201].field_0) > 5:
                        revert with 0, 33
                    mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2841 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2841] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2841]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2841]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2841]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2841]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2842 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2842] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2842]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2842]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2842]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2842]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1201].field_8) != 5:
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2997 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2997] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2997]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2997]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2997]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2997]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2998 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2998] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2998]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2998]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2998]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2998]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1201]):
                        revert with 0, 17
                    if uint8(stor7[_1201].field_8) == 5:
                        if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2995 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2995] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2995]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2995]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2995]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2995]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2996] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1201] * mem[_2996]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2996]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1201] * mem[_2996]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2996]) / 10000)
                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                    revert with 0, 34
                _1210 = mem[64]
                mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                mem[_1210] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                if bool(stor[_1201].field_0):
                    if bool(stor[_1201].field_0) == uint255(uint256(stor[_1201].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_1201].field_0)):
                        mem[_1202] = _1210
                        mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                        mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                        mem[_1202 + 96] = uint256(ownerOf[_1201])
                        mem[_1202 + 128] = balanceOf[_1201]
                        mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                        mem[_1202 + 192] = uint256(approved[_1201])
                        if uint8(stor7[_1201].field_0) > 5:
                            revert with 0, 33
                        mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1868 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1868] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1868]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1868]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1868]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1868]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1869 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1869] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1869]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1869]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1869]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1869]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1201].field_8) != 5:
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1978 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1978] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1978]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1978]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1978]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1978]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1979 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_1979] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1979]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1979]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1979]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_1979]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1195
                        mem[32] = 23
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1976 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_1976] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1976]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1976]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1976]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1976]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1977 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_1977] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_1977]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1977]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_1977]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_1977]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_1201].field_0)) * 0.5:
                        mem[_1210 + 32] = 256 * Mask(248, 0, stor[_1201].field_8)
                        mem[_1202] = _1210
                        mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                        mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                        mem[_1202 + 96] = uint256(ownerOf[_1201])
                        mem[_1202 + 128] = balanceOf[_1201]
                        mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                        mem[_1202 + 192] = uint256(approved[_1201])
                        if uint8(stor7[_1201].field_0) > 5:
                            revert with 0, 33
                        mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1201].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1982 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1982] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_1982]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1982]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_1982]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1982]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1983 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1983] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1983]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1983]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1983]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1983]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1201].field_8) != 5:
                            if uint8(stor7[_1201].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1201]):
                                revert with 0, 17
                            if uint8(stor7[_1201].field_8) == 5:
                                if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2104 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2104] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1201] * mem[_2104]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2104]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1201] * mem[_2104]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2104]) / 10000)
                                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2105 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2105] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2105]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2105]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2105]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2105]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1195
                        mem[32] = 23
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2102 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2102] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2102]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2102]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2102]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2102]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2103 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2103] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2103]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2103]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2103]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2103]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1201
                    mem[_1210 + 32] = uint256(stor[sha3(_1201)].field_0)
                    u = _1210 + 32
                    v = sha3(_1201)
                    while _1210 + (uint255(uint256(stor[_1201].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_1202] = _1210
                    mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                    mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                    mem[_1202 + 96] = uint256(ownerOf[_1201])
                    mem[_1202 + 128] = balanceOf[_1201]
                    mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                    mem[_1202 + 192] = uint256(approved[_1201])
                    if uint8(stor7[_1201].field_0) > 5:
                        revert with 0, 33
                    mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2847 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2847] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2847]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2847]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2847]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2847]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2848] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2848]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2848]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2848]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2848]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1201].field_8) != 5:
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3003 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3003] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_3003]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3003]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_3003]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3003]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3004 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3004] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_3004]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3004]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_3004]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3004]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1201]):
                        revert with 0, 17
                    if uint8(stor7[_1201].field_8) == 5:
                        if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3001 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3001] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_3001]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3001]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_3001]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3001]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3002 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3002] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1201] * mem[_3002]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3002]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1201] * mem[_3002]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3002]) / 10000)
                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_1201].field_0) == stor[_1201].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_1201].field_1 % 128:
                    mem[_1202] = _1210
                    mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                    mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                    mem[_1202 + 96] = uint256(ownerOf[_1201])
                    mem[_1202 + 128] = balanceOf[_1201]
                    mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                    mem[_1202 + 192] = uint256(approved[_1201])
                    if uint8(stor7[_1201].field_0) > 5:
                        revert with 0, 33
                    mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1928 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1928] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_1928]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1928]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_1928]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1928]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1929 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1929] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_1929]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1929]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_1929]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1929]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1201].field_8) != 5:
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2038 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2038] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2038]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2038]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2038]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2038]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2039 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2039] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2039]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2039]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2039]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2039]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1201]):
                        revert with 0, 17
                    if uint8(stor7[_1201].field_8) == 5:
                        if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2036 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2036] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2036]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2036]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2036]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2036]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2037 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2037] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1201] * mem[_2037]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2037]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1201] * mem[_2037]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2037]) / 10000)
                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_1201].field_1 % 128:
                    mem[_1210 + 32] = 256 * Mask(248, 0, stor[_1201].field_8)
                    mem[_1202] = _1210
                    mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                    mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                    mem[_1202 + 96] = uint256(ownerOf[_1201])
                    mem[_1202 + 128] = balanceOf[_1201]
                    mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                    mem[_1202 + 192] = uint256(approved[_1201])
                    if uint8(stor7[_1201].field_0) > 5:
                        revert with 0, 33
                    mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1201].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2042 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2042] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2042]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2042]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2042]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2042]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2043 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2043] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2043]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2043]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2043]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2043]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1201].field_8) != 5:
                        if uint8(stor7[_1201].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1201]):
                            revert with 0, 17
                        if uint8(stor7[_1201].field_8) == 5:
                            if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2160] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1201] * mem[_2160]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2160]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1201] * mem[_2160]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2160]) / 10000)
                            t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2161 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2161] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2161]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2161]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2161]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2161]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1201]):
                        revert with 0, 17
                    if uint8(stor7[_1201].field_8) == 5:
                        if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2158 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2158] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2158]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2158]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2158]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2158]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2159 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2159] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1201] * mem[_2159]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2159]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1201] * mem[_2159]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2159]) / 10000)
                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1201
                mem[_1210 + 32] = uint256(stor[sha3(_1201)].field_0)
                u = _1210 + 32
                v = sha3(_1201)
                while _1210 + stor[_1201].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_1202] = _1210
                mem[_1202 + 32] = uint256(stor1[_1201].field_0)
                mem[_1202 + 64] = uint256(stor2[_1201].field_0)
                mem[_1202 + 96] = uint256(ownerOf[_1201])
                mem[_1202 + 128] = balanceOf[_1201]
                mem[_1202 + 160] = uint256(stor5[_1201].field_0)
                mem[_1202 + 192] = uint256(approved[_1201])
                if uint8(stor7[_1201].field_0) > 5:
                    revert with 0, 33
                mem[_1202 + 224] = uint8(stor7[_1201].field_0)
                if uint8(stor7[_1201].field_8) > 5:
                    revert with 0, 33
                mem[_1202 + 256] = uint8(stor7[_1201].field_8)
                if uint8(stor7[_1201].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1201].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1201].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1201]):
                        revert with 0, 17
                    if uint8(stor7[_1201].field_8) == 5:
                        if uint256(stor5[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2853 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2853] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_2853]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2853]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_2853]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2853]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1201].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1201].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1201].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2854 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2854] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1201] * mem[_2854]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2854]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1201] * mem[_2854]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2854]) / 10000)
                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1201].field_8) != 5:
                    if uint8(stor7[_1201].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1201]):
                        revert with 0, 17
                    if uint8(stor7[_1201].field_8) == 5:
                        if uint256(stor5[_1201].field_0) and sub_f5597032 > -1 / uint256(stor5[_1201].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3009 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3009] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1201] * mem[_3009]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3009]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1201] * mem[_3009]) + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3009]) / 10000)
                        t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1201].field_0) and sub_f5597032 > -1 / uint256(stor2[_1201].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1201].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3010] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1201] * mem[_3010]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3010]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1201] * mem[_3010]) + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3010]) / 10000)
                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * sub_f5597032) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1195
                mem[32] = 23
                if uint8(stor7[_1201].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1201]):
                    revert with 0, 17
                if uint8(stor7[_1201].field_8) == 5:
                    if uint256(stor5[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1201].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1201] > !((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3007 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3007] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1201] * mem[_3007]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3007]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1201] * mem[_3007]) + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3007]) / 10000)
                    t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor5[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1201].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1201].field_0):
                    revert with 0, 17
                if uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1201]) > -1 / uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                    revert with 0, 17
                if balanceOf[_1201] > !((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3008 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3008] > -1 / balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1201] * mem[_3008]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3008]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1201] * mem[_3008]) + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3008]) / 10000)
                t = t + balanceOf[_1201] + ((block.timestamp * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1201]) * uint256(stor2[_1201].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                continue 
            if arg2 > 5:
                revert with 0, 33
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) > 5:
                revert with 0, 33
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) != arg2:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not stor22[msg.sender]:
                revert with 0, 'Not allowed'
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            _1206 = sha3(mem[(32 * idx) + 128], 24)
            _1207 = mem[64]
            mem[64] = mem[64] + 288
            if bool(stor24[mem[(32 * idx) + 128]].field_0):
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                _1212 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                mem[_1212] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                if bool(stor[_1206].field_0):
                    if bool(stor[_1206].field_0) == uint255(uint256(stor[_1206].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_1206].field_0)):
                        mem[_1207] = _1212
                        mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                        mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                        mem[_1207 + 96] = uint256(ownerOf[_1206])
                        mem[_1207 + 128] = balanceOf[_1206]
                        mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                        mem[_1207 + 192] = uint256(approved[_1206])
                        if uint8(stor7[_1206].field_0) > 5:
                            revert with 0, 33
                        mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1206].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1206]):
                                revert with 0, 17
                            if uint8(stor7[_1206].field_8) == 5:
                                if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1992 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1992] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1206] * mem[_1992]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1992]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1206] * mem[_1992]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1992]) / 10000)
                                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1993 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_1993] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_1993]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1993]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_1993]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_1993]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1206].field_8) != 5:
                            if uint8(stor7[_1206].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1206]):
                                revert with 0, 17
                            if uint8(stor7[_1206].field_8) == 5:
                                if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2110 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2110] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1206] * mem[_2110]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2110]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1206] * mem[_2110]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2110]) / 10000)
                                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2111 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2111] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2111]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2111]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2111]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2111]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1195
                        mem[32] = 23
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2108 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2108] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2108]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2108]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2108]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2108]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2109 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2109] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2109]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2109]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2109]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2109]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_1206].field_0)) * 0.5:
                        mem[_1212 + 32] = 256 * Mask(248, 0, stor[_1206].field_8)
                        mem[_1207] = _1212
                        mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                        mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                        mem[_1207 + 96] = uint256(ownerOf[_1206])
                        mem[_1207 + 128] = balanceOf[_1206]
                        mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                        mem[_1207 + 192] = uint256(approved[_1206])
                        if uint8(stor7[_1206].field_0) > 5:
                            revert with 0, 33
                        mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1206].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1206]):
                                revert with 0, 17
                            if uint8(stor7[_1206].field_8) == 5:
                                if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2114 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2114] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1206] * mem[_2114]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2114]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1206] * mem[_2114]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2114]) / 10000)
                                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2115 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2115] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2115]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2115]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2115]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2115]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1206].field_8) != 5:
                            if uint8(stor7[_1206].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1206]):
                                revert with 0, 17
                            if uint8(stor7[_1206].field_8) == 5:
                                if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1195
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1195, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2228 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2228] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1206] * mem[_2228]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2228]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1206] * mem[_2228]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2228]) / 10000)
                                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2229] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2229]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2229]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2229]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2229]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1195
                        mem[32] = 23
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2226 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2226] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2226]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2226]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2226]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2226]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2227 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2227] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2227]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2227]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2227]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2227]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1206
                    mem[_1212 + 32] = uint256(stor[sha3(_1206)].field_0)
                    u = _1212 + 32
                    v = sha3(_1206)
                    while _1212 + (uint255(uint256(stor[_1206].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_1207] = _1212
                    mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                    mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                    mem[_1207 + 96] = uint256(ownerOf[_1206])
                    mem[_1207 + 128] = balanceOf[_1206]
                    mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                    mem[_1207 + 192] = uint256(approved[_1206])
                    if uint8(stor7[_1206].field_0) > 5:
                        revert with 0, 33
                    mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2859 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2859] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2859]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2859]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2859]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2859]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2860 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2860] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2860]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2860]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2860]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2860]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1206].field_8) != 5:
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3015 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3015] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_3015]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3015]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_3015]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3015]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3016 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3016] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_3016]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3016]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_3016]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3016]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3013 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3013] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_3013]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3013]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_3013]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3013]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3014 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3014] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_3014]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3014]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_3014]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3014]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_1206].field_0) == stor[_1206].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_1206].field_1 % 128:
                    mem[_1207] = _1212
                    mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                    mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                    mem[_1207 + 96] = uint256(ownerOf[_1206])
                    mem[_1207 + 128] = balanceOf[_1206]
                    mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                    mem[_1207 + 192] = uint256(approved[_1206])
                    if uint8(stor7[_1206].field_0) > 5:
                        revert with 0, 33
                    mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2052 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2052] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2052]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2052]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2052]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2052]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2053] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2053]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2053]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2053]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2053]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1206].field_8) != 5:
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2166 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2166] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2166]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2166]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2166]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2166]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2167 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2167] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2167]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2167]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2167]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2167]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2164 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2164] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2164]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2164]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2164]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2164]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2165 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2165] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2165]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2165]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2165]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2165]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_1206].field_1 % 128:
                    mem[_1212 + 32] = 256 * Mask(248, 0, stor[_1206].field_8)
                    mem[_1207] = _1212
                    mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                    mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                    mem[_1207 + 96] = uint256(ownerOf[_1206])
                    mem[_1207 + 128] = balanceOf[_1206]
                    mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                    mem[_1207 + 192] = uint256(approved[_1206])
                    if uint8(stor7[_1206].field_0) > 5:
                        revert with 0, 33
                    mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2170 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2170] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2170]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2170]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2170]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2170]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2171 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2171] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2171]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2171]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2171]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2171]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1206].field_8) != 5:
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2272 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2272] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2272]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2272]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2272]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2272]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2273 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2273] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2273]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2273]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2273]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2273]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2270 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2270] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2270]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2270]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2270]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2270]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2271] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2271]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2271]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2271]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2271]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1206
                mem[_1212 + 32] = uint256(stor[sha3(_1206)].field_0)
                u = _1212 + 32
                v = sha3(_1206)
                while _1212 + stor[_1206].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_1207] = _1212
                mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                mem[_1207 + 96] = uint256(ownerOf[_1206])
                mem[_1207 + 128] = balanceOf[_1206]
                mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                mem[_1207 + 192] = uint256(approved[_1206])
                if uint8(stor7[_1206].field_0) > 5:
                    revert with 0, 33
                mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2865 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2865] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2865]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2865]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2865]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2865]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2866 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2866] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2866]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2866]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2866]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2866]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1206].field_8) != 5:
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3021 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3021] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_3021]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3021]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_3021]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3021]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3022 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3022] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_3022]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3022]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_3022]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3022]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1195
                mem[32] = 23
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1206]):
                    revert with 0, 17
                if uint8(stor7[_1206].field_8) == 5:
                    if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3019 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3019] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_3019]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3019]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_3019]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3019]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                    revert with 0, 17
                if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                    revert with 0, 17
                if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3020 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3020] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1206] * mem[_3020]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3020]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1206] * mem[_3020]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3020]) / 10000)
                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                revert with 0, 34
            _1213 = mem[64]
            mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
            mem[_1213] = stor24[mem[(32 * idx) + 128]].field_1 % 128
            if bool(stor[_1206].field_0):
                if bool(stor[_1206].field_0) == uint255(uint256(stor[_1206].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if not Mask(256, -1, uint256(stor[_1206].field_0)):
                    mem[_1207] = _1213
                    mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                    mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                    mem[_1207 + 96] = uint256(ownerOf[_1206])
                    mem[_1207 + 128] = balanceOf[_1206]
                    mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                    mem[_1207 + 192] = uint256(approved[_1206])
                    if uint8(stor7[_1206].field_0) > 5:
                        revert with 0, 33
                    mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2060 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2060] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2060]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2060]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2060]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2060]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2061 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2061] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2061]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2061]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2061]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2061]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1206].field_8) != 5:
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2180 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2180] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2180]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2180]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2180]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2180]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2181 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2181] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2181]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2181]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2181]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2181]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2178] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2178]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2178]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2178]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2178]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2179 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2179] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2179]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2179]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2179]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2179]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= uint255(uint256(stor[_1206].field_0)) * 0.5:
                    mem[_1213 + 32] = 256 * Mask(248, 0, stor[_1206].field_8)
                    mem[_1207] = _1213
                    mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                    mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                    mem[_1207 + 96] = uint256(ownerOf[_1206])
                    mem[_1207 + 128] = balanceOf[_1206]
                    mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                    mem[_1207 + 192] = uint256(approved[_1206])
                    if uint8(stor7[_1206].field_0) > 5:
                        revert with 0, 33
                    mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1206].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2184] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2184]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2184]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2184]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2184]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2185] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2185]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2185]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2185]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2185]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1206].field_8) != 5:
                        if uint8(stor7[_1206].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1206]):
                            revert with 0, 17
                        if uint8(stor7[_1206].field_8) == 5:
                            if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1195
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1195, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2288 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2288] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1206] * mem[_2288]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2288]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1206] * mem[_2288]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2288]) / 10000)
                            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2289 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2289] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2289]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2289]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2289]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2289]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1195
                    mem[32] = 23
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2286 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2286] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2286]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2286]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2286]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2286]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2287 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2287] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2287]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2287]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2287]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2287]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1206
                mem[_1213 + 32] = uint256(stor[sha3(_1206)].field_0)
                u = _1213 + 32
                v = sha3(_1206)
                while _1213 + (uint255(uint256(stor[_1206].field_0)) * 0.5) > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_1207] = _1213
                mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                mem[_1207 + 96] = uint256(ownerOf[_1206])
                mem[_1207 + 128] = balanceOf[_1206]
                mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                mem[_1207 + 192] = uint256(approved[_1206])
                if uint8(stor7[_1206].field_0) > 5:
                    revert with 0, 33
                mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2871 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2871] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2871]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2871]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2871]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2871]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2872 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2872] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2872]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2872]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2872]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2872]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1206].field_8) != 5:
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3027 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3027] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_3027]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3027]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_3027]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3027]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3028 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3028] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_3028]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3028]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_3028]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3028]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1195
                mem[32] = 23
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1206]):
                    revert with 0, 17
                if uint8(stor7[_1206].field_8) == 5:
                    if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3025 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3025] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_3025]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3025]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_3025]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3025]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                    revert with 0, 17
                if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                    revert with 0, 17
                if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3026 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3026] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1206] * mem[_3026]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3026]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1206] * mem[_3026]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3026]) / 10000)
                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor[_1206].field_0) == stor[_1206].field_1 % 128 < 32:
                revert with 0, 34
            if not stor[_1206].field_1 % 128:
                mem[_1207] = _1213
                mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                mem[_1207 + 96] = uint256(ownerOf[_1206])
                mem[_1207 + 128] = balanceOf[_1206]
                mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                mem[_1207 + 192] = uint256(approved[_1206])
                if uint8(stor7[_1206].field_0) > 5:
                    revert with 0, 33
                mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2128 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2128] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2128]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2128]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2128]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2128]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2129 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2129] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2129]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2129]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2129]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2129]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1206].field_8) != 5:
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2234 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2234] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2234]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2234]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2234]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2234]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2235 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2235] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2235]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2235]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2235]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2235]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1195
                mem[32] = 23
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1206]):
                    revert with 0, 17
                if uint8(stor7[_1206].field_8) == 5:
                    if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2232 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2232] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2232]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2232]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2232]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2232]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                    revert with 0, 17
                if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                    revert with 0, 17
                if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2233 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2233] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1206] * mem[_2233]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2233]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1206] * mem[_2233]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2233]) / 10000)
                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                continue 
            if 31 >= stor[_1206].field_1 % 128:
                mem[_1213 + 32] = 256 * Mask(248, 0, stor[_1206].field_8)
                mem[_1207] = _1213
                mem[_1207 + 32] = uint256(stor1[_1206].field_0)
                mem[_1207 + 64] = uint256(stor2[_1206].field_0)
                mem[_1207 + 96] = uint256(ownerOf[_1206])
                mem[_1207 + 128] = balanceOf[_1206]
                mem[_1207 + 160] = uint256(stor5[_1206].field_0)
                mem[_1207 + 192] = uint256(approved[_1206])
                if uint8(stor7[_1206].field_0) > 5:
                    revert with 0, 33
                mem[_1207 + 224] = uint8(stor7[_1206].field_0)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                mem[_1207 + 256] = uint8(stor7[_1206].field_8)
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1206].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2238 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2238] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2238]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2238]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2238]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2238]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2239 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2239] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2239]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2239]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2239]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2239]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1206].field_8) != 5:
                    if uint8(stor7[_1206].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1206]):
                        revert with 0, 17
                    if uint8(stor7[_1206].field_8) == 5:
                        if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1195
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1195, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2322 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2322] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1206] * mem[_2322]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2322]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1206] * mem[_2322]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2322]) / 10000)
                        t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2323 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2323] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2323]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2323]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2323]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_2323]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1195
                mem[32] = 23
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1206]):
                    revert with 0, 17
                if uint8(stor7[_1206].field_8) == 5:
                    if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2320 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2320] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2320]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2320]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2320]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2320]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                    revert with 0, 17
                if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                    revert with 0, 17
                if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2321 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_2321] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1206] * mem[_2321]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2321]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1206] * mem[_2321]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_2321]) / 10000)
                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1206
            mem[_1213 + 32] = uint256(stor[sha3(_1206)].field_0)
            u = _1213 + 32
            v = sha3(_1206)
            while _1213 + stor[_1206].field_1 % 128 > u:
                mem[u + 32] = uint256(stor1[v].field_0)
                u = u + 32
                v = v + 1
                continue 
            mem[_1207] = _1213
            mem[_1207 + 32] = uint256(stor1[_1206].field_0)
            mem[_1207 + 64] = uint256(stor2[_1206].field_0)
            mem[_1207 + 96] = uint256(ownerOf[_1206])
            mem[_1207 + 128] = balanceOf[_1206]
            mem[_1207 + 160] = uint256(stor5[_1206].field_0)
            mem[_1207 + 192] = uint256(approved[_1206])
            if uint8(stor7[_1206].field_0) > 5:
                revert with 0, 33
            mem[_1207 + 224] = uint8(stor7[_1206].field_0)
            if uint8(stor7[_1206].field_8) > 5:
                revert with 0, 33
            mem[_1207 + 256] = uint8(stor7[_1206].field_8)
            if uint8(stor7[_1206].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1206].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1206].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_1206]):
                    revert with 0, 17
                if uint8(stor7[_1206].field_8) == 5:
                    if uint256(stor5[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2877 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2877] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_2877]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2877]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_2877]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2877]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1206].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1206].field_0):
                    revert with 0, 17
                if uint256(stor2[_1206].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2878 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2878] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1206] * mem[_2878]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2878]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1206] * mem[_2878]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_2878]) / 10000)
                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_1206].field_8) != 5:
                if uint8(stor7[_1206].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1206]):
                    revert with 0, 17
                if uint8(stor7[_1206].field_8) == 5:
                    if uint256(stor5[_1206].field_0) and sub_f5597032 > -1 / uint256(stor5[_1206].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1195
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1195, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3033 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3033] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1206] * mem[_3033]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3033]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1206] * mem[_3033]) + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3033]) / 10000)
                    t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1206].field_0) and sub_f5597032 > -1 / uint256(stor2[_1206].field_0):
                    revert with 0, 17
                if uint256(stor2[_1206].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3034 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3034] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1206] * mem[_3034]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3034]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1206] * mem[_3034]) + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3034]) / 10000)
                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * sub_f5597032) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1195
            mem[32] = 23
            if uint8(stor7[_1206].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_1206]):
                revert with 0, 17
            if uint8(stor7[_1206].field_8) == 5:
                if uint256(stor5[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor5[_1206].field_0):
                    revert with 0, 17
                if uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                    revert with 0, 17
                if balanceOf[_1206] > !((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1195
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1195, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3031 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3031] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1206] * mem[_3031]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3031]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1206] * mem[_3031]) + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3031]) / 10000)
                t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor5[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1206].field_0) and uint256(sub_ded2abc3[_1195].field_0) > -1 / uint256(stor2[_1206].field_0):
                revert with 0, 17
            if uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0) and block.timestamp - uint256(ownerOf[_1206]) > -1 / uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0):
                revert with 0, 17
            if balanceOf[_1206] > !((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1195
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1195, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3032 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600) and mem[_3032] > -1 / balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1206] * mem[_3032]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3032]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1206] * mem[_3032]) + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600 * mem[_3032]) / 10000)
            t = t + balanceOf[_1206] + ((block.timestamp * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) - (uint256(ownerOf[_1206]) * uint256(stor2[_1206].field_0) * uint256(sub_ded2abc3[_1195].field_0)) / 10000 / 24 * 3600)
            continue 
    else:
        mem[0] = sha3(address(arg1), 5)
        mem[128] = uint256(stor5[address(arg1)].field_0)
        idx = 128
        s = 0
        while (32 * uint256(stor5[address(arg1)].field_0)) + 96 > idx:
            mem[idx + 32] = uint256(stor5[address(arg1)][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
        idx = 0
        s = 0
        t = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if idx >= mem[96]:
                revert with 0, 50
            _3941 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) > !sub_fb0ecf68:
                revert with 0, 17
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) + sub_fb0ecf68 > block.timestamp:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not arg3:
                if not stor22[msg.sender]:
                    revert with 0, 'Not allowed'
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                _3947 = sha3(mem[(32 * idx) + 128], 24)
                _3948 = mem[64]
                mem[64] = mem[64] + 288
                if bool(stor24[mem[(32 * idx) + 128]].field_0):
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _3955 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                    mem[_3955] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                    if bool(stor[_3947].field_0):
                        if bool(stor[_3947].field_0) == uint255(uint256(stor[_3947].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if not Mask(256, -1, uint256(stor[_3947].field_0)):
                            mem[_3948] = _3955
                            mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                            mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                            mem[_3948 + 96] = uint256(ownerOf[_3947])
                            mem[_3948 + 128] = balanceOf[_3947]
                            mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                            mem[_3948 + 192] = uint256(approved[_3947])
                            if uint8(stor7[_3947].field_0) > 5:
                                revert with 0, 33
                            mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_3947].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_3947]):
                                    revert with 0, 17
                                if uint8(stor7[_3947].field_8) == 5:
                                    if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _3941
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _3941, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4556 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4556] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_3947] * mem[_4556]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4556]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_3947] * mem[_4556]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4556]) / 10000)
                                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4557 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4557] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4557]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4557]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4557]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4557]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_3947].field_8) != 5:
                                if uint8(stor7[_3947].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_3947]):
                                    revert with 0, 17
                                if uint8(stor7[_3947].field_8) == 5:
                                    if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _3941
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _3941, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4656 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4656] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_3947] * mem[_4656]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4656]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_3947] * mem[_4656]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4656]) / 10000)
                                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4657 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4657] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4657]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4657]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4657]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4657]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _3941
                            mem[32] = 23
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4654 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4654] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4654]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4654]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4654]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4654]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4655 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4655] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4655]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4655]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4655]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4655]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if 31 >= uint255(uint256(stor[_3947].field_0)) * 0.5:
                            mem[_3955 + 32] = 256 * Mask(248, 0, stor[_3947].field_8)
                            mem[_3948] = _3955
                            mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                            mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                            mem[_3948 + 96] = uint256(ownerOf[_3947])
                            mem[_3948 + 128] = balanceOf[_3947]
                            mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                            mem[_3948 + 192] = uint256(approved[_3947])
                            if uint8(stor7[_3947].field_0) > 5:
                                revert with 0, 33
                            mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_3947].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_3947]):
                                    revert with 0, 17
                                if uint8(stor7[_3947].field_8) == 5:
                                    if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _3941
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _3941, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4660 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4660] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_3947] * mem[_4660]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4660]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_3947] * mem[_4660]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4660]) / 10000)
                                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4661 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4661] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4661]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4661]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4661]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4661]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_3947].field_8) != 5:
                                if uint8(stor7[_3947].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_3947]):
                                    revert with 0, 17
                                if uint8(stor7[_3947].field_8) == 5:
                                    if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _3941
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _3941, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _4778 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4778] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_3947] * mem[_4778]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4778]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_3947] * mem[_4778]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4778]) / 10000)
                                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4779 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4779] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4779]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4779]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4779]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4779]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _3941
                            mem[32] = 23
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4776 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4776] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4776]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4776]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4776]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4776]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4777 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4777] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4777]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4777]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4777]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4777]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3947
                        mem[_3955 + 32] = uint256(stor[sha3(_3947)].field_0)
                        u = _3955 + 32
                        v = sha3(_3947)
                        while _3955 + (uint255(uint256(stor[_3947].field_0)) * 0.5) > u:
                            mem[u + 32] = uint256(stor1[v].field_0)
                            u = u + 32
                            v = v + 1
                            continue 
                        mem[_3948] = _3955
                        mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                        mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                        mem[_3948 + 96] = uint256(ownerOf[_3947])
                        mem[_3948 + 128] = balanceOf[_3947]
                        mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                        mem[_3948 + 192] = uint256(approved[_3947])
                        if uint8(stor7[_3947].field_0) > 5:
                            revert with 0, 33
                        mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5376 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5376] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_5376]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5376]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_5376]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5376]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5377 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5377] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_5377]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5377]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_5377]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5377]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_3947].field_8) != 5:
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _5428 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5428] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_5428]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5428]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_5428]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5428]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5429 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5429] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_5429]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5429]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_5429]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5429]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3941
                        mem[32] = 23
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5426 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5426] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_5426]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5426]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_5426]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5426]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5427 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5427] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5427]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5427]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5427]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5427]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if bool(stor[_3947].field_0) == stor[_3947].field_1 % 128 < 32:
                        revert with 0, 34
                    if not stor[_3947].field_1 % 128:
                        mem[_3948] = _3955
                        mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                        mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                        mem[_3948 + 96] = uint256(ownerOf[_3947])
                        mem[_3948 + 128] = balanceOf[_3947]
                        mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                        mem[_3948 + 192] = uint256(approved[_3947])
                        if uint8(stor7[_3947].field_0) > 5:
                            revert with 0, 33
                        mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4606 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4606] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4606]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4606]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4606]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4606]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4607 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4607] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4607]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4607]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4607]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4607]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_3947].field_8) != 5:
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4710 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4710] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4710]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4710]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4710]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4710]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4711 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4711] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4711]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4711]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4711]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4711]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3941
                        mem[32] = 23
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4708 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4708] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4708]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4708]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4708]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4708]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4709] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4709]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4709]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4709]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4709]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= stor[_3947].field_1 % 128:
                        mem[_3955 + 32] = 256 * Mask(248, 0, stor[_3947].field_8)
                        mem[_3948] = _3955
                        mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                        mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                        mem[_3948 + 96] = uint256(ownerOf[_3947])
                        mem[_3948 + 128] = balanceOf[_3947]
                        mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                        mem[_3948 + 192] = uint256(approved[_3947])
                        if uint8(stor7[_3947].field_0) > 5:
                            revert with 0, 33
                        mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4714 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4714] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4714]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4714]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4714]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4714]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4715 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4715] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4715]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4715]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4715]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4715]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_3947].field_8) != 5:
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4834 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4834] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4834]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4834]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4834]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4834]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4835 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4835] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4835]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4835]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4835]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4835]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3941
                        mem[32] = 23
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4832] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4832]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4832]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4832]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4832]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4833] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4833]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4833]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4833]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4833]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3947
                    mem[_3955 + 32] = uint256(stor[sha3(_3947)].field_0)
                    u = _3955 + 32
                    v = sha3(_3947)
                    while _3955 + stor[_3947].field_1 % 128 > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_3948] = _3955
                    mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                    mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                    mem[_3948 + 96] = uint256(ownerOf[_3947])
                    mem[_3948 + 128] = balanceOf[_3947]
                    mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                    mem[_3948 + 192] = uint256(approved[_3947])
                    if uint8(stor7[_3947].field_0) > 5:
                        revert with 0, 33
                    mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5382 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5382] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_5382]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5382]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_5382]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5382]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5383 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5383] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5383]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5383]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5383]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5383]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3947].field_8) != 5:
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5434 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5434] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_5434]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5434]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_5434]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5434]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5435 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5435] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5435]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5435]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5435]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5435]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3947]):
                        revert with 0, 17
                    if uint8(stor7[_3947].field_8) == 5:
                        if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5432 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5432] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5432]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5432]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5432]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5432]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5433 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5433] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3947] * mem[_5433]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5433]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3947] * mem[_5433]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5433]) / 10000)
                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                    revert with 0, 34
                _3956 = mem[64]
                mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                mem[_3956] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                if bool(stor[_3947].field_0):
                    if bool(stor[_3947].field_0) == uint255(uint256(stor[_3947].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_3947].field_0)):
                        mem[_3948] = _3956
                        mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                        mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                        mem[_3948 + 96] = uint256(ownerOf[_3947])
                        mem[_3948 + 128] = balanceOf[_3947]
                        mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                        mem[_3948 + 192] = uint256(approved[_3947])
                        if uint8(stor7[_3947].field_0) > 5:
                            revert with 0, 33
                        mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4614 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4614] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4614]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4614]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4614]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4614]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4615 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4615] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4615]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4615]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4615]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4615]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_3947].field_8) != 5:
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4724 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4724] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4724]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4724]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4724]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4724]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4725 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4725] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4725]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4725]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4725]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4725]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3941
                        mem[32] = 23
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4722 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4722] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4722]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4722]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4722]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4722]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4723] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4723]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4723]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4723]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4723]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_3947].field_0)) * 0.5:
                        mem[_3956 + 32] = 256 * Mask(248, 0, stor[_3947].field_8)
                        mem[_3948] = _3956
                        mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                        mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                        mem[_3948 + 96] = uint256(ownerOf[_3947])
                        mem[_3948 + 128] = balanceOf[_3947]
                        mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                        mem[_3948 + 192] = uint256(approved[_3947])
                        if uint8(stor7[_3947].field_0) > 5:
                            revert with 0, 33
                        mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3947].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4728 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4728] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4728]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4728]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4728]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4728]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4729 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4729] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4729]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4729]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4729]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4729]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_3947].field_8) != 5:
                            if uint8(stor7[_3947].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3947]):
                                revert with 0, 17
                            if uint8(stor7[_3947].field_8) == 5:
                                if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4850 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4850] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3947] * mem[_4850]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4850]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3947] * mem[_4850]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4850]) / 10000)
                                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4851 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4851] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4851]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4851]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4851]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4851]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3941
                        mem[32] = 23
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4848 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4848] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4848]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4848]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4848]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4848]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4849 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4849] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4849]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4849]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4849]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4849]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3947
                    mem[_3956 + 32] = uint256(stor[sha3(_3947)].field_0)
                    u = _3956 + 32
                    v = sha3(_3947)
                    while _3956 + (uint255(uint256(stor[_3947].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_3948] = _3956
                    mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                    mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                    mem[_3948 + 96] = uint256(ownerOf[_3947])
                    mem[_3948 + 128] = balanceOf[_3947]
                    mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                    mem[_3948 + 192] = uint256(approved[_3947])
                    if uint8(stor7[_3947].field_0) > 5:
                        revert with 0, 33
                    mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5388 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5388] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_5388]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5388]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_5388]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5388]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5389 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5389] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5389]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5389]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5389]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5389]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3947].field_8) != 5:
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5440 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5440] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_5440]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5440]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_5440]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5440]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5441 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5441] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5441]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5441]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5441]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5441]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3947]):
                        revert with 0, 17
                    if uint8(stor7[_3947].field_8) == 5:
                        if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5438 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5438] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5438]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5438]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5438]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5438]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5439 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5439] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3947] * mem[_5439]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5439]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3947] * mem[_5439]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5439]) / 10000)
                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_3947].field_0) == stor[_3947].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_3947].field_1 % 128:
                    mem[_3948] = _3956
                    mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                    mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                    mem[_3948 + 96] = uint256(ownerOf[_3947])
                    mem[_3948 + 128] = balanceOf[_3947]
                    mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                    mem[_3948 + 192] = uint256(approved[_3947])
                    if uint8(stor7[_3947].field_0) > 5:
                        revert with 0, 33
                    mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4674 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4674] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4674]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4674]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4674]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4674]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4675] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4675]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4675]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4675]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4675]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3947].field_8) != 5:
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4784 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4784] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4784]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4784]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4784]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4784]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4785 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4785] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4785]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4785]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4785]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4785]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3947]):
                        revert with 0, 17
                    if uint8(stor7[_3947].field_8) == 5:
                        if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4782 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4782] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4782]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4782]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4782]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4782]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4783 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4783] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3947] * mem[_4783]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4783]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3947] * mem[_4783]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4783]) / 10000)
                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_3947].field_1 % 128:
                    mem[_3956 + 32] = 256 * Mask(248, 0, stor[_3947].field_8)
                    mem[_3948] = _3956
                    mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                    mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                    mem[_3948 + 96] = uint256(ownerOf[_3947])
                    mem[_3948 + 128] = balanceOf[_3947]
                    mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                    mem[_3948 + 192] = uint256(approved[_3947])
                    if uint8(stor7[_3947].field_0) > 5:
                        revert with 0, 33
                    mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3947].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4788 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4788] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4788]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4788]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4788]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4788]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4789 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4789] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4789]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4789]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4789]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4789]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3947].field_8) != 5:
                        if uint8(stor7[_3947].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3947]):
                            revert with 0, 17
                        if uint8(stor7[_3947].field_8) == 5:
                            if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4906 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4906] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3947] * mem[_4906]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4906]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3947] * mem[_4906]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4906]) / 10000)
                            t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4907 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4907] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4907]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4907]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4907]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4907]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3947]):
                        revert with 0, 17
                    if uint8(stor7[_3947].field_8) == 5:
                        if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4904 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4904] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_4904]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4904]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_4904]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4904]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4905 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4905] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3947] * mem[_4905]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4905]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3947] * mem[_4905]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4905]) / 10000)
                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3947
                mem[_3956 + 32] = uint256(stor[sha3(_3947)].field_0)
                u = _3956 + 32
                v = sha3(_3947)
                while _3956 + stor[_3947].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_3948] = _3956
                mem[_3948 + 32] = uint256(stor1[_3947].field_0)
                mem[_3948 + 64] = uint256(stor2[_3947].field_0)
                mem[_3948 + 96] = uint256(ownerOf[_3947])
                mem[_3948 + 128] = balanceOf[_3947]
                mem[_3948 + 160] = uint256(stor5[_3947].field_0)
                mem[_3948 + 192] = uint256(approved[_3947])
                if uint8(stor7[_3947].field_0) > 5:
                    revert with 0, 33
                mem[_3948 + 224] = uint8(stor7[_3947].field_0)
                if uint8(stor7[_3947].field_8) > 5:
                    revert with 0, 33
                mem[_3948 + 256] = uint8(stor7[_3947].field_8)
                if uint8(stor7[_3947].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3947].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3947].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_3947]):
                        revert with 0, 17
                    if uint8(stor7[_3947].field_8) == 5:
                        if uint256(stor5[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5394 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5394] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5394]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5394]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5394]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5394]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3947].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3947].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3947].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5395 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5395] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3947] * mem[_5395]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5395]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3947] * mem[_5395]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5395]) / 10000)
                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_3947].field_8) != 5:
                    if uint8(stor7[_3947].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3947]):
                        revert with 0, 17
                    if uint8(stor7[_3947].field_8) == 5:
                        if uint256(stor5[_3947].field_0) and sub_f5597032 > -1 / uint256(stor5[_3947].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5446 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5446] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3947] * mem[_5446]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5446]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3947] * mem[_5446]) + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5446]) / 10000)
                        t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3947].field_0) and sub_f5597032 > -1 / uint256(stor2[_3947].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3947].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5447 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5447] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3947] * mem[_5447]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5447]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3947] * mem[_5447]) + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5447]) / 10000)
                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * sub_f5597032) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3941
                mem[32] = 23
                if uint8(stor7[_3947].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_3947]):
                    revert with 0, 17
                if uint8(stor7[_3947].field_8) == 5:
                    if uint256(stor5[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3947].field_0):
                        revert with 0, 17
                    if uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3947] > !((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5444 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5444] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3947] * mem[_5444]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5444]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3947] * mem[_5444]) + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5444]) / 10000)
                    t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor5[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_3947].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3947].field_0):
                    revert with 0, 17
                if uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3947]) > -1 / uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                    revert with 0, 17
                if balanceOf[_3947] > !((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5445 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5445] > -1 / balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3947] * mem[_5445]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5445]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3947] * mem[_5445]) + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5445]) / 10000)
                t = t + balanceOf[_3947] + ((block.timestamp * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3947]) * uint256(stor2[_3947].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                continue 
            if arg2 > 5:
                revert with 0, 33
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) > 5:
                revert with 0, 33
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) != arg2:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not stor22[msg.sender]:
                revert with 0, 'Not allowed'
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            _3952 = sha3(mem[(32 * idx) + 128], 24)
            _3953 = mem[64]
            mem[64] = mem[64] + 288
            if bool(stor24[mem[(32 * idx) + 128]].field_0):
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                _3958 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                mem[_3958] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                if bool(stor[_3952].field_0):
                    if bool(stor[_3952].field_0) == uint255(uint256(stor[_3952].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_3952].field_0)):
                        mem[_3953] = _3958
                        mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                        mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                        mem[_3953 + 96] = uint256(ownerOf[_3952])
                        mem[_3953 + 128] = balanceOf[_3952]
                        mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                        mem[_3953 + 192] = uint256(approved[_3952])
                        if uint8(stor7[_3952].field_0) > 5:
                            revert with 0, 33
                        mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3952].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_3952]):
                                revert with 0, 17
                            if uint8(stor7[_3952].field_8) == 5:
                                if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4738] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3952] * mem[_4738]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4738]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3952] * mem[_4738]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4738]) / 10000)
                                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4739 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4739] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4739]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4739]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4739]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4739]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_3952].field_8) != 5:
                            if uint8(stor7[_3952].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3952]):
                                revert with 0, 17
                            if uint8(stor7[_3952].field_8) == 5:
                                if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4856 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4856] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3952] * mem[_4856]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4856]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3952] * mem[_4856]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4856]) / 10000)
                                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4857 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4857] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4857]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4857]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4857]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4857]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3941
                        mem[32] = 23
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4854] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4854]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4854]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4854]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4854]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4855 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4855] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4855]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4855]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4855]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4855]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_3952].field_0)) * 0.5:
                        mem[_3958 + 32] = 256 * Mask(248, 0, stor[_3952].field_8)
                        mem[_3953] = _3958
                        mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                        mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                        mem[_3953 + 96] = uint256(ownerOf[_3952])
                        mem[_3953 + 128] = balanceOf[_3952]
                        mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                        mem[_3953 + 192] = uint256(approved[_3952])
                        if uint8(stor7[_3952].field_0) > 5:
                            revert with 0, 33
                        mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_3952].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_3952]):
                                revert with 0, 17
                            if uint8(stor7[_3952].field_8) == 5:
                                if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4860 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4860] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3952] * mem[_4860]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4860]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3952] * mem[_4860]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4860]) / 10000)
                                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4861] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4861]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4861]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4861]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4861]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_3952].field_8) != 5:
                            if uint8(stor7[_3952].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_3952]):
                                revert with 0, 17
                            if uint8(stor7[_3952].field_8) == 5:
                                if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _3941
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _3941, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4974 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4974] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_3952] * mem[_4974]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4974]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_3952] * mem[_4974]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4974]) / 10000)
                                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4975 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4975] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4975]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4975]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4975]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4975]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _3941
                        mem[32] = 23
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4972 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4972] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4972]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4972]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4972]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4972]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4973 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4973] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4973]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4973]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4973]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4973]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3952
                    mem[_3958 + 32] = uint256(stor[sha3(_3952)].field_0)
                    u = _3958 + 32
                    v = sha3(_3952)
                    while _3958 + (uint255(uint256(stor[_3952].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_3953] = _3958
                    mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                    mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                    mem[_3953 + 96] = uint256(ownerOf[_3952])
                    mem[_3953 + 128] = balanceOf[_3952]
                    mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                    mem[_3953 + 192] = uint256(approved[_3952])
                    if uint8(stor7[_3952].field_0) > 5:
                        revert with 0, 33
                    mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5400 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5400] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_5400]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5400]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_5400]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5400]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5401 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5401] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5401]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5401]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5401]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5401]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3952].field_8) != 5:
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5452 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5452] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_5452]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5452]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_5452]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5452]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5453 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5453] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5453]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5453]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5453]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5453]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5450 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5450] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5450]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5450]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5450]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5450]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5451 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5451] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5451]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5451]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5451]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5451]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_3952].field_0) == stor[_3952].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_3952].field_1 % 128:
                    mem[_3953] = _3958
                    mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                    mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                    mem[_3953 + 96] = uint256(ownerOf[_3952])
                    mem[_3953 + 128] = balanceOf[_3952]
                    mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                    mem[_3953 + 192] = uint256(approved[_3952])
                    if uint8(stor7[_3952].field_0) > 5:
                        revert with 0, 33
                    mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4798 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4798] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4798]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4798]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4798]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4798]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4799 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4799] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4799]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4799]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4799]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4799]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3952].field_8) != 5:
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4912 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4912] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4912]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4912]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4912]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4912]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4913 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4913] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4913]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4913]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4913]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4913]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4910 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4910] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4910]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4910]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4910]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4910]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4911 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4911] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_4911]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4911]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_4911]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4911]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_3952].field_1 % 128:
                    mem[_3958 + 32] = 256 * Mask(248, 0, stor[_3952].field_8)
                    mem[_3953] = _3958
                    mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                    mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                    mem[_3953 + 96] = uint256(ownerOf[_3952])
                    mem[_3953 + 128] = balanceOf[_3952]
                    mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                    mem[_3953 + 192] = uint256(approved[_3952])
                    if uint8(stor7[_3952].field_0) > 5:
                        revert with 0, 33
                    mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4916 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4916] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4916]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4916]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4916]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4916]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4917 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4917] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4917]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4917]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4917]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4917]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3952].field_8) != 5:
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5018 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5018] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_5018]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5018]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_5018]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5018]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5019 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5019] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5019]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5019]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5019]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5019]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5016 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5016] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5016]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5016]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5016]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5016]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5017 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5017] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5017]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5017]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5017]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5017]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3952
                mem[_3958 + 32] = uint256(stor[sha3(_3952)].field_0)
                u = _3958 + 32
                v = sha3(_3952)
                while _3958 + stor[_3952].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_3953] = _3958
                mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                mem[_3953 + 96] = uint256(ownerOf[_3952])
                mem[_3953 + 128] = balanceOf[_3952]
                mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                mem[_3953 + 192] = uint256(approved[_3952])
                if uint8(stor7[_3952].field_0) > 5:
                    revert with 0, 33
                mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5406 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5406] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5406]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5406]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5406]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5406]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5407 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5407] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5407]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5407]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5407]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5407]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_3952].field_8) != 5:
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5458 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5458] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5458]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5458]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5458]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5458]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5459 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5459] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5459]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5459]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5459]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5459]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3941
                mem[32] = 23
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_3952]):
                    revert with 0, 17
                if uint8(stor7[_3952].field_8) == 5:
                    if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5456] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5456]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5456]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5456]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5456]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                    revert with 0, 17
                if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                    revert with 0, 17
                if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5457 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5457] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3952] * mem[_5457]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5457]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3952] * mem[_5457]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5457]) / 10000)
                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                revert with 0, 34
            _3959 = mem[64]
            mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
            mem[_3959] = stor24[mem[(32 * idx) + 128]].field_1 % 128
            if bool(stor[_3952].field_0):
                if bool(stor[_3952].field_0) == uint255(uint256(stor[_3952].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if not Mask(256, -1, uint256(stor[_3952].field_0)):
                    mem[_3953] = _3959
                    mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                    mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                    mem[_3953 + 96] = uint256(ownerOf[_3952])
                    mem[_3953 + 128] = balanceOf[_3952]
                    mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                    mem[_3953 + 192] = uint256(approved[_3952])
                    if uint8(stor7[_3952].field_0) > 5:
                        revert with 0, 33
                    mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4806 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4806] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4806]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4806]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4806]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4806]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4807 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4807] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4807]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4807]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4807]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4807]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3952].field_8) != 5:
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4926 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4926] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4926]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4926]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4926]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4926]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4927 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4927] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4927]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4927]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4927]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4927]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4924 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4924] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4924]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4924]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4924]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4924]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4925 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4925] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_4925]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4925]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_4925]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4925]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= uint255(uint256(stor[_3952].field_0)) * 0.5:
                    mem[_3959 + 32] = 256 * Mask(248, 0, stor[_3952].field_8)
                    mem[_3953] = _3959
                    mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                    mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                    mem[_3953 + 96] = uint256(ownerOf[_3952])
                    mem[_3953 + 128] = balanceOf[_3952]
                    mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                    mem[_3953 + 192] = uint256(approved[_3952])
                    if uint8(stor7[_3952].field_0) > 5:
                        revert with 0, 33
                    mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_3952].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4930 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4930] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_4930]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4930]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_4930]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4930]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4931 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4931] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4931]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4931]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4931]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4931]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_3952].field_8) != 5:
                        if uint8(stor7[_3952].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_3952]):
                            revert with 0, 17
                        if uint8(stor7[_3952].field_8) == 5:
                            if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                                revert with 0, 17
                            if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _3941
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _3941, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _5034 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5034] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_3952] * mem[_5034]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5034]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_3952] * mem[_5034]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5034]) / 10000)
                            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5035 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5035] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5035]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5035]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5035]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5035]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _3941
                    mem[32] = 23
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5032 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5032] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5032]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5032]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5032]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5032]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5033 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5033] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5033]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5033]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5033]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5033]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3952
                mem[_3959 + 32] = uint256(stor[sha3(_3952)].field_0)
                u = _3959 + 32
                v = sha3(_3952)
                while _3959 + (uint255(uint256(stor[_3952].field_0)) * 0.5) > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_3953] = _3959
                mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                mem[_3953 + 96] = uint256(ownerOf[_3952])
                mem[_3953 + 128] = balanceOf[_3952]
                mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                mem[_3953 + 192] = uint256(approved[_3952])
                if uint8(stor7[_3952].field_0) > 5:
                    revert with 0, 33
                mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5412 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5412] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5412]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5412]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5412]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5412]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5413 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5413] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5413]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5413]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5413]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5413]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_3952].field_8) != 5:
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5464 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5464] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5464]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5464]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5464]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5464]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5465 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5465] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5465]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5465]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5465]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5465]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3941
                mem[32] = 23
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_3952]):
                    revert with 0, 17
                if uint8(stor7[_3952].field_8) == 5:
                    if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5462 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5462] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5462]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5462]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5462]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5462]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                    revert with 0, 17
                if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                    revert with 0, 17
                if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5463 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5463] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3952] * mem[_5463]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5463]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3952] * mem[_5463]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5463]) / 10000)
                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor[_3952].field_0) == stor[_3952].field_1 % 128 < 32:
                revert with 0, 34
            if not stor[_3952].field_1 % 128:
                mem[_3953] = _3959
                mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                mem[_3953 + 96] = uint256(ownerOf[_3952])
                mem[_3953 + 128] = balanceOf[_3952]
                mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                mem[_3953 + 192] = uint256(approved[_3952])
                if uint8(stor7[_3952].field_0) > 5:
                    revert with 0, 33
                mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4874 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4874] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4874]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4874]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4874]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4874]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4875 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4875] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_4875]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4875]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_4875]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4875]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_3952].field_8) != 5:
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4980 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4980] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4980]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4980]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4980]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4980]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4981 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4981] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_4981]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4981]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_4981]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4981]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3941
                mem[32] = 23
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_3952]):
                    revert with 0, 17
                if uint8(stor7[_3952].field_8) == 5:
                    if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4978 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4978] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_4978]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4978]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_4978]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4978]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                    revert with 0, 17
                if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                    revert with 0, 17
                if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4979 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_4979] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3952] * mem[_4979]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4979]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3952] * mem[_4979]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_4979]) / 10000)
                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                continue 
            if 31 >= stor[_3952].field_1 % 128:
                mem[_3959 + 32] = 256 * Mask(248, 0, stor[_3952].field_8)
                mem[_3953] = _3959
                mem[_3953 + 32] = uint256(stor1[_3952].field_0)
                mem[_3953 + 64] = uint256(stor2[_3952].field_0)
                mem[_3953 + 96] = uint256(ownerOf[_3952])
                mem[_3953 + 128] = balanceOf[_3952]
                mem[_3953 + 160] = uint256(stor5[_3952].field_0)
                mem[_3953 + 192] = uint256(approved[_3952])
                if uint8(stor7[_3952].field_0) > 5:
                    revert with 0, 33
                mem[_3953 + 224] = uint8(stor7[_3952].field_0)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                mem[_3953 + 256] = uint8(stor7[_3952].field_8)
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_3952].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4984 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4984] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_4984]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4984]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_4984]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4984]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4985 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4985] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_4985]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4985]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_4985]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4985]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_3952].field_8) != 5:
                    if uint8(stor7[_3952].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_3952]):
                        revert with 0, 17
                    if uint8(stor7[_3952].field_8) == 5:
                        if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                            revert with 0, 17
                        if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _3941
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _3941, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _5068 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5068] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_3952] * mem[_5068]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5068]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_3952] * mem[_5068]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5068]) / 10000)
                        t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5069 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5069] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5069]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5069]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5069]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5069]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _3941
                mem[32] = 23
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_3952]):
                    revert with 0, 17
                if uint8(stor7[_3952].field_8) == 5:
                    if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5066 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5066] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5066]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5066]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5066]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5066]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                    revert with 0, 17
                if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                    revert with 0, 17
                if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5067 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5067] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3952] * mem[_5067]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5067]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3952] * mem[_5067]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5067]) / 10000)
                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                continue 
            mem[0] = _3952
            mem[_3959 + 32] = uint256(stor[sha3(_3952)].field_0)
            u = _3959 + 32
            v = sha3(_3952)
            while _3959 + stor[_3952].field_1 % 128 > u:
                mem[u + 32] = uint256(stor1[v].field_0)
                u = u + 32
                v = v + 1
                continue 
            mem[_3953] = _3959
            mem[_3953 + 32] = uint256(stor1[_3952].field_0)
            mem[_3953 + 64] = uint256(stor2[_3952].field_0)
            mem[_3953 + 96] = uint256(ownerOf[_3952])
            mem[_3953 + 128] = balanceOf[_3952]
            mem[_3953 + 160] = uint256(stor5[_3952].field_0)
            mem[_3953 + 192] = uint256(approved[_3952])
            if uint8(stor7[_3952].field_0) > 5:
                revert with 0, 33
            mem[_3953 + 224] = uint8(stor7[_3952].field_0)
            if uint8(stor7[_3952].field_8) > 5:
                revert with 0, 33
            mem[_3953 + 256] = uint8(stor7[_3952].field_8)
            if uint8(stor7[_3952].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_3952].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_3952].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_3952]):
                    revert with 0, 17
                if uint8(stor7[_3952].field_8) == 5:
                    if uint256(stor5[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor5[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5418 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5418] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5418]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5418]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5418]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5418]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_3952].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_3952].field_0):
                    revert with 0, 17
                if uint256(stor2[_3952].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5419 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_5419] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3952] * mem[_5419]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5419]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3952] * mem[_5419]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_5419]) / 10000)
                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_7e953ee7) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_3952].field_8) != 5:
                if uint8(stor7[_3952].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_3952]):
                    revert with 0, 17
                if uint8(stor7[_3952].field_8) == 5:
                    if uint256(stor5[_3952].field_0) and sub_f5597032 > -1 / uint256(stor5[_3952].field_0):
                        revert with 0, 17
                    if uint256(stor5[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _3941
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _3941, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5470 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5470] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_3952] * mem[_5470]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5470]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_3952] * mem[_5470]) + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5470]) / 10000)
                    t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_3952].field_0) and sub_f5597032 > -1 / uint256(stor2[_3952].field_0):
                    revert with 0, 17
                if uint256(stor2[_3952].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5471 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_5471] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3952] * mem[_5471]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5471]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3952] * mem[_5471]) + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_5471]) / 10000)
                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * sub_f5597032) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _3941
            mem[32] = 23
            if uint8(stor7[_3952].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_3952]):
                revert with 0, 17
            if uint8(stor7[_3952].field_8) == 5:
                if uint256(stor5[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor5[_3952].field_0):
                    revert with 0, 17
                if uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                    revert with 0, 17
                if balanceOf[_3952] > !((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _3941
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _3941, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5468 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5468] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_3952] * mem[_5468]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5468]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_3952] * mem[_5468]) + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5468]) / 10000)
                t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor5[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_3952].field_0) and uint256(sub_ded2abc3[_3941].field_0) > -1 / uint256(stor2[_3952].field_0):
                revert with 0, 17
            if uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0) and block.timestamp - uint256(ownerOf[_3952]) > -1 / uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0):
                revert with 0, 17
            if balanceOf[_3952] > !((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _3941
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _3941, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5469 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600) and mem[_5469] > -1 / balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_3952] * mem[_5469]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5469]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_3952] * mem[_5469]) + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600 * mem[_5469]) / 10000)
            t = t + balanceOf[_3952] + ((block.timestamp * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) - (uint256(ownerOf[_3952]) * uint256(stor2[_3952].field_0) * uint256(sub_ded2abc3[_3941].field_0)) / 10000 / 24 * 3600)
            continue 
    return t, s
}

function sub_287ddddd(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 < 6
    require arg3 == bool(arg3)
    if not stor22[msg.sender]:
        revert with 0, 'Not allowed'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if not balanceOf[address(arg1)]:
        return 0
    mem[0] = address(arg1)
    mem[32] = 5
    mem[64] = (32 * uint256(stor5[address(arg1)].field_0)) + 128
    mem[96] = uint256(stor5[address(arg1)].field_0)
    if not uint256(stor5[address(arg1)].field_0):
        idx = 0
        s = 0
        t = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if idx >= mem[96]:
                revert with 0, 50
            _1771 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) > !sub_fb0ecf68:
                revert with 0, 17
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) + sub_fb0ecf68 > block.timestamp:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not arg3:
                if not stor22[msg.sender]:
                    revert with 0, 'Not allowed'
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                _1777 = sha3(mem[(32 * idx) + 128], 24)
                _1778 = mem[64]
                mem[64] = mem[64] + 288
                if bool(stor24[mem[(32 * idx) + 128]].field_0):
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _1785 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                    mem[_1785] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                    if bool(stor[_1777].field_0):
                        if bool(stor[_1777].field_0) == uint255(uint256(stor[_1777].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if not Mask(256, -1, uint256(stor[_1777].field_0)):
                            mem[_1778] = _1785
                            mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                            mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                            mem[_1778 + 96] = uint256(ownerOf[_1777])
                            mem[_1778 + 128] = balanceOf[_1777]
                            mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                            mem[_1778 + 192] = uint256(approved[_1777])
                            if uint8(stor7[_1777].field_0) > 5:
                                revert with 0, 33
                            mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1777].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1777]):
                                    revert with 0, 17
                                if uint8(stor7[_1777].field_8) == 5:
                                    if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2386 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2386] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3000 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3000] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1777] * mem[_3000]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3000]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1777] * mem[_3000]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3000]) / 10000)
                                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2387 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2387] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3001 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3001] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3001]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3001]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3001]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3001]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_1777].field_8) != 5:
                                if uint8(stor7[_1777].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1777]):
                                    revert with 0, 17
                                if uint8(stor7[_1777].field_8) == 5:
                                    if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2486 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2486] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3074 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3074] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1777] * mem[_3074]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3074]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1777] * mem[_3074]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3074]) / 10000)
                                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2487 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2487] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3075 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3075] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3075]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3075]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3075]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3075]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _1771
                            mem[32] = 23
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2484 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2484] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3072 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3072] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3072]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3072]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3072]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3072]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2485 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2485] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3073 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3073] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3073]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3073]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3073]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3073]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if 31 >= uint255(uint256(stor[_1777].field_0)) * 0.5:
                            mem[_1785 + 32] = 256 * Mask(248, 0, stor[_1777].field_8)
                            mem[_1778] = _1785
                            mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                            mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                            mem[_1778 + 96] = uint256(ownerOf[_1777])
                            mem[_1778 + 128] = balanceOf[_1777]
                            mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                            mem[_1778 + 192] = uint256(approved[_1777])
                            if uint8(stor7[_1777].field_0) > 5:
                                revert with 0, 33
                            mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_1777].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_1777]):
                                    revert with 0, 17
                                if uint8(stor7[_1777].field_8) == 5:
                                    if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2490 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2490] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3078 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3078] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1777] * mem[_3078]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3078]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1777] * mem[_3078]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3078]) / 10000)
                                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2491 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2491] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3079 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3079] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3079]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3079]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3079]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3079]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_1777].field_8) != 5:
                                if uint8(stor7[_1777].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_1777]):
                                    revert with 0, 17
                                if uint8(stor7[_1777].field_8) == 5:
                                    if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _2608 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2608] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _1771
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _1771, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3184 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3184] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_1777] * mem[_3184]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3184]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_1777] * mem[_3184]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3184]) / 10000)
                                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2609 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2609] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3185 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3185] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3185]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3185]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3185]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3185]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _1771
                            mem[32] = 23
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2606 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2606] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3182 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3182] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3182]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3182]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3182]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3182]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2607 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2607] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3183 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3183] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3183]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3183]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3183]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3183]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1777
                        mem[_1785 + 32] = uint256(stor[sha3(_1777)].field_0)
                        u = _1785 + 32
                        v = sha3(_1777)
                        while _1785 + (uint255(uint256(stor[_1777].field_0)) * 0.5) > u:
                            mem[u + 32] = uint256(stor1[v].field_0)
                            u = u + 32
                            v = v + 1
                            continue 
                        mem[_1778] = _1785
                        mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                        mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                        mem[_1778 + 96] = uint256(ownerOf[_1777])
                        mem[_1778 + 128] = balanceOf[_1777]
                        mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                        mem[_1778 + 192] = uint256(approved[_1777])
                        if uint8(stor7[_1777].field_0) > 5:
                            revert with 0, 33
                        mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3939 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3939] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4449 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4449] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_4449]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4449]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_4449]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4449]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3940 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3940] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4450 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4450] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_4450]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4450]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_4450]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4450]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1777].field_8) != 5:
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4090 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4090] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _4537 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4537] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_4537]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4537]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_4537]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4537]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4091 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4091] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4538 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4538] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_4538]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4538]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_4538]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4538]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1771
                        mem[32] = 23
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4088] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4535 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4535] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_4535]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4535]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_4535]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4535]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4089 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4089] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4536 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4536] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4536]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4536]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4536]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4536]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if bool(stor[_1777].field_0) == stor[_1777].field_1 % 128 < 32:
                        revert with 0, 34
                    if not stor[_1777].field_1 % 128:
                        mem[_1778] = _1785
                        mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                        mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                        mem[_1778 + 96] = uint256(ownerOf[_1777])
                        mem[_1778 + 128] = balanceOf[_1777]
                        mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                        mem[_1778 + 192] = uint256(approved[_1777])
                        if uint8(stor7[_1777].field_0) > 5:
                            revert with 0, 33
                        mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2436 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2436] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3034 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3034] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3034]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3034]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3034]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3034]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2437 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2437] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3035 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3035] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3035]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3035]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3035]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3035]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1777].field_8) != 5:
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2540 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2540] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3120 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3120] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3120]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3120]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3120]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3120]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2541 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2541] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3121] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3121]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3121]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3121]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3121]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1771
                        mem[32] = 23
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2538 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2538] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3118 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3118] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3118]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3118]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3118]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3118]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2539 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2539] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3119 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3119] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3119]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3119]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3119]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3119]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= stor[_1777].field_1 % 128:
                        mem[_1785 + 32] = 256 * Mask(248, 0, stor[_1777].field_8)
                        mem[_1778] = _1785
                        mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                        mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                        mem[_1778 + 96] = uint256(ownerOf[_1777])
                        mem[_1778 + 128] = balanceOf[_1777]
                        mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                        mem[_1778 + 192] = uint256(approved[_1777])
                        if uint8(stor7[_1777].field_0) > 5:
                            revert with 0, 33
                        mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2544 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2544] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3124 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3124] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3124]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3124]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3124]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3124]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2545 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2545] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3125 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3125] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3125]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3125]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3125]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3125]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1777].field_8) != 5:
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2664 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2664] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3240 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3240] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3240]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3240]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3240]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3240]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2665 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2665] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3241 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3241] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3241]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3241]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3241]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3241]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1771
                        mem[32] = 23
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2662] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3238 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3238] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3238]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3238]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3238]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3238]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2663 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2663] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3239 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3239] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3239]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3239]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3239]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3239]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1777
                    mem[_1785 + 32] = uint256(stor[sha3(_1777)].field_0)
                    u = _1785 + 32
                    v = sha3(_1777)
                    while _1785 + stor[_1777].field_1 % 128 > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_1778] = _1785
                    mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                    mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                    mem[_1778 + 96] = uint256(ownerOf[_1777])
                    mem[_1778 + 128] = balanceOf[_1777]
                    mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                    mem[_1778 + 192] = uint256(approved[_1777])
                    if uint8(stor7[_1777].field_0) > 5:
                        revert with 0, 33
                    mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3945 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3945] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4455 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4455] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_4455]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4455]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_4455]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4455]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3946 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3946] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4456 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4456] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4456]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4456]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4456]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4456]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1777].field_8) != 5:
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4096 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4096] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4543 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4543] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_4543]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4543]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_4543]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4543]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4097 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4097] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4544 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4544] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4544]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4544]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4544]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4544]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1777]):
                        revert with 0, 17
                    if uint8(stor7[_1777].field_8) == 5:
                        if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4094 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4094] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4541 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4541] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4541]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4541]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4541]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4541]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4095 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4095] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4542 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4542] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1777] * mem[_4542]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4542]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1777] * mem[_4542]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4542]) / 10000)
                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                    revert with 0, 34
                _1786 = mem[64]
                mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                mem[_1786] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                if bool(stor[_1777].field_0):
                    if bool(stor[_1777].field_0) == uint255(uint256(stor[_1777].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_1777].field_0)):
                        mem[_1778] = _1786
                        mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                        mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                        mem[_1778 + 96] = uint256(ownerOf[_1777])
                        mem[_1778 + 128] = balanceOf[_1777]
                        mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                        mem[_1778 + 192] = uint256(approved[_1777])
                        if uint8(stor7[_1777].field_0) > 5:
                            revert with 0, 33
                        mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2444 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2444] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3042 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3042] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3042]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3042]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3042]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3042]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2445 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2445] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3043] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3043]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3043]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3043]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3043]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1777].field_8) != 5:
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2554 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2554] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3134 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3134] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3134]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3134]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3134]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3134]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2555 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2555] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3135 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3135] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3135]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3135]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3135]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3135]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1771
                        mem[32] = 23
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2552 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2552] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3132 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3132] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3132]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3132]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3132]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3132]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2553 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2553] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3133 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3133] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3133]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3133]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3133]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3133]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_1777].field_0)) * 0.5:
                        mem[_1786 + 32] = 256 * Mask(248, 0, stor[_1777].field_8)
                        mem[_1778] = _1786
                        mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                        mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                        mem[_1778 + 96] = uint256(ownerOf[_1777])
                        mem[_1778 + 128] = balanceOf[_1777]
                        mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                        mem[_1778 + 192] = uint256(approved[_1777])
                        if uint8(stor7[_1777].field_0) > 5:
                            revert with 0, 33
                        mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1777].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2558 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2558] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3138 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3138] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3138]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3138]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3138]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3138]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2559 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2559] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3139 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3139] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3139]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3139]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3139]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3139]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1777].field_8) != 5:
                            if uint8(stor7[_1777].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1777]):
                                revert with 0, 17
                            if uint8(stor7[_1777].field_8) == 5:
                                if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2680 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2680] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3256 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3256] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1777] * mem[_3256]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3256]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1777] * mem[_3256]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3256]) / 10000)
                                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2681 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2681] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3257] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3257]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3257]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3257]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3257]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1771
                        mem[32] = 23
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2678 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2678] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3254 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3254] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3254]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3254]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3254]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3254]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2679 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2679] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3255 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3255] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3255]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3255]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3255]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3255]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1777
                    mem[_1786 + 32] = uint256(stor[sha3(_1777)].field_0)
                    u = _1786 + 32
                    v = sha3(_1777)
                    while _1786 + (uint255(uint256(stor[_1777].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_1778] = _1786
                    mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                    mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                    mem[_1778 + 96] = uint256(ownerOf[_1777])
                    mem[_1778 + 128] = balanceOf[_1777]
                    mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                    mem[_1778 + 192] = uint256(approved[_1777])
                    if uint8(stor7[_1777].field_0) > 5:
                        revert with 0, 33
                    mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3951 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3951] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4461 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4461] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_4461]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4461]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_4461]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4461]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3952 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3952] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4462 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4462] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4462]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4462]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4462]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4462]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1777].field_8) != 5:
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4102 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4102] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4549 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4549] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_4549]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4549]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_4549]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4549]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4103 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4103] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4550 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4550] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4550]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4550]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4550]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4550]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1777]):
                        revert with 0, 17
                    if uint8(stor7[_1777].field_8) == 5:
                        if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4100 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4100] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4547 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4547] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4547]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4547]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4547]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4547]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4101 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4101] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4548 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4548] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1777] * mem[_4548]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4548]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1777] * mem[_4548]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4548]) / 10000)
                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_1777].field_0) == stor[_1777].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_1777].field_1 % 128:
                    mem[_1778] = _1786
                    mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                    mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                    mem[_1778 + 96] = uint256(ownerOf[_1777])
                    mem[_1778 + 128] = balanceOf[_1777]
                    mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                    mem[_1778 + 192] = uint256(approved[_1777])
                    if uint8(stor7[_1777].field_0) > 5:
                        revert with 0, 33
                    mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2504 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2504] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3092 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3092] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3092]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3092]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3092]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3092]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2505 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2505] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3093 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3093] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3093]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3093]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3093]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3093]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1777].field_8) != 5:
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2614 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2614] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3190 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3190] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3190]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3190]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3190]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3190]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2615 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2615] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3191 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3191] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3191]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3191]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3191]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3191]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1777]):
                        revert with 0, 17
                    if uint8(stor7[_1777].field_8) == 5:
                        if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2612] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3188 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3188] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3188]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3188]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3188]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3188]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2613 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2613] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3189 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3189] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1777] * mem[_3189]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3189]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1777] * mem[_3189]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3189]) / 10000)
                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_1777].field_1 % 128:
                    mem[_1786 + 32] = 256 * Mask(248, 0, stor[_1777].field_8)
                    mem[_1778] = _1786
                    mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                    mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                    mem[_1778 + 96] = uint256(ownerOf[_1777])
                    mem[_1778 + 128] = balanceOf[_1777]
                    mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                    mem[_1778 + 192] = uint256(approved[_1777])
                    if uint8(stor7[_1777].field_0) > 5:
                        revert with 0, 33
                    mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1777].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2618 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2618] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3194 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3194] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3194]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3194]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3194]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3194]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2619 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2619] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3195 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3195] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3195]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3195]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3195]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3195]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1777].field_8) != 5:
                        if uint8(stor7[_1777].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1777]):
                            revert with 0, 17
                        if uint8(stor7[_1777].field_8) == 5:
                            if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2736 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2736] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3312 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3312] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1777] * mem[_3312]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3312]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1777] * mem[_3312]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3312]) / 10000)
                            t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2737 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2737] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3313 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3313] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3313]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3313]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3313]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3313]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1777]):
                        revert with 0, 17
                    if uint8(stor7[_1777].field_8) == 5:
                        if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2734 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2734] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3310 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3310] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_3310]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3310]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_3310]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3310]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2735 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2735] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3311 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3311] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1777] * mem[_3311]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3311]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1777] * mem[_3311]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3311]) / 10000)
                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1777
                mem[_1786 + 32] = uint256(stor[sha3(_1777)].field_0)
                u = _1786 + 32
                v = sha3(_1777)
                while _1786 + stor[_1777].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_1778] = _1786
                mem[_1778 + 32] = uint256(stor1[_1777].field_0)
                mem[_1778 + 64] = uint256(stor2[_1777].field_0)
                mem[_1778 + 96] = uint256(ownerOf[_1777])
                mem[_1778 + 128] = balanceOf[_1777]
                mem[_1778 + 160] = uint256(stor5[_1777].field_0)
                mem[_1778 + 192] = uint256(approved[_1777])
                if uint8(stor7[_1777].field_0) > 5:
                    revert with 0, 33
                mem[_1778 + 224] = uint8(stor7[_1777].field_0)
                if uint8(stor7[_1777].field_8) > 5:
                    revert with 0, 33
                mem[_1778 + 256] = uint8(stor7[_1777].field_8)
                if uint8(stor7[_1777].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1777].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1777].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1777]):
                        revert with 0, 17
                    if uint8(stor7[_1777].field_8) == 5:
                        if uint256(stor5[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3957 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3957] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4467 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4467] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4467]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4467]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4467]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4467]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1777].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1777].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1777].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3958 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3958] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4468 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4468] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1777] * mem[_4468]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4468]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1777] * mem[_4468]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4468]) / 10000)
                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1777].field_8) != 5:
                    if uint8(stor7[_1777].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1777]):
                        revert with 0, 17
                    if uint8(stor7[_1777].field_8) == 5:
                        if uint256(stor5[_1777].field_0) and sub_f5597032 > -1 / uint256(stor5[_1777].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4108 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4108] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4555 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4555] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1777] * mem[_4555]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4555]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1777] * mem[_4555]) + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4555]) / 10000)
                        t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1777].field_0) and sub_f5597032 > -1 / uint256(stor2[_1777].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1777].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4109 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4109] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4556 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4556] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1777] * mem[_4556]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4556]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1777] * mem[_4556]) + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4556]) / 10000)
                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * sub_f5597032) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1777].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1777]):
                    revert with 0, 17
                if uint8(stor7[_1777].field_8) == 5:
                    if uint256(stor5[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1777].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1777] > !((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4106 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4106] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4553 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4553] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1777] * mem[_4553]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4553]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1777] * mem[_4553]) + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4553]) / 10000)
                    t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor5[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1777].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1777].field_0):
                    revert with 0, 17
                if uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1777]) > -1 / uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1777] > !((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4107 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4107] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4554 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4554] > -1 / balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1777] * mem[_4554]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4554]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1777] * mem[_4554]) + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4554]) / 10000)
                t = t + balanceOf[_1777] + ((block.timestamp * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1777]) * uint256(stor2[_1777].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if arg2 > 5:
                revert with 0, 33
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) > 5:
                revert with 0, 33
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) != arg2:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not stor22[msg.sender]:
                revert with 0, 'Not allowed'
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            _1782 = sha3(mem[(32 * idx) + 128], 24)
            _1783 = mem[64]
            mem[64] = mem[64] + 288
            if bool(stor24[mem[(32 * idx) + 128]].field_0):
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                _1788 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                mem[_1788] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                if bool(stor[_1782].field_0):
                    if bool(stor[_1782].field_0) == uint255(uint256(stor[_1782].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_1782].field_0)):
                        mem[_1783] = _1788
                        mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                        mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                        mem[_1783 + 96] = uint256(ownerOf[_1782])
                        mem[_1783 + 128] = balanceOf[_1782]
                        mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                        mem[_1783 + 192] = uint256(approved[_1782])
                        if uint8(stor7[_1782].field_0) > 5:
                            revert with 0, 33
                        mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1782].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1782]):
                                revert with 0, 17
                            if uint8(stor7[_1782].field_8) == 5:
                                if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2568 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2568] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3148 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3148] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1782] * mem[_3148]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3148]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1782] * mem[_3148]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3148]) / 10000)
                                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2569 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2569] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3149 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3149] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3149]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3149]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3149]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3149]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1782].field_8) != 5:
                            if uint8(stor7[_1782].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1782]):
                                revert with 0, 17
                            if uint8(stor7[_1782].field_8) == 5:
                                if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2686 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2686] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3262 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3262] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1782] * mem[_3262]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3262]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1782] * mem[_3262]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3262]) / 10000)
                                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2687 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2687] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3263 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3263] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3263]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3263]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3263]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3263]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1771
                        mem[32] = 23
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2684 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2684] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3260 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3260] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3260]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3260]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3260]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3260]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2685 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2685] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3261 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3261] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3261]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3261]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3261]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3261]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_1782].field_0)) * 0.5:
                        mem[_1788 + 32] = 256 * Mask(248, 0, stor[_1782].field_8)
                        mem[_1783] = _1788
                        mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                        mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                        mem[_1783 + 96] = uint256(ownerOf[_1782])
                        mem[_1783 + 128] = balanceOf[_1782]
                        mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                        mem[_1783 + 192] = uint256(approved[_1782])
                        if uint8(stor7[_1782].field_0) > 5:
                            revert with 0, 33
                        mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_1782].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_1782]):
                                revert with 0, 17
                            if uint8(stor7[_1782].field_8) == 5:
                                if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2690 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2690] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3266 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3266] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1782] * mem[_3266]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3266]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1782] * mem[_3266]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3266]) / 10000)
                                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2691 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2691] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3267 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3267] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3267]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3267]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3267]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3267]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_1782].field_8) != 5:
                            if uint8(stor7[_1782].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_1782]):
                                revert with 0, 17
                            if uint8(stor7[_1782].field_8) == 5:
                                if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _2804 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2804] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _1771
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _1771, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _3380 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3380] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_1782] * mem[_3380]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3380]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_1782] * mem[_3380]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3380]) / 10000)
                                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2805] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3381 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3381] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3381]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3381]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3381]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3381]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _1771
                        mem[32] = 23
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2802 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2802] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3378 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3378] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3378]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3378]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3378]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3378]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2803 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2803] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3379 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3379] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3379]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3379]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3379]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3379]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1782
                    mem[_1788 + 32] = uint256(stor[sha3(_1782)].field_0)
                    u = _1788 + 32
                    v = sha3(_1782)
                    while _1788 + (uint255(uint256(stor[_1782].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_1783] = _1788
                    mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                    mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                    mem[_1783 + 96] = uint256(ownerOf[_1782])
                    mem[_1783 + 128] = balanceOf[_1782]
                    mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                    mem[_1783 + 192] = uint256(approved[_1782])
                    if uint8(stor7[_1782].field_0) > 5:
                        revert with 0, 33
                    mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3963 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3963] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4473 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4473] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_4473]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4473]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_4473]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4473]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3964 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3964] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4474] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_4474]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4474]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_4474]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4474]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1782].field_8) != 5:
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4114 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4114] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4561 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4561] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_4561]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4561]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_4561]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4561]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4115 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4115] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4562 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4562] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_4562]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4562]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_4562]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4562]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4112 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4112] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4559 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4559] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_4559]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4559]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_4559]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4559]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4113 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4113] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4560 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4560] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4560]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4560]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4560]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4560]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_1782].field_0) == stor[_1782].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_1782].field_1 % 128:
                    mem[_1783] = _1788
                    mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                    mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                    mem[_1783 + 96] = uint256(ownerOf[_1782])
                    mem[_1783 + 128] = balanceOf[_1782]
                    mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                    mem[_1783 + 192] = uint256(approved[_1782])
                    if uint8(stor7[_1782].field_0) > 5:
                        revert with 0, 33
                    mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2628] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3204 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3204] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3204]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3204]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3204]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3204]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2629] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3205 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3205] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3205]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3205]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3205]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3205]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1782].field_8) != 5:
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2742 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2742] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3318 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3318] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3318]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3318]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3318]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3318]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2743 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2743] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3319 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3319] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3319]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3319]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3319]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3319]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2740 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2740] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3316 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3316] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3316]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3316]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3316]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3316]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2741 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2741] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3317 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3317] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3317]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3317]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3317]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3317]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_1782].field_1 % 128:
                    mem[_1788 + 32] = 256 * Mask(248, 0, stor[_1782].field_8)
                    mem[_1783] = _1788
                    mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                    mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                    mem[_1783 + 96] = uint256(ownerOf[_1782])
                    mem[_1783 + 128] = balanceOf[_1782]
                    mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                    mem[_1783 + 192] = uint256(approved[_1782])
                    if uint8(stor7[_1782].field_0) > 5:
                        revert with 0, 33
                    mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2746 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2746] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3322 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3322] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3322]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3322]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3322]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3322]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2747] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3323 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3323] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3323]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3323]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3323]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3323]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1782].field_8) != 5:
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2848 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2848] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3424 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3424] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3424]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3424]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3424]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3424]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2849 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2849] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3425] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3425]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3425]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3425]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3425]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2846 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2846] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3422 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3422] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3422]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3422]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3422]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3422]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2847 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2847] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3423 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3423] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3423]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3423]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3423]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3423]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1782
                mem[_1788 + 32] = uint256(stor[sha3(_1782)].field_0)
                u = _1788 + 32
                v = sha3(_1782)
                while _1788 + stor[_1782].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_1783] = _1788
                mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                mem[_1783 + 96] = uint256(ownerOf[_1782])
                mem[_1783 + 128] = balanceOf[_1782]
                mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                mem[_1783 + 192] = uint256(approved[_1782])
                if uint8(stor7[_1782].field_0) > 5:
                    revert with 0, 33
                mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3969 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3969] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4479 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4479] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_4479]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4479]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_4479]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4479]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3970 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3970] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4480 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4480] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4480]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4480]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4480]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4480]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1782].field_8) != 5:
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4120 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4120] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4567 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4567] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_4567]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4567]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_4567]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4567]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4121 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4121] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4568 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4568] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4568]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4568]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4568]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4568]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1782]):
                    revert with 0, 17
                if uint8(stor7[_1782].field_8) == 5:
                    if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4118 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4118] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4565 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4565] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4565]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4565]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4565]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4565]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                    revert with 0, 17
                if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4119 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4119] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4566 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4566] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1782] * mem[_4566]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4566]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1782] * mem[_4566]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4566]) / 10000)
                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                revert with 0, 34
            _1789 = mem[64]
            mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
            mem[_1789] = stor24[mem[(32 * idx) + 128]].field_1 % 128
            if bool(stor[_1782].field_0):
                if bool(stor[_1782].field_0) == uint255(uint256(stor[_1782].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if not Mask(256, -1, uint256(stor[_1782].field_0)):
                    mem[_1783] = _1789
                    mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                    mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                    mem[_1783 + 96] = uint256(ownerOf[_1782])
                    mem[_1783 + 128] = balanceOf[_1782]
                    mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                    mem[_1783 + 192] = uint256(approved[_1782])
                    if uint8(stor7[_1782].field_0) > 5:
                        revert with 0, 33
                    mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2636] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3212 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3212] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3212]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3212]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3212]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3212]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2637 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2637] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3213 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3213] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3213]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3213]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3213]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3213]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1782].field_8) != 5:
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2756 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2756] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3332 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3332] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3332]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3332]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3332]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3332]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2757 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2757] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3333 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3333] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3333]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3333]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3333]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3333]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2754 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2754] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3330 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3330] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3330]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3330]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3330]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3330]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2755 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2755] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3331 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3331] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3331]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3331]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3331]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3331]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= uint255(uint256(stor[_1782].field_0)) * 0.5:
                    mem[_1789 + 32] = 256 * Mask(248, 0, stor[_1782].field_8)
                    mem[_1783] = _1789
                    mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                    mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                    mem[_1783 + 96] = uint256(ownerOf[_1782])
                    mem[_1783 + 128] = balanceOf[_1782]
                    mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                    mem[_1783 + 192] = uint256(approved[_1782])
                    if uint8(stor7[_1782].field_0) > 5:
                        revert with 0, 33
                    mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_1782].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2760 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2760] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3336 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3336] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3336]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3336]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3336]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3336]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2761 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2761] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3337 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3337] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3337]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3337]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3337]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3337]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_1782].field_8) != 5:
                        if uint8(stor7[_1782].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_1782]):
                            revert with 0, 17
                        if uint8(stor7[_1782].field_8) == 5:
                            if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                                revert with 0, 17
                            if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2864 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2864] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _1771
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _1771, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3440 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3440] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_1782] * mem[_3440]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3440]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_1782] * mem[_3440]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3440]) / 10000)
                            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2865 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2865] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3441 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3441] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3441]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3441]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3441]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3441]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _1771
                    mem[32] = 23
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2862 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2862] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3438 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3438] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3438]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3438]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3438]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3438]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2863 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2863] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3439 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3439] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3439]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3439]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3439]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3439]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1782
                mem[_1789 + 32] = uint256(stor[sha3(_1782)].field_0)
                u = _1789 + 32
                v = sha3(_1782)
                while _1789 + (uint255(uint256(stor[_1782].field_0)) * 0.5) > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_1783] = _1789
                mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                mem[_1783 + 96] = uint256(ownerOf[_1782])
                mem[_1783 + 128] = balanceOf[_1782]
                mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                mem[_1783 + 192] = uint256(approved[_1782])
                if uint8(stor7[_1782].field_0) > 5:
                    revert with 0, 33
                mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3975 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3975] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4485 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4485] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_4485]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4485]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_4485]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4485]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3976 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3976] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4486 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4486] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4486]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4486]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4486]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4486]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1782].field_8) != 5:
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4126 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4126] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4573 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4573] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_4573]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4573]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_4573]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4573]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4127 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4127] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4574 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4574] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4574]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4574]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4574]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4574]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1782]):
                    revert with 0, 17
                if uint8(stor7[_1782].field_8) == 5:
                    if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4124 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4124] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4571 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4571] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4571]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4571]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4571]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4571]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                    revert with 0, 17
                if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4125 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4125] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4572 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4572] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1782] * mem[_4572]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4572]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1782] * mem[_4572]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4572]) / 10000)
                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor[_1782].field_0) == stor[_1782].field_1 % 128 < 32:
                revert with 0, 34
            if not stor[_1782].field_1 % 128:
                mem[_1783] = _1789
                mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                mem[_1783 + 96] = uint256(ownerOf[_1782])
                mem[_1783 + 128] = balanceOf[_1782]
                mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                mem[_1783 + 192] = uint256(approved[_1782])
                if uint8(stor7[_1782].field_0) > 5:
                    revert with 0, 33
                mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2704] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3280 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3280] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3280]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3280]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3280]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3280]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2705 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2705] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3281 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3281] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3281]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3281]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3281]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3281]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1782].field_8) != 5:
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2810 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2810] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3386 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3386] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3386]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3386]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3386]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3386]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2811 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2811] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3387 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3387] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3387]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3387]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3387]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3387]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1782]):
                    revert with 0, 17
                if uint8(stor7[_1782].field_8) == 5:
                    if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2808 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2808] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3384 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3384] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3384]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3384]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3384]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3384]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                    revert with 0, 17
                if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2809 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2809] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3385 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3385] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1782] * mem[_3385]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3385]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1782] * mem[_3385]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3385]) / 10000)
                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if 31 >= stor[_1782].field_1 % 128:
                mem[_1789 + 32] = 256 * Mask(248, 0, stor[_1782].field_8)
                mem[_1783] = _1789
                mem[_1783 + 32] = uint256(stor1[_1782].field_0)
                mem[_1783 + 64] = uint256(stor2[_1782].field_0)
                mem[_1783 + 96] = uint256(ownerOf[_1782])
                mem[_1783 + 128] = balanceOf[_1782]
                mem[_1783 + 160] = uint256(stor5[_1782].field_0)
                mem[_1783 + 192] = uint256(approved[_1782])
                if uint8(stor7[_1782].field_0) > 5:
                    revert with 0, 33
                mem[_1783 + 224] = uint8(stor7[_1782].field_0)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                mem[_1783 + 256] = uint8(stor7[_1782].field_8)
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_1782].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2814 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2814] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3390] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3390]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3390]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3390]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3390]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2815 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_2815] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3391 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3391] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3391]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3391]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3391]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_3391]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_1782].field_8) != 5:
                    if uint8(stor7[_1782].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_1782]):
                        revert with 0, 17
                    if uint8(stor7[_1782].field_8) == 5:
                        if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                            revert with 0, 17
                        if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2898 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2898] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _1771
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _1771, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3474] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_1782] * mem[_3474]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3474]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_1782] * mem[_3474]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3474]) / 10000)
                        t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2899 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_2899] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3475 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_3475] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3475]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3475]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3475]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_3475]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _1771
                mem[32] = 23
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1782]):
                    revert with 0, 17
                if uint8(stor7[_1782].field_8) == 5:
                    if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2896 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2896] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3472 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3472] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_3472]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3472]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_3472]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3472]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                    revert with 0, 17
                if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2897 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_2897] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3473 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_3473] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1782] * mem[_3473]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3473]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1782] * mem[_3473]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_3473]) / 10000)
                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1782
            mem[_1789 + 32] = uint256(stor[sha3(_1782)].field_0)
            u = _1789 + 32
            v = sha3(_1782)
            while _1789 + stor[_1782].field_1 % 128 > u:
                mem[u + 32] = uint256(stor1[v].field_0)
                u = u + 32
                v = v + 1
                continue 
            mem[_1783] = _1789
            mem[_1783 + 32] = uint256(stor1[_1782].field_0)
            mem[_1783 + 64] = uint256(stor2[_1782].field_0)
            mem[_1783 + 96] = uint256(ownerOf[_1782])
            mem[_1783 + 128] = balanceOf[_1782]
            mem[_1783 + 160] = uint256(stor5[_1782].field_0)
            mem[_1783 + 192] = uint256(approved[_1782])
            if uint8(stor7[_1782].field_0) > 5:
                revert with 0, 33
            mem[_1783 + 224] = uint8(stor7[_1782].field_0)
            if uint8(stor7[_1782].field_8) > 5:
                revert with 0, 33
            mem[_1783 + 256] = uint8(stor7[_1782].field_8)
            if uint8(stor7[_1782].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1782].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_1782].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_1782]):
                    revert with 0, 17
                if uint8(stor7[_1782].field_8) == 5:
                    if uint256(stor5[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3981 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3981] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4491 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4491] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4491]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4491]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4491]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4491]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1782].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_1782].field_0):
                    revert with 0, 17
                if uint256(stor2[_1782].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3982 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_3982] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4492 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_4492] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1782] * mem[_4492]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4492]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1782] * mem[_4492]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_4492]) / 10000)
                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_7e953ee7) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_1782].field_8) != 5:
                if uint8(stor7[_1782].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_1782]):
                    revert with 0, 17
                if uint8(stor7[_1782].field_8) == 5:
                    if uint256(stor5[_1782].field_0) and sub_f5597032 > -1 / uint256(stor5[_1782].field_0):
                        revert with 0, 17
                    if uint256(stor5[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4132 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4132] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _1771
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _1771, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4579 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4579] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_1782] * mem[_4579]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4579]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_1782] * mem[_4579]) + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4579]) / 10000)
                    t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_1782].field_0) and sub_f5597032 > -1 / uint256(stor2[_1782].field_0):
                    revert with 0, 17
                if uint256(stor2[_1782].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4133 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4133] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4580 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_4580] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1782] * mem[_4580]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4580]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1782] * mem[_4580]) + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_4580]) / 10000)
                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * sub_f5597032) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _1771
            mem[32] = 23
            if uint8(stor7[_1782].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_1782]):
                revert with 0, 17
            if uint8(stor7[_1782].field_8) == 5:
                if uint256(stor5[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor5[_1782].field_0):
                    revert with 0, 17
                if uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                    revert with 0, 17
                if balanceOf[_1782] > !((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4130 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4130] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _1771
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _1771, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4577 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4577] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_1782] * mem[_4577]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4577]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_1782] * mem[_4577]) + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4577]) / 10000)
                t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor5[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_1782].field_0) and uint256(sub_ded2abc3[_1771].field_0) > -1 / uint256(stor2[_1782].field_0):
                revert with 0, 17
            if uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0) and block.timestamp - uint256(ownerOf[_1782]) > -1 / uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0):
                revert with 0, 17
            if balanceOf[_1782] > !((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4131 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4131] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _1771
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _1771, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4578 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600) and mem[_4578] > -1 / balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_1782] * mem[_4578]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4578]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_1782] * mem[_4578]) + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600 * mem[_4578]) / 10000)
            t = t + balanceOf[_1782] + ((block.timestamp * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) - (uint256(ownerOf[_1782]) * uint256(stor2[_1782].field_0) * uint256(sub_ded2abc3[_1771].field_0)) / 10000 / 24 * 3600)
            continue 
    else:
        mem[0] = sha3(address(arg1), 5)
        mem[128] = uint256(stor5[address(arg1)].field_0)
        idx = 128
        s = 0
        while (32 * uint256(stor5[address(arg1)].field_0)) + 96 > idx:
            mem[idx + 32] = uint256(stor5[address(arg1)][s].field_256)
            idx = idx + 32
            s = s + 1
            continue 
        idx = 0
        s = 0
        t = 0
        while idx < uint256(stor5[address(arg1)].field_0):
            if idx >= mem[96]:
                revert with 0, 50
            _5861 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) > !sub_fb0ecf68:
                revert with 0, 17
            if uint256(stor24[mem[(32 * idx) + 128]].field_768) + sub_fb0ecf68 > block.timestamp:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not arg3:
                if not stor22[msg.sender]:
                    revert with 0, 'Not allowed'
                mem[0] = mem[(32 * idx) + 128]
                mem[32] = 24
                _5867 = sha3(mem[(32 * idx) + 128], 24)
                _5868 = mem[64]
                mem[64] = mem[64] + 288
                if bool(stor24[mem[(32 * idx) + 128]].field_0):
                    if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    _5875 = mem[64]
                    mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                    mem[_5875] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                    if bool(stor[_5867].field_0):
                        if bool(stor[_5867].field_0) == uint255(uint256(stor[_5867].field_0)) * 0.5 < 32:
                            revert with 0, 34
                        if not Mask(256, -1, uint256(stor[_5867].field_0)):
                            mem[_5868] = _5875
                            mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                            mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                            mem[_5868 + 96] = uint256(ownerOf[_5867])
                            mem[_5868 + 128] = balanceOf[_5867]
                            mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                            mem[_5868 + 192] = uint256(approved[_5867])
                            if uint8(stor7[_5867].field_0) > 5:
                                revert with 0, 33
                            mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_5867].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_5867]):
                                    revert with 0, 17
                                if uint8(stor7[_5867].field_8) == 5:
                                    if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6476 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6476] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7090 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7090] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_5867] * mem[_7090]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7090]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_5867] * mem[_7090]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7090]) / 10000)
                                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6477 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6477] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7091 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7091] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7091]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7091]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7091]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7091]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_5867].field_8) != 5:
                                if uint8(stor7[_5867].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_5867]):
                                    revert with 0, 17
                                if uint8(stor7[_5867].field_8) == 5:
                                    if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6576 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6576] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7164 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7164] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_5867] * mem[_7164]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7164]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_5867] * mem[_7164]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7164]) / 10000)
                                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6577 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6577] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7165 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7165] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7165]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7165]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7165]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7165]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _5861
                            mem[32] = 23
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6574 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6574] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7162 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7162] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7162]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7162]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7162]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7162]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6575 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6575] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7163 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7163] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7163]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7163]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7163]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7163]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if 31 >= uint255(uint256(stor[_5867].field_0)) * 0.5:
                            mem[_5875 + 32] = 256 * Mask(248, 0, stor[_5867].field_8)
                            mem[_5868] = _5875
                            mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                            mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                            mem[_5868 + 96] = uint256(ownerOf[_5867])
                            mem[_5868 + 128] = balanceOf[_5867]
                            mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                            mem[_5868 + 192] = uint256(approved[_5867])
                            if uint8(stor7[_5867].field_0) > 5:
                                revert with 0, 33
                            mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if uint8(stor7[_5867].field_8) == 4:
                                if block.timestamp < uint256(ownerOf[_5867]):
                                    revert with 0, 17
                                if uint8(stor7[_5867].field_8) == 5:
                                    if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                        revert with 0, 17
                                    if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6580 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6580] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7168 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7168] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_5867] * mem[_7168]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7168]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_5867] * mem[_7168]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7168]) / 10000)
                                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6581 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6581] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7169 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7169] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7169]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7169]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7169]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7169]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint8(stor7[_5867].field_8) != 5:
                                if uint8(stor7[_5867].field_8) > 5:
                                    revert with 0, 33
                                if block.timestamp < uint256(ownerOf[_5867]):
                                    revert with 0, 17
                                if uint8(stor7[_5867].field_8) == 5:
                                    if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                        revert with 0, 17
                                    if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                        revert with 0, 17
                                    if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 1
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 1
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6698 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6698] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    mem[mem[64] + 4] = _5861
                                    mem[mem[64] + 36] = 0
                                    require ext_code.size(stor20)
                                    staticcall stor20.0x9a2754f4 with:
                                            gas gas_remaining wei
                                           args _5861, 0
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _7274 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7274] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                        revert with 0, 17
                                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                        revert with 0, 17
                                    if s > !((balanceOf[_5867] * mem[_7274]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7274]) / 10000):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + ((balanceOf[_5867] * mem[_7274]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7274]) / 10000)
                                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                    continue 
                                if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6699 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6699] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7275 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7275] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7275]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7275]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7275]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7275]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            mem[0] = _5861
                            mem[32] = 23
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6696 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6696] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7272 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7272] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7272]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7272]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7272]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7272]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6697 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6697] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7273 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7273] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7273]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7273]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7273]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7273]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5867
                        mem[_5875 + 32] = uint256(stor[sha3(_5867)].field_0)
                        u = _5875 + 32
                        v = sha3(_5867)
                        while _5875 + (uint255(uint256(stor[_5867].field_0)) * 0.5) > u:
                            mem[u + 32] = uint256(stor1[v].field_0)
                            u = u + 32
                            v = v + 1
                            continue 
                        mem[_5868] = _5875
                        mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                        mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                        mem[_5868 + 96] = uint256(ownerOf[_5867])
                        mem[_5868 + 128] = balanceOf[_5867]
                        mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                        mem[_5868 + 192] = uint256(approved[_5867])
                        if uint8(stor7[_5867].field_0) > 5:
                            revert with 0, 33
                        mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7872 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7872] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8064 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8064] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_8064]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8064]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_8064]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8064]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7873 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7873] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8065 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8065] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_8065]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8065]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_8065]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8065]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_5867].field_8) != 5:
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7924 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7924] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8116 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8116] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_8116]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8116]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_8116]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8116]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7925 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7925] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8117 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8117] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_8117]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8117]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_8117]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8117]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5861
                        mem[32] = 23
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7922 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7922] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8114 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8114] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_8114]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8114]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_8114]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8114]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7923 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7923] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8115 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8115] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8115]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8115]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8115]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8115]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if bool(stor[_5867].field_0) == stor[_5867].field_1 % 128 < 32:
                        revert with 0, 34
                    if not stor[_5867].field_1 % 128:
                        mem[_5868] = _5875
                        mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                        mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                        mem[_5868 + 96] = uint256(ownerOf[_5867])
                        mem[_5868 + 128] = balanceOf[_5867]
                        mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                        mem[_5868 + 192] = uint256(approved[_5867])
                        if uint8(stor7[_5867].field_0) > 5:
                            revert with 0, 33
                        mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6526 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6526] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7124 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7124] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7124]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7124]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7124]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7124]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6527 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6527] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7125 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7125] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7125]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7125]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7125]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7125]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_5867].field_8) != 5:
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6630 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6630] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7210 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7210] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7210]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7210]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7210]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7210]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6631 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6631] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7211 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7211] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7211]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7211]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7211]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7211]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5861
                        mem[32] = 23
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6628] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7208 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7208] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7208]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7208]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7208]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7208]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6629] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7209 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7209] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7209]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7209]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7209]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7209]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= stor[_5867].field_1 % 128:
                        mem[_5875 + 32] = 256 * Mask(248, 0, stor[_5867].field_8)
                        mem[_5868] = _5875
                        mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                        mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                        mem[_5868 + 96] = uint256(ownerOf[_5867])
                        mem[_5868 + 128] = balanceOf[_5867]
                        mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                        mem[_5868 + 192] = uint256(approved[_5867])
                        if uint8(stor7[_5867].field_0) > 5:
                            revert with 0, 33
                        mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6634 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6634] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7214 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7214] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7214]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7214]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7214]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7214]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6635] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7215 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7215] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7215]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7215]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7215]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7215]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_5867].field_8) != 5:
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6754 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6754] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7330 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7330] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7330]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7330]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7330]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7330]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6755 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6755] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7331 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7331] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7331]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7331]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7331]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7331]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5861
                        mem[32] = 23
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6752 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6752] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7328 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7328] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7328]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7328]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7328]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7328]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6753] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7329 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7329] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7329]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7329]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7329]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7329]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5867
                    mem[_5875 + 32] = uint256(stor[sha3(_5867)].field_0)
                    u = _5875 + 32
                    v = sha3(_5867)
                    while _5875 + stor[_5867].field_1 % 128 > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_5868] = _5875
                    mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                    mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                    mem[_5868 + 96] = uint256(ownerOf[_5867])
                    mem[_5868 + 128] = balanceOf[_5867]
                    mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                    mem[_5868 + 192] = uint256(approved[_5867])
                    if uint8(stor7[_5867].field_0) > 5:
                        revert with 0, 33
                    mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7878 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7878] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8070 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8070] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_8070]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8070]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_8070]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8070]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7879 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7879] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8071 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8071] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8071]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8071]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8071]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8071]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5867].field_8) != 5:
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7930 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7930] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8122] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_8122]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8122]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_8122]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8122]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7931 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7931] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8123 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8123] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8123]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8123]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8123]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8123]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5867]):
                        revert with 0, 17
                    if uint8(stor7[_5867].field_8) == 5:
                        if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7928 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7928] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8120 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8120] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8120]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8120]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8120]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8120]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7929 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7929] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8121 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8121] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5867] * mem[_8121]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8121]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5867] * mem[_8121]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8121]) / 10000)
                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                    revert with 0, 34
                _5876 = mem[64]
                mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
                mem[_5876] = stor24[mem[(32 * idx) + 128]].field_1 % 128
                if bool(stor[_5867].field_0):
                    if bool(stor[_5867].field_0) == uint255(uint256(stor[_5867].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_5867].field_0)):
                        mem[_5868] = _5876
                        mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                        mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                        mem[_5868 + 96] = uint256(ownerOf[_5867])
                        mem[_5868 + 128] = balanceOf[_5867]
                        mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                        mem[_5868 + 192] = uint256(approved[_5867])
                        if uint8(stor7[_5867].field_0) > 5:
                            revert with 0, 33
                        mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6534 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6534] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7132 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7132] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7132]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7132]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7132]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7132]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6535 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6535] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7133 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7133] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7133]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7133]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7133]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7133]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_5867].field_8) != 5:
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6644 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6644] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7224 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7224] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7224]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7224]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7224]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7224]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6645 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6645] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7225 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7225] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7225]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7225]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7225]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7225]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5861
                        mem[32] = 23
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6642] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7222 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7222] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7222]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7222]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7222]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7222]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6643 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6643] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7223 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7223] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7223]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7223]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7223]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7223]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_5867].field_0)) * 0.5:
                        mem[_5876 + 32] = 256 * Mask(248, 0, stor[_5867].field_8)
                        mem[_5868] = _5876
                        mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                        mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                        mem[_5868 + 96] = uint256(ownerOf[_5867])
                        mem[_5868 + 128] = balanceOf[_5867]
                        mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                        mem[_5868 + 192] = uint256(approved[_5867])
                        if uint8(stor7[_5867].field_0) > 5:
                            revert with 0, 33
                        mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5867].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6648 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6648] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7228 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7228] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7228]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7228]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7228]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7228]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6649 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6649] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7229] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7229]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7229]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7229]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7229]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_5867].field_8) != 5:
                            if uint8(stor7[_5867].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5867]):
                                revert with 0, 17
                            if uint8(stor7[_5867].field_8) == 5:
                                if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6770 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6770] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7346 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7346] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5867] * mem[_7346]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7346]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5867] * mem[_7346]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7346]) / 10000)
                                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6771 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6771] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7347 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7347] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7347]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7347]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7347]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7347]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5861
                        mem[32] = 23
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6768 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6768] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7344 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7344] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7344]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7344]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7344]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7344]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6769 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6769] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7345 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7345] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7345]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7345]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7345]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7345]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5867
                    mem[_5876 + 32] = uint256(stor[sha3(_5867)].field_0)
                    u = _5876 + 32
                    v = sha3(_5867)
                    while _5876 + (uint255(uint256(stor[_5867].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_5868] = _5876
                    mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                    mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                    mem[_5868 + 96] = uint256(ownerOf[_5867])
                    mem[_5868 + 128] = balanceOf[_5867]
                    mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                    mem[_5868 + 192] = uint256(approved[_5867])
                    if uint8(stor7[_5867].field_0) > 5:
                        revert with 0, 33
                    mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7884 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7884] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8076 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8076] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_8076]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8076]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_8076]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8076]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7885 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7885] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8077 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8077] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8077]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8077]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8077]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8077]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5867].field_8) != 5:
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7936 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7936] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8128 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8128] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_8128]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8128]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_8128]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8128]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7937 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7937] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8129] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8129]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8129]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8129]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8129]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5867]):
                        revert with 0, 17
                    if uint8(stor7[_5867].field_8) == 5:
                        if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7934 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7934] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8126 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8126] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8126]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8126]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8126]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8126]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7935 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7935] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8127 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8127] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5867] * mem[_8127]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8127]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5867] * mem[_8127]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8127]) / 10000)
                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_5867].field_0) == stor[_5867].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_5867].field_1 % 128:
                    mem[_5868] = _5876
                    mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                    mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                    mem[_5868 + 96] = uint256(ownerOf[_5867])
                    mem[_5868 + 128] = balanceOf[_5867]
                    mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                    mem[_5868 + 192] = uint256(approved[_5867])
                    if uint8(stor7[_5867].field_0) > 5:
                        revert with 0, 33
                    mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6594 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6594] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7182 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7182] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7182]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7182]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7182]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7182]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6595 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6595] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7183] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7183]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7183]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7183]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7183]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5867].field_8) != 5:
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6704] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7280 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7280] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7280]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7280]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7280]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7280]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6705 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6705] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7281 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7281] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7281]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7281]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7281]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7281]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5867]):
                        revert with 0, 17
                    if uint8(stor7[_5867].field_8) == 5:
                        if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6702 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6702] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7278 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7278] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7278]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7278]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7278]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7278]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6703 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6703] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7279 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7279] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5867] * mem[_7279]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7279]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5867] * mem[_7279]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7279]) / 10000)
                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_5867].field_1 % 128:
                    mem[_5876 + 32] = 256 * Mask(248, 0, stor[_5867].field_8)
                    mem[_5868] = _5876
                    mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                    mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                    mem[_5868 + 96] = uint256(ownerOf[_5867])
                    mem[_5868 + 128] = balanceOf[_5867]
                    mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                    mem[_5868 + 192] = uint256(approved[_5867])
                    if uint8(stor7[_5867].field_0) > 5:
                        revert with 0, 33
                    mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5867].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6708 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6708] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7284 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7284] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7284]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7284]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7284]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7284]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6709] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7285 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7285] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7285]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7285]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7285]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7285]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5867].field_8) != 5:
                        if uint8(stor7[_5867].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5867]):
                            revert with 0, 17
                        if uint8(stor7[_5867].field_8) == 5:
                            if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6826] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7402 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7402] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5867] * mem[_7402]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7402]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5867] * mem[_7402]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7402]) / 10000)
                            t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6827 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6827] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7403 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7403] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7403]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7403]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7403]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7403]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5867]):
                        revert with 0, 17
                    if uint8(stor7[_5867].field_8) == 5:
                        if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6824 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6824] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7400 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7400] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_7400]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7400]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_7400]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7400]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6825 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6825] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7401 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7401] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5867] * mem[_7401]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7401]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5867] * mem[_7401]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7401]) / 10000)
                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5867
                mem[_5876 + 32] = uint256(stor[sha3(_5867)].field_0)
                u = _5876 + 32
                v = sha3(_5867)
                while _5876 + stor[_5867].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_5868] = _5876
                mem[_5868 + 32] = uint256(stor1[_5867].field_0)
                mem[_5868 + 64] = uint256(stor2[_5867].field_0)
                mem[_5868 + 96] = uint256(ownerOf[_5867])
                mem[_5868 + 128] = balanceOf[_5867]
                mem[_5868 + 160] = uint256(stor5[_5867].field_0)
                mem[_5868 + 192] = uint256(approved[_5867])
                if uint8(stor7[_5867].field_0) > 5:
                    revert with 0, 33
                mem[_5868 + 224] = uint8(stor7[_5867].field_0)
                if uint8(stor7[_5867].field_8) > 5:
                    revert with 0, 33
                mem[_5868 + 256] = uint8(stor7[_5867].field_8)
                if uint8(stor7[_5867].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5867].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5867].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_5867]):
                        revert with 0, 17
                    if uint8(stor7[_5867].field_8) == 5:
                        if uint256(stor5[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7890 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7890] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8082 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8082] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8082]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8082]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8082]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8082]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5867].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5867].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5867].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7891 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7891] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8083 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8083] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5867] * mem[_8083]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8083]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5867] * mem[_8083]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8083]) / 10000)
                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_5867].field_8) != 5:
                    if uint8(stor7[_5867].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5867]):
                        revert with 0, 17
                    if uint8(stor7[_5867].field_8) == 5:
                        if uint256(stor5[_5867].field_0) and sub_f5597032 > -1 / uint256(stor5[_5867].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7942 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7942] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8134 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8134] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5867] * mem[_8134]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8134]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5867] * mem[_8134]) + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8134]) / 10000)
                        t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5867].field_0) and sub_f5597032 > -1 / uint256(stor2[_5867].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5867].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7943 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7943] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8135 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8135] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5867] * mem[_8135]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8135]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5867] * mem[_8135]) + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8135]) / 10000)
                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * sub_f5597032) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5861
                mem[32] = 23
                if uint8(stor7[_5867].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_5867]):
                    revert with 0, 17
                if uint8(stor7[_5867].field_8) == 5:
                    if uint256(stor5[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5867].field_0):
                        revert with 0, 17
                    if uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5867] > !((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7940 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7940] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8132 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8132] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5867] * mem[_8132]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8132]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5867] * mem[_8132]) + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8132]) / 10000)
                    t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor5[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_5867].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5867].field_0):
                    revert with 0, 17
                if uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5867]) > -1 / uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                    revert with 0, 17
                if balanceOf[_5867] > !((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7941 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7941] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8133 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8133] > -1 / balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5867] * mem[_8133]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8133]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5867] * mem[_8133]) + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8133]) / 10000)
                t = t + balanceOf[_5867] + ((block.timestamp * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5867]) * uint256(stor2[_5867].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                continue 
            if arg2 > 5:
                revert with 0, 33
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) > 5:
                revert with 0, 33
            if uint8(stor24[mem[(32 * idx) + 128]].field_1800) != arg2:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                continue 
            if not stor22[msg.sender]:
                revert with 0, 'Not allowed'
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 24
            _5872 = sha3(mem[(32 * idx) + 128], 24)
            _5873 = mem[64]
            mem[64] = mem[64] + 288
            if bool(stor24[mem[(32 * idx) + 128]].field_0):
                if bool(stor24[mem[(32 * idx) + 128]].field_0) == uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5 < 32:
                    revert with 0, 34
                _5878 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5) + 32
                mem[_5878] = uint255(uint256(stor24[mem[(32 * idx) + 128]].field_0)) * 0.5
                if bool(stor[_5872].field_0):
                    if bool(stor[_5872].field_0) == uint255(uint256(stor[_5872].field_0)) * 0.5 < 32:
                        revert with 0, 34
                    if not Mask(256, -1, uint256(stor[_5872].field_0)):
                        mem[_5873] = _5878
                        mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                        mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                        mem[_5873 + 96] = uint256(ownerOf[_5872])
                        mem[_5873 + 128] = balanceOf[_5872]
                        mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                        mem[_5873 + 192] = uint256(approved[_5872])
                        if uint8(stor7[_5872].field_0) > 5:
                            revert with 0, 33
                        mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5872].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_5872]):
                                revert with 0, 17
                            if uint8(stor7[_5872].field_8) == 5:
                                if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6658 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6658] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7238 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7238] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5872] * mem[_7238]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7238]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5872] * mem[_7238]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7238]) / 10000)
                                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6659] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7239 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7239] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7239]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7239]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7239]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7239]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_5872].field_8) != 5:
                            if uint8(stor7[_5872].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5872]):
                                revert with 0, 17
                            if uint8(stor7[_5872].field_8) == 5:
                                if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6776 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6776] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7352 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7352] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5872] * mem[_7352]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7352]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5872] * mem[_7352]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7352]) / 10000)
                                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6777 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6777] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7353 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7353] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7353]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7353]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7353]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7353]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5861
                        mem[32] = 23
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6774 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6774] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7350 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7350] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7350]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7350]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7350]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7350]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6775 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6775] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7351 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7351] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7351]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7351]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7351]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7351]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if 31 >= uint255(uint256(stor[_5872].field_0)) * 0.5:
                        mem[_5878 + 32] = 256 * Mask(248, 0, stor[_5872].field_8)
                        mem[_5873] = _5878
                        mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                        mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                        mem[_5873 + 96] = uint256(ownerOf[_5872])
                        mem[_5873 + 128] = balanceOf[_5872]
                        mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                        mem[_5873 + 192] = uint256(approved[_5872])
                        if uint8(stor7[_5872].field_0) > 5:
                            revert with 0, 33
                        mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if uint8(stor7[_5872].field_8) == 4:
                            if block.timestamp < uint256(ownerOf[_5872]):
                                revert with 0, 17
                            if uint8(stor7[_5872].field_8) == 5:
                                if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                                    revert with 0, 17
                                if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6780 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6780] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7356 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7356] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5872] * mem[_7356]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7356]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5872] * mem[_7356]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7356]) / 10000)
                                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6781 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6781] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7357 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7357] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7357]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7357]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7357]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7357]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint8(stor7[_5872].field_8) != 5:
                            if uint8(stor7[_5872].field_8) > 5:
                                revert with 0, 33
                            if block.timestamp < uint256(ownerOf[_5872]):
                                revert with 0, 17
                            if uint8(stor7[_5872].field_8) == 5:
                                if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                                    revert with 0, 17
                                if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                                    revert with 0, 17
                                if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 1
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 1
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6894 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6894] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                mem[mem[64] + 4] = _5861
                                mem[mem[64] + 36] = 0
                                require ext_code.size(stor20)
                                staticcall stor20.0x9a2754f4 with:
                                        gas gas_remaining wei
                                       args _5861, 0
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _7470 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7470] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                    revert with 0, 17
                                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                    revert with 0, 17
                                if s > !((balanceOf[_5872] * mem[_7470]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7470]) / 10000):
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + ((balanceOf[_5872] * mem[_7470]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7470]) / 10000)
                                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                                continue 
                            if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6895 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6895] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7471 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7471] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7471]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7471]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7471]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7471]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        mem[0] = _5861
                        mem[32] = 23
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6892 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6892] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7468 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7468] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7468]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7468]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7468]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7468]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6893 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6893] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7469 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7469] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7469]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7469]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7469]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7469]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5872
                    mem[_5878 + 32] = uint256(stor[sha3(_5872)].field_0)
                    u = _5878 + 32
                    v = sha3(_5872)
                    while _5878 + (uint255(uint256(stor[_5872].field_0)) * 0.5) > u:
                        mem[u + 32] = uint256(stor1[v].field_0)
                        u = u + 32
                        v = v + 1
                        continue 
                    mem[_5873] = _5878
                    mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                    mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                    mem[_5873 + 96] = uint256(ownerOf[_5872])
                    mem[_5873 + 128] = balanceOf[_5872]
                    mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                    mem[_5873 + 192] = uint256(approved[_5872])
                    if uint8(stor7[_5872].field_0) > 5:
                        revert with 0, 33
                    mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7896 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7896] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8088] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_8088]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8088]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_8088]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8088]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7897 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7897] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8089 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8089] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_8089]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8089]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_8089]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8089]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5872].field_8) != 5:
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7948 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7948] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8140 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8140] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_8140]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8140]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_8140]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8140]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7949 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7949] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8141 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8141] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_8141]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8141]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_8141]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8141]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7946 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7946] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8138 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8138] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_8138]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8138]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_8138]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8138]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7947 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7947] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8139 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8139] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8139]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8139]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8139]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8139]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if bool(stor[_5872].field_0) == stor[_5872].field_1 % 128 < 32:
                    revert with 0, 34
                if not stor[_5872].field_1 % 128:
                    mem[_5873] = _5878
                    mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                    mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                    mem[_5873 + 96] = uint256(ownerOf[_5872])
                    mem[_5873 + 128] = balanceOf[_5872]
                    mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                    mem[_5873 + 192] = uint256(approved[_5872])
                    if uint8(stor7[_5872].field_0) > 5:
                        revert with 0, 33
                    mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6718 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6718] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7294 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7294] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7294]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7294]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7294]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7294]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6719 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6719] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7295 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7295] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7295]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7295]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7295]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7295]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5872].field_8) != 5:
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6832] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7408 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7408] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7408]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7408]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7408]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7408]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6833] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7409] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7409]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7409]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7409]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7409]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6830 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6830] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7406 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7406] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7406]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7406]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7406]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7406]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6831 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6831] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7407 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7407] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7407]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7407]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7407]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7407]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= stor[_5872].field_1 % 128:
                    mem[_5878 + 32] = 256 * Mask(248, 0, stor[_5872].field_8)
                    mem[_5873] = _5878
                    mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                    mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                    mem[_5873 + 96] = uint256(ownerOf[_5872])
                    mem[_5873 + 128] = balanceOf[_5872]
                    mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                    mem[_5873 + 192] = uint256(approved[_5872])
                    if uint8(stor7[_5872].field_0) > 5:
                        revert with 0, 33
                    mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6836 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6836] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7412 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7412] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7412]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7412]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7412]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7412]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6837 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6837] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7413 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7413] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7413]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7413]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7413]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7413]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5872].field_8) != 5:
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6938 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6938] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7514 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7514] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7514]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7514]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7514]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7514]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6939 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6939] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7515 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7515] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7515]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7515]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7515]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7515]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6936 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6936] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7512 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7512] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7512]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7512]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7512]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7512]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6937 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6937] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7513 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7513] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7513]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7513]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7513]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7513]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5872
                mem[_5878 + 32] = uint256(stor[sha3(_5872)].field_0)
                u = _5878 + 32
                v = sha3(_5872)
                while _5878 + stor[_5872].field_1 % 128 > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_5873] = _5878
                mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                mem[_5873 + 96] = uint256(ownerOf[_5872])
                mem[_5873 + 128] = balanceOf[_5872]
                mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                mem[_5873 + 192] = uint256(approved[_5872])
                if uint8(stor7[_5872].field_0) > 5:
                    revert with 0, 33
                mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7902 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7902] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8094 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8094] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_8094]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8094]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_8094]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8094]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7903 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7903] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8095 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8095] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8095]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8095]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8095]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8095]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_5872].field_8) != 5:
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7954 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7954] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8146 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8146] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_8146]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8146]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_8146]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8146]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7955 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7955] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8147 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8147] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8147]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8147]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8147]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8147]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5861
                mem[32] = 23
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_5872]):
                    revert with 0, 17
                if uint8(stor7[_5872].field_8) == 5:
                    if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7952] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8144 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8144] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8144]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8144]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8144]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8144]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                    revert with 0, 17
                if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                    revert with 0, 17
                if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7953 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7953] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8145 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8145] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5872] * mem[_8145]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8145]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5872] * mem[_8145]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8145]) / 10000)
                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor24[mem[(32 * idx) + 128]].field_0) == stor24[mem[(32 * idx) + 128]].field_1 % 128 < 32:
                revert with 0, 34
            _5879 = mem[64]
            mem[64] = mem[64] + ceil32(stor24[mem[(32 * idx) + 128]].field_1 % 128) + 32
            mem[_5879] = stor24[mem[(32 * idx) + 128]].field_1 % 128
            if bool(stor[_5872].field_0):
                if bool(stor[_5872].field_0) == uint255(uint256(stor[_5872].field_0)) * 0.5 < 32:
                    revert with 0, 34
                if not Mask(256, -1, uint256(stor[_5872].field_0)):
                    mem[_5873] = _5879
                    mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                    mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                    mem[_5873 + 96] = uint256(ownerOf[_5872])
                    mem[_5873 + 128] = balanceOf[_5872]
                    mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                    mem[_5873 + 192] = uint256(approved[_5872])
                    if uint8(stor7[_5872].field_0) > 5:
                        revert with 0, 33
                    mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6726 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6726] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7302 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7302] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7302]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7302]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7302]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7302]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6727 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6727] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7303 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7303] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7303]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7303]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7303]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7303]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5872].field_8) != 5:
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6846 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6846] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7422 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7422] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7422]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7422]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7422]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7422]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6847 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6847] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7423] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7423]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7423]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7423]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7423]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6844 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6844] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7420 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7420] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7420]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7420]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7420]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7420]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6845 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6845] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7421 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7421] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7421]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7421]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7421]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7421]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if 31 >= uint255(uint256(stor[_5872].field_0)) * 0.5:
                    mem[_5879 + 32] = 256 * Mask(248, 0, stor[_5872].field_8)
                    mem[_5873] = _5879
                    mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                    mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                    mem[_5873 + 96] = uint256(ownerOf[_5872])
                    mem[_5873 + 128] = balanceOf[_5872]
                    mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                    mem[_5873 + 192] = uint256(approved[_5872])
                    if uint8(stor7[_5872].field_0) > 5:
                        revert with 0, 33
                    mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if uint8(stor7[_5872].field_8) == 4:
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6850 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6850] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7426 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7426] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7426]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7426]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7426]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7426]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6851 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6851] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7427 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7427] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7427]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7427]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7427]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7427]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint8(stor7[_5872].field_8) != 5:
                        if uint8(stor7[_5872].field_8) > 5:
                            revert with 0, 33
                        if block.timestamp < uint256(ownerOf[_5872]):
                            revert with 0, 17
                        if uint8(stor7[_5872].field_8) == 5:
                            if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                                revert with 0, 17
                            if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                                revert with 0, 17
                            if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 1
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _6954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6954] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            mem[mem[64] + 4] = _5861
                            mem[mem[64] + 36] = 0
                            require ext_code.size(stor20)
                            staticcall stor20.0x9a2754f4 with:
                                    gas gas_remaining wei
                                   args _5861, 0
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _7530 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7530] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                                revert with 0, 17
                            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                                revert with 0, 17
                            if s > !((balanceOf[_5872] * mem[_7530]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7530]) / 10000):
                                revert with 0, 17
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            s = s + ((balanceOf[_5872] * mem[_7530]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7530]) / 10000)
                            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                            continue 
                        if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6955 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6955] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7531 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7531] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7531]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7531]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7531]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7531]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    mem[0] = _5861
                    mem[32] = 23
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6952 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6952] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7528 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7528] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7528]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7528]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7528]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7528]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6953 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6953] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7529 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7529] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7529]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7529]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7529]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7529]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5872
                mem[_5879 + 32] = uint256(stor[sha3(_5872)].field_0)
                u = _5879 + 32
                v = sha3(_5872)
                while _5879 + (uint255(uint256(stor[_5872].field_0)) * 0.5) > u:
                    mem[u + 32] = uint256(stor1[v].field_0)
                    u = u + 32
                    v = v + 1
                    continue 
                mem[_5873] = _5879
                mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                mem[_5873 + 96] = uint256(ownerOf[_5872])
                mem[_5873 + 128] = balanceOf[_5872]
                mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                mem[_5873 + 192] = uint256(approved[_5872])
                if uint8(stor7[_5872].field_0) > 5:
                    revert with 0, 33
                mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7908 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7908] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8100 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8100] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_8100]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8100]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_8100]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8100]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7909 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7909] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8101 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8101] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8101]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8101]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8101]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8101]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_5872].field_8) != 5:
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7960 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7960] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8152 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8152] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_8152]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8152]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_8152]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8152]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7961 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7961] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8153 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8153] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8153]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8153]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8153]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8153]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5861
                mem[32] = 23
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_5872]):
                    revert with 0, 17
                if uint8(stor7[_5872].field_8) == 5:
                    if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7958 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7958] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8150 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8150] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8150]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8150]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8150]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8150]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                    revert with 0, 17
                if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                    revert with 0, 17
                if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7959 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7959] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8151 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8151] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5872] * mem[_8151]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8151]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5872] * mem[_8151]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8151]) / 10000)
                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                continue 
            if bool(stor[_5872].field_0) == stor[_5872].field_1 % 128 < 32:
                revert with 0, 34
            if not stor[_5872].field_1 % 128:
                mem[_5873] = _5879
                mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                mem[_5873 + 96] = uint256(ownerOf[_5872])
                mem[_5873 + 128] = balanceOf[_5872]
                mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                mem[_5873 + 192] = uint256(approved[_5872])
                if uint8(stor7[_5872].field_0) > 5:
                    revert with 0, 33
                mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6794 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6794] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7370 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7370] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7370]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7370]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7370]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7370]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6795 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6795] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7371 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7371] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7371]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7371]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7371]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7371]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_5872].field_8) != 5:
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6900 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6900] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7476 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7476] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7476]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7476]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7476]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7476]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6901 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6901] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7477 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7477] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7477]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7477]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7477]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7477]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5861
                mem[32] = 23
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_5872]):
                    revert with 0, 17
                if uint8(stor7[_5872].field_8) == 5:
                    if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6898 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6898] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7474 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7474] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7474]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7474]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7474]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7474]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                    revert with 0, 17
                if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                    revert with 0, 17
                if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6899 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6899] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7475 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7475] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5872] * mem[_7475]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7475]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5872] * mem[_7475]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7475]) / 10000)
                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                continue 
            if 31 >= stor[_5872].field_1 % 128:
                mem[_5879 + 32] = 256 * Mask(248, 0, stor[_5872].field_8)
                mem[_5873] = _5879
                mem[_5873 + 32] = uint256(stor1[_5872].field_0)
                mem[_5873 + 64] = uint256(stor2[_5872].field_0)
                mem[_5873 + 96] = uint256(ownerOf[_5872])
                mem[_5873 + 128] = balanceOf[_5872]
                mem[_5873 + 160] = uint256(stor5[_5872].field_0)
                mem[_5873 + 192] = uint256(approved[_5872])
                if uint8(stor7[_5872].field_0) > 5:
                    revert with 0, 33
                mem[_5873 + 224] = uint8(stor7[_5872].field_0)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                mem[_5873 + 256] = uint8(stor7[_5872].field_8)
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if uint8(stor7[_5872].field_8) == 4:
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6904 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6904] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7480 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7480] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7480]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7480]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7480]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7480]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6905 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_6905] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7481 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7481] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7481]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7481]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7481]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_7481]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint8(stor7[_5872].field_8) != 5:
                    if uint8(stor7[_5872].field_8) > 5:
                        revert with 0, 33
                    if block.timestamp < uint256(ownerOf[_5872]):
                        revert with 0, 17
                    if uint8(stor7[_5872].field_8) == 5:
                        if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                            revert with 0, 17
                        if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                            revert with 0, 17
                        if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 1
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _6988 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6988] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        mem[mem[64] + 4] = _5861
                        mem[mem[64] + 36] = 0
                        require ext_code.size(stor20)
                        staticcall stor20.0x9a2754f4 with:
                                gas gas_remaining wei
                               args _5861, 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7564 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7564] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                            revert with 0, 17
                        if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                            revert with 0, 17
                        if s > !((balanceOf[_5872] * mem[_7564]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7564]) / 10000):
                            revert with 0, 17
                        if idx == -1:
                            revert with 0, 17
                        idx = idx + 1
                        s = s + ((balanceOf[_5872] * mem[_7564]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7564]) / 10000)
                        t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                        continue 
                    if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6989 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_6989] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7565 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7565] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7565]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7565]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7565]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_7565]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                mem[0] = _5861
                mem[32] = 23
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_5872]):
                    revert with 0, 17
                if uint8(stor7[_5872].field_8) == 5:
                    if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _6986 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6986] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7562 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7562] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_7562]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7562]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_7562]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7562]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                    revert with 0, 17
                if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                    revert with 0, 17
                if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6987 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_6987] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7563 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7563] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5872] * mem[_7563]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7563]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5872] * mem[_7563]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_7563]) / 10000)
                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                continue 
            mem[0] = _5872
            mem[_5879 + 32] = uint256(stor[sha3(_5872)].field_0)
            u = _5879 + 32
            v = sha3(_5872)
            while _5879 + stor[_5872].field_1 % 128 > u:
                mem[u + 32] = uint256(stor1[v].field_0)
                u = u + 32
                v = v + 1
                continue 
            mem[_5873] = _5879
            mem[_5873 + 32] = uint256(stor1[_5872].field_0)
            mem[_5873 + 64] = uint256(stor2[_5872].field_0)
            mem[_5873 + 96] = uint256(ownerOf[_5872])
            mem[_5873 + 128] = balanceOf[_5872]
            mem[_5873 + 160] = uint256(stor5[_5872].field_0)
            mem[_5873 + 192] = uint256(approved[_5872])
            if uint8(stor7[_5872].field_0) > 5:
                revert with 0, 33
            mem[_5873 + 224] = uint8(stor7[_5872].field_0)
            if uint8(stor7[_5872].field_8) > 5:
                revert with 0, 33
            mem[_5873 + 256] = uint8(stor7[_5872].field_8)
            if uint8(stor7[_5872].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_5872].field_8) > 5:
                revert with 0, 33
            if uint8(stor7[_5872].field_8) == 4:
                if block.timestamp < uint256(ownerOf[_5872]):
                    revert with 0, 17
                if uint8(stor7[_5872].field_8) == 5:
                    if uint256(stor5[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor5[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor5[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_7e953ee7:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7914 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7914] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8106 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8106] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8106]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8106]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8106]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8106]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_5872].field_0) and sub_7e953ee7 > -1 / uint256(stor2[_5872].field_0):
                    revert with 0, 17
                if uint256(stor2[_5872].field_0) * sub_7e953ee7 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_7e953ee7:
                    revert with 0, 17
                if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7915 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_7915] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8107 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600) and mem[_8107] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5872] * mem[_8107]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8107]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5872] * mem[_8107]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600 * mem[_8107]) / 10000)
                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_7e953ee7) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_7e953ee7) / 10000 / 24 * 3600)
                continue 
            if uint8(stor7[_5872].field_8) != 5:
                if uint8(stor7[_5872].field_8) > 5:
                    revert with 0, 33
                if block.timestamp < uint256(ownerOf[_5872]):
                    revert with 0, 17
                if uint8(stor7[_5872].field_8) == 5:
                    if uint256(stor5[_5872].field_0) and sub_f5597032 > -1 / uint256(stor5[_5872].field_0):
                        revert with 0, 17
                    if uint256(stor5[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * sub_f5597032:
                        revert with 0, 17
                    if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 1
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7966 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7966] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    mem[mem[64] + 4] = _5861
                    mem[mem[64] + 36] = 0
                    require ext_code.size(stor20)
                    staticcall stor20.0x9a2754f4 with:
                            gas gas_remaining wei
                           args _5861, 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8158 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8158] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                        revert with 0, 17
                    if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                        revert with 0, 17
                    if s > !((balanceOf[_5872] * mem[_8158]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8158]) / 10000):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s + ((balanceOf[_5872] * mem[_8158]) + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8158]) / 10000)
                    t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                    continue 
                if uint256(stor2[_5872].field_0) and sub_f5597032 > -1 / uint256(stor2[_5872].field_0):
                    revert with 0, 17
                if uint256(stor2[_5872].field_0) * sub_f5597032 and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * sub_f5597032:
                    revert with 0, 17
                if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7967 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_7967] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8159 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600) and mem[_8159] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5872] * mem[_8159]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8159]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5872] * mem[_8159]) + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600 * mem[_8159]) / 10000)
                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * sub_f5597032) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * sub_f5597032) / 10000 / 24 * 3600)
                continue 
            mem[0] = _5861
            mem[32] = 23
            if uint8(stor7[_5872].field_8) > 5:
                revert with 0, 33
            if block.timestamp < uint256(ownerOf[_5872]):
                revert with 0, 17
            if uint8(stor7[_5872].field_8) == 5:
                if uint256(stor5[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor5[_5872].field_0):
                    revert with 0, 17
                if uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                    revert with 0, 17
                if balanceOf[_5872] > !((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 1
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7964 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7964] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                mem[mem[64] + 4] = _5861
                mem[mem[64] + 36] = 0
                require ext_code.size(stor20)
                staticcall stor20.0x9a2754f4 with:
                        gas gas_remaining wei
                       args _5861, 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8156 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8156] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                    revert with 0, 17
                if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                    revert with 0, 17
                if s > !((balanceOf[_5872] * mem[_8156]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8156]) / 10000):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s + ((balanceOf[_5872] * mem[_8156]) + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8156]) / 10000)
                t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor5[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
                continue 
            if uint256(stor2[_5872].field_0) and uint256(sub_ded2abc3[_5861].field_0) > -1 / uint256(stor2[_5872].field_0):
                revert with 0, 17
            if uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0) and block.timestamp - uint256(ownerOf[_5872]) > -1 / uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0):
                revert with 0, 17
            if balanceOf[_5872] > !((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _5861
            mem[mem[64] + 36] = 1
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _5861, 1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7965 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_7965] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            mem[mem[64] + 4] = _5861
            mem[mem[64] + 36] = 0
            require ext_code.size(stor20)
            staticcall stor20.0x9a2754f4 with:
                    gas gas_remaining wei
                   args _5861, 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8157 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600) and mem[_8157] > -1 / balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600):
                revert with 0, 17
            if t > !(balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)):
                revert with 0, 17
            if s > !((balanceOf[_5872] * mem[_8157]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8157]) / 10000):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s + ((balanceOf[_5872] * mem[_8157]) + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600 * mem[_8157]) / 10000)
            t = t + balanceOf[_5872] + ((block.timestamp * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) - (uint256(ownerOf[_5872]) * uint256(stor2[_5872].field_0) * uint256(sub_ded2abc3[_5861].field_0)) / 10000 / 24 * 3600)
            continue 
    return t, s
}



}
