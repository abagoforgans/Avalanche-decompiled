contract main {




// =====================  Runtime code  =====================


#
#  - sub_18b5967f(?)
#  - sub_31586263(?)
#  - getParams()
#
const REVISION = 120


uint8 stor0;
uint8 stor0; offset 8
uint256 stor0; offset 8
array of uint256 stor2;
array of uint256 stor3;
address owner;
address sub_acdd8243Address;
array of uint256 stor102;
mapping of uint256 stor103;
mapping of struct sub_efc1a9bf;
mapping of address address;
array of struct stor106;
uint256 stor3541;
uint256 stor3541;
uint256 stor4C55;
uint256 stor53B4;
uint256 stor6A25;
uint256 storC26E;
uint256 storE6E6;
uint256 storE6E6;

function getAddress(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return address[arg1]
}

function sub_23bf2705(?) payable {
    return sub_acdd8243Address
}

function owner() payable {
    return owner
}

function sub_acdd8243(?) payable {
    return sub_acdd8243Address
}

function sub_efc1a9bf(?) payable {
    require calldata.size - 4 >= 32
    return sub_efc1a9bf[arg1].field_0
}

function _fallback() payable {
    revert
}

function sub_67ba7811(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    stor6A25 = arg1
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function setAddress(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    address[arg1] = arg2
}

function sub_539d7f38(?) payable {
    require calldata.size - 4 >= 96
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if not stor103[arg1]:
        revert with 0, 'In', 0
    if arg3:
        if arg3 < arg2:
            revert with 0, 'Provided inconsistent data', 0
    sub_efc1a9bf[arg1].field_512 = arg2
    sub_efc1a9bf[arg1].field_768 = arg3
}

function sub_9322d1ed(?) payable {
    if storE6E6 > 10000:
        revert with 0, 'SafeMath: subtraction overflow'
    if storC26E > -storE6E6 + 10000:
        revert with 0, 'SafeMath: subtraction overflow'
    if stor53B4 > -storE6E6 + -storC26E + 10000:
        revert with 0, 'SafeMath: subtraction overflow'
    if stor4C55 > -storE6E6 + -storC26E + -stor53B4 + 10000:
        revert with 0, 'SafeMath: subtraction overflow'
    stor3541 = -storE6E6 + -storC26E + -stor53B4 + -stor4C55 + 10000
    stor3541 = storE6E6
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0x734f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function getFeeDistribution() payable {
    mem[128] = 0x474f5645524e414e43455f524557415244000000000000000000000000000000
    mem[160] = 0x444556454c4f504d454e54000000000000000000000000000000000000000000
    mem[192] = 'INSURANCE' << 184
    mem[224] = 'CHARITY' << 200
    mem[256] = 0x4255595f414e445f4255524e0000000000000000000000000000000000000000
    mem[288] = 5
    mem[320 len 160] = call.data[calldata.size len 160]
    idx = 0
    while idx < 5:
        require idx < 5
        mem[0] = mem[(32 * idx) + 128]
        mem[32] = 104
        require idx < 5
        mem[(32 * idx) + 320] = sub_efc1a9bf[mem[(32 * idx) + 128]].field_0
        idx = idx + 1
        continue 
    return 64, 
           256,
           5,
           0x474f5645524e414e43455f524557415244000000000000000000000000000000, 0x444556454c4f504d454e54000000000000000000000000000000000000000000, 'INSURANCE', 'CHARITY', 0x4255595f414e445f4255524e0000000000000000000000000000000000000000 >> 1024,
           5,
           mem[320 len 160]
}

function getVotes(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor106[address(arg1)].field_0:
        mem[128] = stor106[address(arg1)].field_0
        idx = 128
        s = 0
        while (32 * stor106[address(arg1)].field_0) + 96 > idx:
            mem[idx + 32] = stor106[address(arg1)][s].field_256
            idx = idx + 32
            s = s + 1
            continue 
    require stor106[address(arg1)].field_0 <= test266151307()
    mem[(32 * stor106[address(arg1)].field_0) + 128] = stor106[address(arg1)].field_0
    if stor106[address(arg1)].field_0:
        mem[(32 * stor106[address(arg1)].field_0) + 160 len 32 * stor106[address(arg1)].field_0] = call.data[calldata.size len 32 * stor106[address(arg1)].field_0]
    idx = 0
    while idx < stor106[address(arg1)].field_0:
        require idx < stor106[address(arg1)].field_0
        mem[0] = mem[(32 * idx) + 128]
        mem[32] = sha3(address(arg1), 106) + 2
        require idx < stor106[address(arg1)].field_0
        mem[(32 * idx) + (32 * stor106[address(arg1)].field_0) + 160] = stor106[address(arg1)][2][mem[(32 * idx) + 128]].field_0
        idx = idx + 1
        continue 
    mem[(64 * stor106[address(arg1)].field_0) + 160] = 64
    mem[(64 * stor106[address(arg1)].field_0) + 224] = stor106[address(arg1)].field_0
    mem[(64 * stor106[address(arg1)].field_0) + 256 len 32 * stor106[address(arg1)].field_0] = mem[128 len 32 * stor106[address(arg1)].field_0]
    mem[(64 * stor106[address(arg1)].field_0) + 192] = (32 * stor106[address(arg1)].field_0) + 96
    mem[(98 * stor106[address(arg1)].field_0) + 256] = stor106[address(arg1)].field_0
    mem[(98 * stor106[address(arg1)].field_0) + 288 len 32 * stor106[address(arg1)].field_0] = mem[(32 * stor106[address(arg1)].field_0) + 160 len 32 * stor106[address(arg1)].field_0]
    return memory
      from (64 * stor106[address(arg1)].field_0) + 160
       len (194 * stor106[address(arg1)].field_0) + 128
}

function update() payable {
    mem[128] = 'POOL_UTILIZATION_ALLOWANCE'
    mem[160] = 'BASE_BORROW_RATE' << 128
    mem[192] = 'OPTIMAL_SLOPE' << 152
    mem[224] = 'EXCESS_SLOPE' << 160
    mem[256] = 0x4f5054494d414c5f5554494c495a4154494f4e00000000000000000000000000
    mem[288] = 0x4c49515549444154494f4e5f4d415247494e0000000000000000000000000000
    mem[320] = 0x4c49515549444154494f4e5f5245574152440000000000000000000000000000
    mem[352] = 0x4d41585f4c455645524147455f464143544f5200000000000000000000000000
    mem[384] = 0x4d41585f524154455f4d554c5449504c49455200000000000000000000000000
    mem[416] = 0x4d494e5f574f575f42414c414e43455f58340000000000000000000000000000
    mem[448] = 'MIN_WOW_BALANCE_X5' << 112
    mem[480] = 'TRADER_PROFIT_FEE' << 120
    mem[512] = 0x54524541535552455f464143544f520000000000000000000000000000000000
    mem[544] = 0x4d41585f4c49515549444154494f4e5f52455741524400000000000000000000
    mem[576] = 0x4d41585f50524943455f5448524553484f4c4400000000000000000000000000
    mem[608] = 0x4d494e5f504f534954494f4e5f4445504f534954000000000000000000000000
    mem[640] = 'REFERRAL_BONUS_1' << 128
    mem[672] = 0x524546455252414c5f424f4e55535f3200000000000000000000000000000000
    mem[704] = 'REFERRAL_BONUS_3' << 128
    require stor102.length <= test266151307()
    mem[736] = stor102.length
    if stor102.length:
        mem[768 len 32 * stor102.length] = call.data[calldata.size len 32 * stor102.length]
    idx = 0
    s = 0
    while idx < stor102.length:
        mem[0] = 102
        s = 0
        while s < 19:
            require s < 19
            if mem[(32 * s) + 128] != stor102[idx]:
                s = s + 1
                continue 
            idx = idx + 1
            s = stor102[idx]
            continue 
        require 0 < stor102.length
        mem[768] = stor102[idx]
        idx = idx + 1
        s = stor102[idx]
        continue 
    s = 0
    while s < 19:
        require s < 19
        mem[0] = mem[(32 * s) + 128]
        mem[32] = 103
        if not stor103[mem[(32 * s) + 128]]:
            stor102.length++
            stor102[stor102.length] = mem[(32 * s) + 128]
            mem[0] = mem[(32 * s) + 128]
            mem[32] = 103
            stor103[mem[(32 * s) + 128]] = stor102.length
        s = s + 1
        continue 
}

function sub_965faf3d(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    mem[96] = 26
    mem[128] = 'Provided inconsistent data' << 48
    if ('cd', 36).length != ('cd', 4).length:
        revert with 0, 'Provided inconsistent data', 0
    mem[64] = 224
    mem[160] = 26
    mem[192] = 'Provided inconsistent data' << 48
    if ('cd', 68).length != ('cd', 4).length:
        revert with 0, 'Provided inconsistent data', 0
    idx = 0
    while idx < ('cd', 4).length:
        require idx < ('cd', 36).length
        require idx < ('cd', 68).length
        mem[0] = cd[((32 * idx) + cd[4] + 36)]
        mem[32] = 103
        _40 = mem[64]
        mem[64] = mem[64] + 64
        mem[_40] = 17
        mem[_40 + 32] = 0x496e76616c696420706172616d65746572000000000000000000000000000000
        if not stor103[cd[((32 * idx) + cd[4] + 36)]]:
            _41 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 17
            s = 0
            while s < 17:
                mem[s + _41 + 68] = mem[s + _40 + 32]
                s = s + 32
                continue 
            mem[_41 + 85] = 0
            revert with memory
              from mem[64]
               len _41 + -mem[64] + 100
        if not cd[((32 * idx) + cd[68] + 36)]:
            _42 = mem[64]
            mem[64] = mem[64] + 64
            mem[_42] = 26
            mem[_42 + 32] = 'Provided inconsistent data' << 48
            mem[0] = cd[((32 * idx) + cd[4] + 36)]
            mem[32] = 104
            sub_efc1a9bf[cd[((32 * idx) + cd[4] + 36)]].field_512 = cd[((32 * idx) + cd[36] + 36)]
            sub_efc1a9bf[cd[((32 * idx) + cd[4] + 36)]].field_768 = cd[((32 * idx) + cd[68] + 36)]
            idx = idx + 1
            continue 
        _45 = mem[64]
        mem[64] = mem[64] + 64
        mem[_45] = 26
        mem[_45 + 32] = 'Provided inconsistent data' << 48
        if cd[((32 * idx) + cd[68] + 36)] >= cd[((32 * idx) + cd[36] + 36)]:
            mem[0] = cd[((32 * idx) + cd[4] + 36)]
            mem[32] = 104
            sub_efc1a9bf[cd[((32 * idx) + cd[4] + 36)]].field_512 = cd[((32 * idx) + cd[36] + 36)]
            sub_efc1a9bf[cd[((32 * idx) + cd[4] + 36)]].field_768 = cd[((32 * idx) + cd[68] + 36)]
            idx = idx + 1
            continue 
        _47 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        mem[mem[64] + 36] = 26
        idx = 0
        while idx < 26:
            mem[idx + _47 + 68] = mem[idx + _45 + 32]
            idx = idx + 32
            continue 
        mem[_47 + 94] = 0
        revert with memory
          from mem[64]
           len _47 + -mem[64] + 100
}

function initialize(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if uint8(stor0.field_8):
        owner = msg.sender
        emit OwnershipTransferred(0, msg.sender);
    else:
        if ext_code.size(this.address):
            if uint8(stor0.field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            46,
                            0x65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65,
                            mem[210 len 18]
        if uint8(stor0.field_8):
            owner = msg.sender
            emit OwnershipTransferred(0, msg.sender);
        else:
            uint8(stor0.field_0) = 1
            uint8(stor0.field_8) = 1
            Mask(248, 0, stor0.field_8) = 0
            if ext_code.size(this.address):
                if uint8(stor0.field_0):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                46,
                                0x65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65,
                                mem[210 len 18]
            if uint8(stor0.field_8):
                owner = msg.sender
                emit OwnershipTransferred(0, msg.sender);
            else:
                uint8(stor0.field_0) = 1
                uint8(stor0.field_8) = 1
                Mask(248, 0, stor0.field_8) = 0
                if ext_code.size(this.address):
                    if uint8(stor0.field_0):
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    46,
                                    0x65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65,
                                    mem[210 len 18]
                if uint8(stor0.field_8):
                    owner = msg.sender
                    emit OwnershipTransferred(0, msg.sender);
                else:
                    uint8(stor0.field_0) = 1
                    uint8(stor0.field_8) = 1
                    Mask(248, 0, stor0.field_8) = 0
                    uint8(stor0.field_8) = 0
                    if ext_code.size(this.address):
                        if uint8(stor0.field_0):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        46,
                                        0x65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65,
                                        mem[210 len 18]
                    if uint8(stor0.field_8):
                        owner = msg.sender
                        emit OwnershipTransferred(0, msg.sender);
                    else:
                        uint8(stor0.field_0) = 1
                        uint8(stor0.field_8) = 1
                        Mask(248, 0, stor0.field_8) = 0
                        owner = msg.sender
                        emit OwnershipTransferred(0, msg.sender);
                        uint8(stor0.field_8) = 0
                        uint8(stor0.field_8) = 0
    sub_acdd8243Address = arg1
    mem[128] = 'POOL_UTILIZATION_ALLOWANCE'
    mem[160] = 'BASE_BORROW_RATE' << 128
    mem[192] = 'OPTIMAL_SLOPE' << 152
    mem[224] = 'EXCESS_SLOPE' << 160
    mem[256] = 0x4f5054494d414c5f5554494c495a4154494f4e00000000000000000000000000
    mem[288] = 0x4c49515549444154494f4e5f4d415247494e0000000000000000000000000000
    mem[320] = 0x4c49515549444154494f4e5f5245574152440000000000000000000000000000
    mem[352] = 0x4d41585f4c455645524147455f464143544f5200000000000000000000000000
    mem[384] = 0x4d41585f524154455f4d554c5449504c49455200000000000000000000000000
    mem[416] = 0x4d494e5f574f575f42414c414e43455f58340000000000000000000000000000
    mem[448] = 'MIN_WOW_BALANCE_X5' << 112
    mem[480] = 'TRADER_PROFIT_FEE' << 120
    mem[512] = 0x54524541535552455f464143544f520000000000000000000000000000000000
    mem[544] = 0x4d41585f4c49515549444154494f4e5f52455741524400000000000000000000
    mem[576] = 0x4d41585f50524943455f5448524553484f4c4400000000000000000000000000
    mem[608] = 0x4d494e5f504f534954494f4e5f4445504f534954000000000000000000000000
    mem[640] = 'REFERRAL_BONUS_1' << 128
    mem[672] = 0x524546455252414c5f424f4e55535f3200000000000000000000000000000000
    mem[704] = 'REFERRAL_BONUS_3' << 128
    require stor102.length <= test266151307()
    mem[736] = stor102.length
    if stor102.length:
        mem[768 len 32 * stor102.length] = call.data[calldata.size len 32 * stor102.length]
    idx = 0
    s = 0
    while idx < stor102.length:
        mem[0] = 102
        s = 0
        while s < 19:
            require s < 19
            if mem[(32 * s) + 128] != stor102[idx]:
                s = s + 1
                continue 
            idx = idx + 1
            s = stor102[idx]
            continue 
        require 0 < stor102.length
        mem[768] = stor102[idx]
        idx = idx + 1
        s = stor102[idx]
        continue 
    s = 0
    while s < 19:
        require s < 19
        mem[0] = mem[(32 * s) + 128]
        mem[32] = 103
        if not stor103[mem[(32 * s) + 128]]:
            stor102.length++
            stor102[stor102.length] = mem[(32 * s) + 128]
            mem[0] = mem[(32 * s) + 128]
            mem[32] = 103
            stor103[mem[(32 * s) + 128]] = stor102.length
        s = s + 1
        continue 
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function sub_22efee24(?) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    idx = 0
    s = 0
    while idx < ('cd', 4).length:
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        mem[0] = 0x4155544f4d415449435f52455741524400000000000000000000000000000000
        mem[32] = sha3(address(cd[((32 * idx) + cd[4] + 36)]), 106) + 1
        if not stor106[address(cd[((32 * idx) + cd[4] + 36)])][1][0x4155544f4d415449435f52455741524400000000000000000000000000000000].field_0:
            idx = idx + 1
            s = s
            continue 
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        mem[0] = 0x444556454c4f504d454e54000000000000000000000000000000000000000000
        mem[32] = sha3(address(cd[((32 * idx) + cd[4] + 36)]), 106) + 2
        _63 = mem[64]
        mem[64] = mem[64] + 64
        mem[_63] = 30
        mem[_63 + 32] = 'SafeMath: subtraction overflow'
        if stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x444556454c4f504d454e54000000000000000000000000000000000000000000].field_0 > 10000:
            _64 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 30
            idx = 0
            while idx < 30:
                mem[idx + _64 + 68] = mem[idx + _63 + 32]
                idx = idx + 32
                continue 
            mem[_64 + 68] = mem[_64 + 70 len 30]
            revert with memory
              from mem[64]
               len _64 + -mem[64] + 100
        _70 = mem[64]
        mem[64] = mem[64] + 64
        mem[_70] = 30
        mem[_70 + 32] = 'SafeMath: subtraction overflow'
        if stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['INSURANCE'].field_0 > -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x444556454c4f504d454e54000000000000000000000000000000000000000000].field_0 + 10000:
            _72 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 30
            idx = 0
            while idx < 30:
                mem[idx + _72 + 68] = mem[idx + _70 + 32]
                idx = idx + 32
                continue 
            mem[_72 + 68] = mem[_72 + 70 len 30]
            revert with memory
              from mem[64]
               len _72 + -mem[64] + 100
        _78 = mem[64]
        mem[64] = mem[64] + 64
        mem[_78] = 30
        mem[_78 + 32] = 'SafeMath: subtraction overflow'
        if stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['CHARITY'].field_0 > -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x444556454c4f504d454e54000000000000000000000000000000000000000000].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['INSURANCE'].field_0 + 10000:
            _80 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 30
            idx = 0
            while idx < 30:
                mem[idx + _80 + 68] = mem[idx + _78 + 32]
                idx = idx + 32
                continue 
            mem[_80 + 68] = mem[_80 + 70 len 30]
            revert with memory
              from mem[64]
               len _80 + -mem[64] + 100
        _86 = mem[64]
        mem[64] = mem[64] + 64
        mem[_86] = 30
        mem[_86 + 32] = 'SafeMath: subtraction overflow'
        if stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x4255595f414e445f4255524e0000000000000000000000000000000000000000].field_0 > -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x444556454c4f504d454e54000000000000000000000000000000000000000000].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['INSURANCE'].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['CHARITY'].field_0 + 10000:
            _88 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            mem[mem[64] + 36] = 30
            idx = 0
            while idx < 30:
                mem[idx + _88 + 68] = mem[idx + _86 + 32]
                idx = idx + 32
                continue 
            mem[_88 + 68] = mem[_88 + 70 len 30]
            revert with memory
              from mem[64]
               len _88 + -mem[64] + 100
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x474f5645524e414e43455f524557415244000000000000000000000000000000].field_0 = -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x444556454c4f504d454e54000000000000000000000000000000000000000000].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['INSURANCE'].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['CHARITY'].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x4255595f414e445f4255524e0000000000000000000000000000000000000000].field_0 + 10000
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x474f5645524e414e43455f524557415244000000000000000000000000000000].field_256 = stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x444556454c4f504d454e54000000000000000000000000000000000000000000].field_256
        require idx < ('cd', 4).length
        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
        mem[0] = 0x474f5645524e414e43455f524557415244000000000000000000000000000000
        mem[32] = sha3(address(cd[((32 * idx) + cd[4] + 36)]), 106) + 1
        if not stor106[address(cd[((32 * idx) + cd[4] + 36)])][1][0x474f5645524e414e43455f524557415244000000000000000000000000000000].field_0:
            stor106[address(cd[((32 * idx) + cd[4] + 36)])].field_0++
            stor106[address(cd[((32 * idx) + cd[4] + 36)])][stor106[address(cd[((32 * idx) + cd[4] + 36)])].field_0].field_0 = 0x474f5645524e414e43455f524557415244000000000000000000000000000000
            mem[0] = 0x474f5645524e414e43455f524557415244000000000000000000000000000000
            mem[32] = sha3(address(cd[((32 * idx) + cd[4] + 36)]), 106) + 1
            stor106[address(cd[((32 * idx) + cd[4] + 36)])][1][0x474f5645524e414e43455f524557415244000000000000000000000000000000].field_0 = stor106[address(cd[((32 * idx) + cd[4] + 36)])].field_0
        idx = idx + 1
        s = -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x444556454c4f504d454e54000000000000000000000000000000000000000000].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['INSURANCE'].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2]['CHARITY'].field_0 + -stor106[address(cd[((32 * idx) + cd[4] + 36)])][2][0x4255595f414e445f4255524e0000000000000000000000000000000000000000].field_0 + 10000
        continue 
}

function sub_98983db2(?) payable {
    require calldata.size - 4 >= 224
    require arg1 == address(arg1)
    require calldata.size - 100 >= 128
    if not stor103[arg2]:
        revert with 0, 'In', 0
    require ext_code.size(sub_acdd8243Address)
    staticcall sub_acdd8243Address.0x70a08231 with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 'Insufficient xWOW balance', 0
    if block.timestamp > arg4:
        revert with 0, 
                    32,
                    41,
                    0x72566f74655065726d697373696f6e56616c696461746f723a206578706972656420646561646c696e,
                    mem[ceil32(return_data.size) + 461 len 23]
    mem[ceil32(return_data.size) + 384 len 0] = None
    mem[ceil32(return_data.size) + 448 len 0] = None
    if arg7 > 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0:
        revert with 0, 
                    32,
                    34,
                    0x6545434453413a20696e76616c6964207369676e6174757265202773272076616c75,
                    mem[ceil32(return_data.size) + 1104 len 30]
    if arg5 != 27:
        if arg5 != 28:
            revert with 0, 
                        32,
                        34,
                        0x6445434453413a20696e76616c6964207369676e6174757265202776272076616c75,
                        mem[ceil32(return_data.size) + 1104 len 30]
    signer = erecover(sha3(0, sha3(0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f, sha3(24575559991779696), sha3(49), chainid, this.address), sha3(0x2a8592ae9745b9f9bb04c7d5cc88de981a65a276ed7b1acbe4306b12091fbbac, sha3(mem[ceil32(return_data.size) + 384]), sha3(mem[ceil32(return_data.size) + 448]), arg4)), arg5 << 248, arg6, arg7) 
    if not erecover.result:
        revert with ext_call.return_data[0 len return_data.size]
    if not address(signer):
        revert with 0, 'ECDSA: invalid signature'
    if address(signer) != address(arg1):
        revert with 0, 
                    32,
                    42,
                    0x73566f74655065726d697373696f6e56616c696461746f723a20696e76616c6964207369676e61747572,
                    Mask(144, 0, arg7),
                    mem[ceil32(return_data.size) + 1162 len 4]
    if arg3 < sub_efc1a9bf[arg2].field_512:
        revert with 0, 'Parameter value is out of bounds'
    if sub_efc1a9bf[arg2].field_768:
        if arg3 > sub_efc1a9bf[arg2].field_768:
            revert with 0, 'Parameter value is out of bounds'
    if not stor106[address(arg1)][1][arg2].field_0:
        if ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 < sub_efc1a9bf[arg2].field_256:
            revert with 0, 'SafeMath: addition overflow'
        if not stor106[address(arg1)][1][arg2].field_0:
            stor106[address(arg1)].field_0++
            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = arg2
            stor106[address(arg1)][1][arg2].field_0 = stor106[address(arg1)].field_0
        if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256:
            stor106[address(arg1)][2][arg2].field_0 = arg3
            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
            sub_efc1a9bf[arg2].field_0 = 0
        else:
            if not arg3:
                if not sub_efc1a9bf[arg2].field_0:
                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256:
                        revert with 0, 'SafeMath: division by zero'
                    stor106[address(arg1)][2][arg2].field_0 = arg3
                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                    sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256
                else:
                    if sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_0 != sub_efc1a9bf[arg2].field_256:
                        revert with 0, 
                                    32,
                                    33,
                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[ceil32(return_data.size) + 1519 len 31]
                    if sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 < sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256:
                        revert with 0, 'SafeMath: division by zero'
                    stor106[address(arg1)][2][arg2].field_0 = arg3
                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                    sub_efc1a9bf[arg2].field_0 = sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256
            else:
                if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                    revert with 0, 
                                32,
                                33,
                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[ceil32(return_data.size) + 1519 len 31]
                if not sub_efc1a9bf[arg2].field_0:
                    if ext_call.return_data[0] * arg3 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256:
                        revert with 0, 'SafeMath: division by zero'
                    stor106[address(arg1)][2][arg2].field_0 = arg3
                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                    sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256
                else:
                    if sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_0 != sub_efc1a9bf[arg2].field_256:
                        revert with 0, 
                                    32,
                                    33,
                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[ceil32(return_data.size) + 1519 len 31]
                    if (ext_call.return_data[0] * arg3) + (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) < sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256:
                        revert with 0, 'SafeMath: division by zero'
                    stor106[address(arg1)][2][arg2].field_0 = arg3
                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                    sub_efc1a9bf[arg2].field_0 = (ext_call.return_data[0] * arg3) + (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256
        sub_efc1a9bf[arg2].field_256 += ext_call.return_data[0]
    else:
        if stor106[address(arg1)][2][arg2].field_256 > sub_efc1a9bf[arg2].field_256:
            revert with 0, 'SafeMath: subtraction overflow'
        if not sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
            if ext_call.return_data[0] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if not ext_call.return_data[0]:
                if stor106[address(arg1)][1][arg2].field_0:
                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                    require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                    stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                    require stor106[address(arg1)].field_0
                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                    stor106[address(arg1)].field_0--
                    stor106[address(arg1)][1][arg2].field_0 = 0
            if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                stor106[address(arg1)][2][arg2].field_0 = arg3
                stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                sub_efc1a9bf[arg2].field_0 = 0
            else:
                if not arg3:
                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                        revert with 0, 'SafeMath: division by zero'
                    stor106[address(arg1)][2][arg2].field_0 = arg3
                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                    sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                else:
                    if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                        revert with 0, 
                                    32,
                                    33,
                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[ceil32(return_data.size) + 1711 len 31]
                    if ext_call.return_data[0] * arg3 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                        revert with 0, 'SafeMath: division by zero'
                    stor106[address(arg1)][2][arg2].field_0 = arg3
                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                    sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
        else:
            if not sub_efc1a9bf[arg2].field_0:
                if not stor106[address(arg1)][2][arg2].field_0:
                    if ext_call.return_data[0] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if not ext_call.return_data[0]:
                        if stor106[address(arg1)][1][arg2].field_0:
                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                            require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                            stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                            require stor106[address(arg1)].field_0
                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                            stor106[address(arg1)].field_0--
                            stor106[address(arg1)][1][arg2].field_0 = 0
                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                        stor106[address(arg1)][2][arg2].field_0 = arg3
                        stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                        sub_efc1a9bf[arg2].field_0 = 0
                    else:
                        if not arg3:
                            if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                revert with 0, 'SafeMath: division by zero'
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                        else:
                            if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                                revert with 0, 
                                            32,
                                            33,
                                            0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(return_data.size) + 1711 len 31]
                            if ext_call.return_data[0] * arg3 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                revert with 0, 'SafeMath: division by zero'
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                else:
                    if stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / stor106[address(arg1)][2][arg2].field_0 != stor106[address(arg1)][2][arg2].field_256:
                        revert with 0, 
                                    32,
                                    33,
                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[ceil32(return_data.size) + 1711 len 31]
                    if 0 <= stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0:
                        if ext_call.return_data[0] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if stor106[address(arg1)][1][arg2].field_0:
                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                                require stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                stor106[address(arg1)].field_0--
                                stor106[address(arg1)][1][arg2].field_0 = 0
                        if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = 0
                        else:
                            if not arg3:
                                if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    revert with 0, 'SafeMath: division by zero'
                                stor106[address(arg1)][2][arg2].field_0 = arg3
                                stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                            else:
                                if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 1711 len 31]
                                if ext_call.return_data[0] * arg3 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    revert with 0, 'SafeMath: division by zero'
                                stor106[address(arg1)][2][arg2].field_0 = arg3
                                stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                    else:
                        if stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 > 0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            revert with 0, 'SafeMath: division by zero'
                        if ext_call.return_data[0] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if stor106[address(arg1)][1][arg2].field_0:
                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                                require stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                stor106[address(arg1)].field_0--
                                stor106[address(arg1)][1][arg2].field_0 = 0
                        if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = 0
                        else:
                            if not arg3:
                                if not -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                                else:
                                    if (sub_efc1a9bf[arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256 != sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 1839 len 31]
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = (sub_efc1a9bf[arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                            else:
                                if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 1839 len 31]
                                if not -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    if ext_call.return_data[0] * arg3 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                                else:
                                    if (sub_efc1a9bf[arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256 != sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 1839 len 31]
                                    if ext_call.return_data[0] * arg3 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = (ext_call.return_data[0] * arg3) + (sub_efc1a9bf[arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * -1 * stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
            else:
                if sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_0 != sub_efc1a9bf[arg2].field_256:
                    revert with 0, 
                                32,
                                33,
                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[ceil32(return_data.size) + 1711 len 31]
                if not stor106[address(arg1)][2][arg2].field_0:
                    if sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 <= 0:
                        if ext_call.return_data[0] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if stor106[address(arg1)][1][arg2].field_0:
                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                                require stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                stor106[address(arg1)].field_0--
                                stor106[address(arg1)][1][arg2].field_0 = 0
                        if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = 0
                        else:
                            if not arg3:
                                if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    revert with 0, 'SafeMath: division by zero'
                                stor106[address(arg1)][2][arg2].field_0 = arg3
                                stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                            else:
                                if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 1711 len 31]
                                if ext_call.return_data[0] * arg3 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    revert with 0, 'SafeMath: division by zero'
                                stor106[address(arg1)][2][arg2].field_0 = arg3
                                stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                    else:
                        if 0 > sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            revert with 0, 'SafeMath: division by zero'
                        if ext_call.return_data[0] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if stor106[address(arg1)][1][arg2].field_0:
                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                                require stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                stor106[address(arg1)].field_0--
                                stor106[address(arg1)][1][arg2].field_0 = 0
                        if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = 0
                        else:
                            if not arg3:
                                if not sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                                else:
                                    if (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256 != sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 1839 len 31]
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                            else:
                                if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 1839 len 31]
                                if not sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    if ext_call.return_data[0] * arg3 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                                else:
                                    if (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256 != sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 1839 len 31]
                                    if ext_call.return_data[0] * arg3 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = (ext_call.return_data[0] * arg3) + (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                else:
                    if stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 / stor106[address(arg1)][2][arg2].field_0 != stor106[address(arg1)][2][arg2].field_256:
                        revert with 0, 
                                    32,
                                    33,
                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[ceil32(return_data.size) + 1711 len 31]
                    if sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0 <= stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0:
                        if ext_call.return_data[0] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if stor106[address(arg1)][1][arg2].field_0:
                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                                require stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                stor106[address(arg1)].field_0--
                                stor106[address(arg1)][1][arg2].field_0 = 0
                        if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = 0
                        else:
                            if not arg3:
                                if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    revert with 0, 'SafeMath: division by zero'
                                stor106[address(arg1)][2][arg2].field_0 = arg3
                                stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                            else:
                                if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 1711 len 31]
                                if ext_call.return_data[0] * arg3 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    revert with 0, 'SafeMath: division by zero'
                                stor106[address(arg1)][2][arg2].field_0 = arg3
                                stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                    else:
                        if stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0 > sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            revert with 0, 'SafeMath: division by zero'
                        if ext_call.return_data[0] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if not ext_call.return_data[0]:
                            if stor106[address(arg1)][1][arg2].field_0:
                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                require stor106[address(arg1)][1][arg2].field_0 - 1 < stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)][1][arg2].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][arg2].field_0
                                require stor106[address(arg1)].field_0
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                stor106[address(arg1)].field_0--
                                stor106[address(arg1)][1][arg2].field_0 = 0
                        if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                            stor106[address(arg1)][2][arg2].field_0 = arg3
                            stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                            sub_efc1a9bf[arg2].field_0 = 0
                        else:
                            if not arg3:
                                if not (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                                else:
                                    if (sub_efc1a9bf[arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256 != sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 1839 len 31]
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = (sub_efc1a9bf[arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                            else:
                                if ext_call.return_data[0] * arg3 / arg3 != ext_call.return_data[0]:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 1839 len 31]
                                if not (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                    if ext_call.return_data[0] * arg3 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = ext_call.return_data[0] * arg3 / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
                                else:
                                    if (sub_efc1a9bf[arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256 != sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 1839 len 31]
                                    if ext_call.return_data[0] * arg3 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256:
                                        revert with 0, 'SafeMath: division by zero'
                                    stor106[address(arg1)][2][arg2].field_0 = arg3
                                    stor106[address(arg1)][2][arg2].field_256 = ext_call.return_data[0]
                                    sub_efc1a9bf[arg2].field_0 = (ext_call.return_data[0] * arg3) + (sub_efc1a9bf[arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) - (stor106[address(arg1)][2][arg2].field_256 * (sub_efc1a9bf[arg2].field_256 * sub_efc1a9bf[arg2].field_0) - (stor106[address(arg1)][2][arg2].field_256 * stor106[address(arg1)][2][arg2].field_0) / sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256) / ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
        sub_efc1a9bf[arg2].field_256 = ext_call.return_data[0] + sub_efc1a9bf[arg2].field_256 - stor106[address(arg1)][2][arg2].field_256
}

function sub_3b68ccdb(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    mem[0] = address(arg1)
    mem[32] = 106
    mem[96] = stor106[address(arg1)].field_0
    if not stor106[address(arg1)].field_0:
        mem[(32 * stor106[address(arg1)].field_0) + 132] = address(arg1)
        require ext_code.size(sub_acdd8243Address)
        staticcall sub_acdd8243Address.0x70a08231 with:
                gas gas_remaining wei
               args address(arg1)
        mem[(32 * stor106[address(arg1)].field_0) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[64] = (32 * stor106[address(arg1)].field_0) + ceil32(return_data.size) + 128
        require return_data.size >= 32
        idx = 0
        s = 0
        while idx < stor106[address(arg1)].field_0:
            require idx < mem[96]
            _12464 = mem[(32 * idx) + 128]
            _12466 = sha3(mem[(32 * idx) + 128], sha3(address(arg1), 106) + 2)
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 104
            _12467 = sha3(mem[(32 * idx) + 128], 104)
            if stor106[address(arg1)][2][mem[(32 * idx) + 128]].field_0 < sub_efc1a9bf[mem[(32 * idx) + 128]].field_512:
                _12468 = mem[64]
                mem[64] = mem[64] + 128
                mem[_12468] = 0
                mem[_12468 + 32] = 0
                mem[_12468 + 64] = 0
                mem[_12468 + 96] = 0
                mem[0] = _12464
                mem[32] = 104
                _12471 = mem[64]
                mem[64] = mem[64] + 128
                mem[_12471] = sub_efc1a9bf[_12464].field_0
                mem[_12471 + 32] = sub_efc1a9bf[_12464].field_256
                mem[_12471 + 64] = sub_efc1a9bf[_12464].field_512
                mem[_12471 + 96] = sub_efc1a9bf[_12464].field_768
                _12472 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12472] = 32
                mem[_12472 + 32] = 'Parameter value is out of bounds'
                if stor2[_12467] < sub_efc1a9bf[_12464].field_512:
                    _12478 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 32
                    idx = 0
                    while idx < 32:
                        mem[idx + _12478 + 68] = mem[idx + _12472 + 32]
                        idx = idx + 32
                        continue 
                    revert with memory
                      from mem[64]
                       len _12478 + -mem[64] + 100
                if not sub_efc1a9bf[_12464].field_768:
                    _12485 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12485] = 32
                    mem[_12485 + 32] = 'Parameter value is out of bounds'
                    mem[0] = _12464
                    mem[32] = sha3(address(arg1), 106) + 1
                    if not stor106[address(arg1)][1][_12464].field_0:
                        if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[0] = _12464
                        mem[32] = sha3(address(arg1), 106) + 1
                        if stor106[address(arg1)][1][_12464].field_0:
                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                mem[0] = _12464
                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_12464].field_0 = 0
                            else:
                                if not stor2[_12467]:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        _13311 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13311] = 26
                                        mem[_13311 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13311 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13510 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13510] = 26
                                        mem[_13510 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13510 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13509 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13509] = 26
                                        mem[_13509 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13509 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13798 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13798] = 26
                                        mem[_13798 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13798 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                        else:
                            stor106[address(arg1)].field_0++
                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                mem[0] = _12464
                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_12464].field_0 = 0
                            else:
                                if not stor2[_12467]:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        _13312 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13312] = 26
                                        mem[_13312 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13312 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13515 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13515] = 26
                                        mem[_13515 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13515 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13514 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13514] = 26
                                        mem[_13514 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13514 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13807 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13807] = 26
                                        mem[_13807 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13807 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                        sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                    else:
                        _12554 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12554] = 0
                        mem[_12554 + 32] = 0
                        mem[0] = _12464
                        mem[32] = sha3(address(arg1), 106) + 2
                        _12569 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12569] = stor106[address(arg1)][2][_12464].field_0
                        mem[_12569 + 32] = stor106[address(arg1)][2][_12464].field_256
                        _12586 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12586] = 30
                        mem[_12586 + 32] = 'SafeMath: subtraction overflow'
                        if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                            _12629 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 30
                            idx = 0
                            while idx < 30:
                                mem[idx + _12629 + 68] = mem[idx + _12586 + 32]
                                idx = idx + 32
                                continue 
                            mem[_12629 + 68] = mem[_12629 + 70 len 30]
                            revert with memory
                              from mem[64]
                               len _12629 + -mem[64] + 100
                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                            if ext_call.return_data[0] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if ext_call.return_data[0]:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                    mem[0] = _12464
                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_12464].field_0 = 0
                                else:
                                    if not stor2[_12467]:
                                        _13529 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13529] = 26
                                        mem[_13529 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13529 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13828 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13828] = 26
                                        mem[_13828 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13828 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            else:
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                if not stor106[address(arg1)][1][_12464].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor2[_12467]:
                                            _15057 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15057] = 26
                                            mem[_15057 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _15057 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _15405 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15405] = 26
                                            mem[_15405 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _15405 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                    require stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                    stor106[address(arg1)].field_0--
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor2[_12467]:
                                            _15559 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15559] = 26
                                            mem[_15559 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _15559 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _15809 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15809] = 26
                                            mem[_15809 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _15809 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                        else:
                            if not sub_efc1a9bf[_12464].field_0:
                                if not stor106[address(arg1)][2][_12464].field_0:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor2[_12467]:
                                                _15404 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15404] = 26
                                                mem[_15404 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15404 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor2[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _15672 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15672] = 26
                                                mem[_15672 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15672 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_12464].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _16724 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16724] = 26
                                                    mem[_16724 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16724 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _17149 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_17149] = 26
                                                    mem[_17149 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _17149 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_12464].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _17358 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_17358] = 26
                                                    mem[_17358 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _17358 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _17742 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_17742] = 26
                                                    mem[_17742 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _17742 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _15670 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15670] = 26
                                                    mem[_15670 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15670 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15935 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15935] = 26
                                                    mem[_15935 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _15935 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17146 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17146] = 26
                                                        mem[_17146 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17146 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17544 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17544] = 26
                                                        mem[_17544 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17544 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17738 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17738] = 26
                                                        mem[_17738 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17738 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18139 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18139] = 26
                                                        mem[_18139 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18139 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        _12945 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_12945] = 30
                                        mem[_12945 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                            _13020 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _13020 + 68] = mem[idx + _12945 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_13020 + 68] = mem[_13020 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _13020 + -mem[64] + 100
                                        _13241 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13241] = 26
                                        mem[_13241 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13241 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        _18143 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18143] = 26
                                                        mem[_18143 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18143 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _18660 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18660] = 26
                                                        mem[_18660 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18660 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18659 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18659] = 26
                                                        mem[_18659 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18659 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _19276 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19276] = 26
                                                        mem[_19276 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19276 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _20615 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20615] = 26
                                                            mem[_20615 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _20615 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _21242 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21242] = 26
                                                            mem[_21242 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21242 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _21241 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21241] = 26
                                                            mem[_21241 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21241 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _21788 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21788] = 26
                                                            mem[_21788 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21788 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _21535 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21535] = 26
                                                            mem[_21535 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21535 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _22027 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22027] = 26
                                                            mem[_22027 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22027 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22026 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22026] = 26
                                                            mem[_22026 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22026 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22493 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22493] = 26
                                                            mem[_22493 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22493 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            else:
                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                if not stor106[address(arg1)][2][_12464].field_0:
                                    if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _15668 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15668] = 26
                                                    mem[_15668 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15668 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15928 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15928] = 26
                                                    mem[_15928 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _15928 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17141 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17141] = 26
                                                        mem[_17141 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17141 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17536 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17536] = 26
                                                        mem[_17536 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17536 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17736 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17736] = 26
                                                        mem[_17736 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17736 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18131 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18131] = 26
                                                        mem[_18131 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18131 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        _12944 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_12944] = 30
                                        mem[_12944 + 32] = 'SafeMath: subtraction overflow'
                                        if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            _13017 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _13017 + 68] = mem[idx + _12944 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_13017 + 68] = mem[_13017 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _13017 + -mem[64] + 100
                                        _13238 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13238] = 26
                                        mem[_13238 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13238 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        _18135 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18135] = 26
                                                        mem[_18135 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18135 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _18642 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18642] = 26
                                                        mem[_18642 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18642 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18641 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18641] = 26
                                                        mem[_18641 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18641 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _19259 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19259] = 26
                                                        mem[_19259 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19259 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _20606 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20606] = 26
                                                            mem[_20606 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _20606 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _21231 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21231] = 26
                                                            mem[_21231 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21231 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _21230 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21230] = 26
                                                            mem[_21230 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21230 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _21777 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21777] = 26
                                                            mem[_21777 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21777 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _21529 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21529] = 26
                                                            mem[_21529 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21529 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _22018 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22018] = 26
                                                            mem[_22018 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22018 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22017 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22017] = 26
                                                            mem[_22017 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22017 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22475 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22475] = 26
                                                            mem[_22475 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22475 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _15926 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15926] = 26
                                                    mem[_15926 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _15926 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16271 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16271] = 26
                                                    mem[_16271 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16271 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17533 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17533] = 26
                                                        mem[_17533 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17533 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17914 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17914] = 26
                                                        mem[_17914 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17914 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _18127 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18127] = 26
                                                        mem[_18127 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18127 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18625 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18625] = 26
                                                        mem[_18625 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18625 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        _13016 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13016] = 30
                                        mem[_13016 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            _13109 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _13109 + 68] = mem[idx + _13016 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_13109 + 68] = mem[_13109 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _13109 + -mem[64] + 100
                                        _13406 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13406] = 26
                                        mem[_13406 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13406 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        _18629 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18629] = 26
                                                        mem[_18629 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18629 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _19245 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19245] = 26
                                                        mem[_19245 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19245 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _19244 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19244] = 26
                                                        mem[_19244 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19244 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _19917 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19917] = 26
                                                        mem[_19917 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19917 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _21225 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21225] = 26
                                                            mem[_21225 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21225 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _21769 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21769] = 26
                                                            mem[_21769 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21769 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _21768 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21768] = 26
                                                            mem[_21768 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21768 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22233 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22233] = 26
                                                            mem[_22233 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22233 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _22012 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22012] = 26
                                                            mem[_22012 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22012 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _22462 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22462] = 26
                                                            mem[_22462 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22462 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22461 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22461] = 26
                                                            mem[_22461 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22461 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _23011 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23011] = 26
                                                            mem[_23011 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _23011 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                        sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                else:
                    _12497 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12497] = 32
                    mem[_12497 + 32] = 'Parameter value is out of bounds'
                    if stor2[_12467] > sub_efc1a9bf[_12464].field_768:
                        _12506 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _12506 + 68] = mem[idx + _12497 + 32]
                            idx = idx + 32
                            continue 
                        revert with memory
                          from mem[64]
                           len _12506 + -mem[64] + 100
                    mem[0] = _12464
                    mem[32] = sha3(address(arg1), 106) + 1
                    if not stor106[address(arg1)][1][_12464].field_0:
                        if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[0] = _12464
                        mem[32] = sha3(address(arg1), 106) + 1
                        if stor106[address(arg1)][1][_12464].field_0:
                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                mem[0] = _12464
                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_12464].field_0 = 0
                            else:
                                if not stor2[_12467]:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        _13424 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13424] = 26
                                        mem[_13424 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13424 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13667 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13667] = 26
                                        mem[_13667 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13667 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13666 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13666] = 26
                                        mem[_13666 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13666 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _14007 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_14007] = 26
                                        mem[_14007 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _14007 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                        else:
                            stor106[address(arg1)].field_0++
                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                mem[0] = _12464
                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_12464].field_0 = 0
                            else:
                                if not stor2[_12467]:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        _13425 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13425] = 26
                                        mem[_13425 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13425 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13672 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13672] = 26
                                        mem[_13672 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13672 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _13671 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13671] = 26
                                        mem[_13671 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13671 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _14016 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_14016] = 26
                                        mem[_14016 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _14016 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                        sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                    else:
                        _12571 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12571] = 0
                        mem[_12571 + 32] = 0
                        mem[0] = _12464
                        mem[32] = sha3(address(arg1), 106) + 2
                        _12591 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12591] = stor106[address(arg1)][2][_12464].field_0
                        mem[_12591 + 32] = stor106[address(arg1)][2][_12464].field_256
                        _12612 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12612] = 30
                        mem[_12612 + 32] = 'SafeMath: subtraction overflow'
                        if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                            _12646 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 30
                            idx = 0
                            while idx < 30:
                                mem[idx + _12646 + 68] = mem[idx + _12612 + 32]
                                idx = idx + 32
                                continue 
                            mem[_12646 + 68] = mem[_12646 + 70 len 30]
                            revert with memory
                              from mem[64]
                               len _12646 + -mem[64] + 100
                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                            if ext_call.return_data[0] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if ext_call.return_data[0]:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                    mem[0] = _12464
                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_12464].field_0 = 0
                                else:
                                    if not stor2[_12467]:
                                        _13686 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13686] = 26
                                        mem[_13686 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13686 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _14037 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_14037] = 26
                                        mem[_14037 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _14037 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            else:
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                if not stor106[address(arg1)][1][_12464].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor2[_12467]:
                                            _15267 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15267] = 26
                                            mem[_15267 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _15267 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _15566 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15566] = 26
                                            mem[_15566 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _15566 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                    require stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                    stor106[address(arg1)].field_0--
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor2[_12467]:
                                            _15698 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15698] = 26
                                            mem[_15698 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _15698 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _15969 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_15969] = 26
                                            mem[_15969 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                s = 32
                                                while s < 26:
                                                    mem[s + mem[64] + 68] = mem[s + _15969 + 32]
                                                    s = s + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                        else:
                            if not sub_efc1a9bf[_12464].field_0:
                                if not stor106[address(arg1)][2][_12464].field_0:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor2[_12467]:
                                                _15565 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15565] = 26
                                                mem[_15565 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15565 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor2[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _15818 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15818] = 26
                                                mem[_15818 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15818 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_12464].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _16967 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16967] = 26
                                                    mem[_16967 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16967 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _17373 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_17373] = 26
                                                    mem[_17373 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _17373 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_12464].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _17580 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_17580] = 26
                                                    mem[_17580 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _17580 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _17969 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_17969] = 26
                                                    mem[_17969 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _17969 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _15816 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15816] = 26
                                                    mem[_15816 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15816 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16121 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16121] = 26
                                                    mem[_16121 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16121 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17370 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17370] = 26
                                                        mem[_17370 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17370 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17759 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17759] = 26
                                                        mem[_17759 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17759 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17965 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17965] = 26
                                                        mem[_17965 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17965 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18415 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18415] = 26
                                                        mem[_18415 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18415 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        _12982 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_12982] = 30
                                        mem[_12982 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                            _13066 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _13066 + 68] = mem[idx + _12982 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_13066 + 68] = mem[_13066 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _13066 + -mem[64] + 100
                                        _13331 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13331] = 26
                                        mem[_13331 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13331 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        _18419 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18419] = 26
                                                        mem[_18419 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18419 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _18991 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18991] = 26
                                                        mem[_18991 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18991 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18990 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18990] = 26
                                                        mem[_18990 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18990 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _19644 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19644] = 26
                                                        mem[_19644 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19644 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _20978 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20978] = 26
                                                            mem[_20978 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _20978 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _21559 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21559] = 26
                                                            mem[_21559 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21559 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _21558 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21558] = 26
                                                            mem[_21558 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21558 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22053 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22053] = 26
                                                            mem[_22053 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22053 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _21822 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21822] = 26
                                                            mem[_21822 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21822 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _22284 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22284] = 26
                                                            mem[_22284 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22284 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22283 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22283] = 26
                                                            mem[_22283 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22283 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22787 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22787] = 26
                                                            mem[_22787 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22787 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            else:
                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                if not stor106[address(arg1)][2][_12464].field_0:
                                    if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _15814 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15814] = 26
                                                    mem[_15814 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15814 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16114 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16114] = 26
                                                    mem[_16114 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16114 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17365 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17365] = 26
                                                        mem[_17365 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17365 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17751 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17751] = 26
                                                        mem[_17751 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17751 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17963 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17963] = 26
                                                        mem[_17963 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17963 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18407 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18407] = 26
                                                        mem[_18407 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18407 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        _12981 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_12981] = 30
                                        mem[_12981 + 32] = 'SafeMath: subtraction overflow'
                                        if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            _13063 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _13063 + 68] = mem[idx + _12981 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_13063 + 68] = mem[_13063 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _13063 + -mem[64] + 100
                                        _13328 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13328] = 26
                                        mem[_13328 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13328 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        _18411 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18411] = 26
                                                        mem[_18411 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18411 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _18973 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18973] = 26
                                                        mem[_18973 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18973 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18972 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18972] = 26
                                                        mem[_18972 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18972 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _19627 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19627] = 26
                                                        mem[_19627 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19627 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _20969 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20969] = 26
                                                            mem[_20969 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _20969 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _21548 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21548] = 26
                                                            mem[_21548 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21548 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _21547 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21547] = 26
                                                            mem[_21547 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21547 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22042 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22042] = 26
                                                            mem[_22042 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22042 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _21816 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21816] = 26
                                                            mem[_21816 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21816 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _22275 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22275] = 26
                                                            mem[_22275 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22275 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22274 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22274] = 26
                                                            mem[_22274 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22274 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22769 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22769] = 26
                                                            mem[_22769 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22769 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    _16112 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16112] = 26
                                                    mem[_16112 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16112 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16506 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16506] = 26
                                                    mem[_16506 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16506 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _17748 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17748] = 26
                                                        mem[_17748 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17748 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18155 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18155] = 26
                                                        mem[_18155 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18155 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        _18403 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18403] = 26
                                                        mem[_18403 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18403 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18956 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18956] = 26
                                                        mem[_18956 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18956 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        _13062 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13062] = 30
                                        mem[_13062 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                            _13174 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _13174 + 68] = mem[idx + _13062 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_13174 + 68] = mem[_13174 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _13174 + -mem[64] + 100
                                        _13535 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_13535] = 26
                                        mem[_13535 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _13535 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor2[_12467]:
                                                    if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        _18960 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18960] = 26
                                                        mem[_18960 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18960 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _19613 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19613] = 26
                                                        mem[_19613 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19613 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _19612 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19612] = 26
                                                        mem[_19612 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _19612 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _20294 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20294] = 26
                                                        mem[_20294 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _20294 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _21542 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_21542] = 26
                                                            mem[_21542 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _21542 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _22034 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22034] = 26
                                                            mem[_22034 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22034 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22033 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22033] = 26
                                                            mem[_22033 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22033 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22502 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22502] = 26
                                                            mem[_22502 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22502 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor2[_12467]:
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _22269 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22269] = 26
                                                            mem[_22269 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22269 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _22756 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22756] = 26
                                                            mem[_22756 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22756 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_12467] / stor2[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _22755 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22755] = 26
                                                            mem[_22755 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _22755 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor2[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _23366 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23366] = 26
                                                            mem[_23366 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _23366 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor2[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor2[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                        sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
            else:
                if sub_efc1a9bf[mem[(32 * idx) + 128]].field_768 <= 0:
                    _12469 = mem[64]
                    mem[64] = mem[64] + 128
                    mem[_12469] = 0
                    mem[_12469 + 32] = 0
                    mem[_12469 + 64] = 0
                    mem[_12469 + 96] = 0
                    mem[0] = _12464
                    mem[32] = 104
                    _12474 = mem[64]
                    mem[64] = mem[64] + 128
                    mem[_12474] = sub_efc1a9bf[_12464].field_0
                    mem[_12474 + 32] = sub_efc1a9bf[_12464].field_256
                    mem[_12474 + 64] = sub_efc1a9bf[_12464].field_512
                    mem[_12474 + 96] = sub_efc1a9bf[_12464].field_768
                    _12475 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12475] = 32
                    mem[_12475 + 32] = 'Parameter value is out of bounds'
                    if stor[_12466] < sub_efc1a9bf[_12464].field_512:
                        _12480 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _12480 + 68] = mem[idx + _12475 + 32]
                            idx = idx + 32
                            continue 
                        revert with memory
                          from mem[64]
                           len _12480 + -mem[64] + 100
                    if not sub_efc1a9bf[_12464].field_768:
                        _12488 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12488] = 32
                        mem[_12488 + 32] = 'Parameter value is out of bounds'
                        mem[0] = _12464
                        mem[32] = sha3(address(arg1), 106) + 1
                        if not stor106[address(arg1)][1][_12464].field_0:
                            if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            if stor106[address(arg1)][1][_12464].field_0:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                    mem[0] = _12464
                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_12464].field_0 = 0
                                else:
                                    if not stor[_12466]:
                                        if not sub_efc1a9bf[_12464].field_0:
                                            _13334 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13334] = 26
                                            mem[_13334 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13334 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13554 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13554] = 26
                                            mem[_13554 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13554 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_12464].field_0:
                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13553 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13553] = 26
                                            mem[_13553 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13553 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13850 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13850] = 26
                                            mem[_13850 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13850 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                            else:
                                stor106[address(arg1)].field_0++
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                    mem[0] = _12464
                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_12464].field_0 = 0
                                else:
                                    if not stor[_12466]:
                                        if not sub_efc1a9bf[_12464].field_0:
                                            _13335 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13335] = 26
                                            mem[_13335 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13335 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13559 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13559] = 26
                                            mem[_13559 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13559 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_12464].field_0:
                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13558 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13558] = 26
                                            mem[_13558 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13558 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13859 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13859] = 26
                                            mem[_13859 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13859 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                            sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                        else:
                            _12558 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12558] = 0
                            mem[_12558 + 32] = 0
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 2
                            _12576 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12576] = stor106[address(arg1)][2][_12464].field_0
                            mem[_12576 + 32] = stor106[address(arg1)][2][_12464].field_256
                            _12593 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12593] = 30
                            mem[_12593 + 32] = 'SafeMath: subtraction overflow'
                            if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                                _12633 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 30
                                idx = 0
                                while idx < 30:
                                    mem[idx + _12633 + 68] = mem[idx + _12593 + 32]
                                    idx = idx + 32
                                    continue 
                                mem[_12633 + 68] = mem[_12633 + 70 len 30]
                                revert with memory
                                  from mem[64]
                                   len _12633 + -mem[64] + 100
                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                if ext_call.return_data[0] < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if ext_call.return_data[0]:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor[_12466]:
                                            _13573 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13573] = 26
                                            mem[_13573 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13573 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13880 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13880] = 26
                                            mem[_13880 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13880 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    if not stor106[address(arg1)][1][_12464].field_0:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor[_12466]:
                                                _15102 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15102] = 26
                                                mem[_15102 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15102 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _15438 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15438] = 26
                                                mem[_15438 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15438 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                        require stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                        stor106[address(arg1)].field_0--
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor[_12466]:
                                                _15587 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15587] = 26
                                                mem[_15587 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15587 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _15846 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15846] = 26
                                                mem[_15846 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    s = 32
                                                    while s < 26:
                                                        mem[s + mem[64] + 68] = mem[s + _15846 + 32]
                                                        s = s + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            else:
                                if not sub_efc1a9bf[_12464].field_0:
                                    if not stor106[address(arg1)][2][_12464].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor[_12466]:
                                                    _15437 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15437] = 26
                                                    mem[_15437 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15437 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15704 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15704] = 26
                                                    mem[_15704 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15704 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _16775 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16775] = 26
                                                        mem[_16775 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16775 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17198 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17198] = 26
                                                        mem[_17198 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17198 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _17406 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17406] = 26
                                                        mem[_17406 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17406 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17786 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17786] = 26
                                                        mem[_17786 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17786 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _15702 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15702] = 26
                                                        mem[_15702 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15702 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _15982 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15982] = 26
                                                        mem[_15982 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15982 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17195 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17195] = 26
                                                            mem[_17195 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17195 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17594 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17594] = 26
                                                            mem[_17594 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17594 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17782 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17782] = 26
                                                            mem[_17782 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17782 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18209 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18209] = 26
                                                            mem[_18209 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18209 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            _12953 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_12953] = 30
                                            mem[_12953 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                                _13033 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _13033 + 68] = mem[idx + _12953 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_13033 + 68] = mem[_13033 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _13033 + -mem[64] + 100
                                            _13266 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13266] = 26
                                            mem[_13266 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13266 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _18213 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18213] = 26
                                                            mem[_18213 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18213 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _18745 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18745] = 26
                                                            mem[_18745 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18745 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18744 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18744] = 26
                                                            mem[_18744 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18744 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19359 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19359] = 26
                                                            mem[_19359 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19359 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _20692 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20692] = 26
                                                                mem[_20692 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20692 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _21314 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21314] = 26
                                                                mem[_21314 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21314 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21313 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21313] = 26
                                                                mem[_21313 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21313 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21845 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21845] = 26
                                                                mem[_21845 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21845 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21590 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21590] = 26
                                                                mem[_21590 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21590 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _22084 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22084] = 26
                                                                mem[_22084 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22084 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22083 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22083] = 26
                                                                mem[_22083 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22083 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22569 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22569] = 26
                                                                mem[_22569 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22569 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not stor106[address(arg1)][2][_12464].field_0:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _15700 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15700] = 26
                                                        mem[_15700 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15700 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _15975 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15975] = 26
                                                        mem[_15975 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15975 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17190 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17190] = 26
                                                            mem[_17190 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17190 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17586 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17586] = 26
                                                            mem[_17586 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17586 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17780 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17780] = 26
                                                            mem[_17780 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17780 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18201 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18201] = 26
                                                            mem[_18201 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18201 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            _12952 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_12952] = 30
                                            mem[_12952 + 32] = 'SafeMath: subtraction overflow'
                                            if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                _13030 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _13030 + 68] = mem[idx + _12952 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_13030 + 68] = mem[_13030 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _13030 + -mem[64] + 100
                                            _13263 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13263] = 26
                                            mem[_13263 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13263 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _18205 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18205] = 26
                                                            mem[_18205 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18205 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _18727 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18727] = 26
                                                            mem[_18727 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18727 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18726 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18726] = 26
                                                            mem[_18726 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18726 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19342 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19342] = 26
                                                            mem[_19342 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19342 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _20683 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20683] = 26
                                                                mem[_20683 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20683 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _21303 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21303] = 26
                                                                mem[_21303 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21303 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21302 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21302] = 26
                                                                mem[_21302 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21302 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21834 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21834] = 26
                                                                mem[_21834 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21834 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21584 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21584] = 26
                                                                mem[_21584 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21584 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _22075 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22075] = 26
                                                                mem[_22075 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22075 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22074 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22074] = 26
                                                                mem[_22074 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22074 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22551 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22551] = 26
                                                                mem[_22551 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22551 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _15973 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15973] = 26
                                                        mem[_15973 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15973 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _16328 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16328] = 26
                                                        mem[_16328 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16328 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17583 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17583] = 26
                                                            mem[_17583 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17583 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17973 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17973] = 26
                                                            mem[_17973 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17973 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _18197 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18197] = 26
                                                            mem[_18197 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18197 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18710 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18710] = 26
                                                            mem[_18710 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18710 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            _13029 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13029] = 30
                                            mem[_13029 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                _13123 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _13123 + 68] = mem[idx + _13029 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_13123 + 68] = mem[_13123 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _13123 + -mem[64] + 100
                                            _13436 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13436] = 26
                                            mem[_13436 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13436 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _18714 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18714] = 26
                                                            mem[_18714 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18714 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _19328 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19328] = 26
                                                            mem[_19328 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19328 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19327 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19327] = 26
                                                            mem[_19327 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19327 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19996 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19996] = 26
                                                            mem[_19996 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19996 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21297 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21297] = 26
                                                                mem[_21297 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21297 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _21826 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21826] = 26
                                                                mem[_21826 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21826 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21825 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21825] = 26
                                                                mem[_21825 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21825 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22288 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22288] = 26
                                                                mem[_22288 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22288 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _22069 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22069] = 26
                                                                mem[_22069 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22069 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _22538 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22538] = 26
                                                                mem[_22538 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22538 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22537 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22537] = 26
                                                                mem[_22537 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22537 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _23097 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_23097] = 26
                                                                mem[_23097 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _23097 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                    else:
                        _12499 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12499] = 32
                        mem[_12499 + 32] = 'Parameter value is out of bounds'
                        if stor[_12466] > sub_efc1a9bf[_12464].field_768:
                            _12509 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _12509 + 68] = mem[idx + _12499 + 32]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _12509 + -mem[64] + 100
                        mem[0] = _12464
                        mem[32] = sha3(address(arg1), 106) + 1
                        if not stor106[address(arg1)][1][_12464].field_0:
                            if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            if stor106[address(arg1)][1][_12464].field_0:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                    mem[0] = _12464
                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_12464].field_0 = 0
                                else:
                                    if not stor[_12466]:
                                        if not sub_efc1a9bf[_12464].field_0:
                                            _13454 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13454] = 26
                                            mem[_13454 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13454 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13704 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13704] = 26
                                            mem[_13704 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13704 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_12464].field_0:
                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13703 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13703] = 26
                                            mem[_13703 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13703 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _14067 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_14067] = 26
                                            mem[_14067 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _14067 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                            else:
                                stor106[address(arg1)].field_0++
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                    mem[0] = _12464
                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_12464].field_0 = 0
                                else:
                                    if not stor[_12466]:
                                        if not sub_efc1a9bf[_12464].field_0:
                                            _13455 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13455] = 26
                                            mem[_13455 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13455 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13709 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13709] = 26
                                            mem[_13709 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13709 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_12464].field_0:
                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _13708 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13708] = 26
                                            mem[_13708 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13708 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _14076 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_14076] = 26
                                            mem[_14076 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _14076 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                            sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                        else:
                            _12578 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12578] = 0
                            mem[_12578 + 32] = 0
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 2
                            _12598 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12598] = stor106[address(arg1)][2][_12464].field_0
                            mem[_12598 + 32] = stor106[address(arg1)][2][_12464].field_256
                            _12614 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12614] = 30
                            mem[_12614 + 32] = 'SafeMath: subtraction overflow'
                            if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                                _12649 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 30
                                idx = 0
                                while idx < 30:
                                    mem[idx + _12649 + 68] = mem[idx + _12614 + 32]
                                    idx = idx + 32
                                    continue 
                                mem[_12649 + 68] = mem[_12649 + 70 len 30]
                                revert with memory
                                  from mem[64]
                                   len _12649 + -mem[64] + 100
                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                if ext_call.return_data[0] < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if ext_call.return_data[0]:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor[_12466]:
                                            _13723 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13723] = 26
                                            mem[_13723 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13723 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _14097 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_14097] = 26
                                            mem[_14097 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _14097 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    if not stor106[address(arg1)][1][_12464].field_0:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor[_12466]:
                                                _15301 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15301] = 26
                                                mem[_15301 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15301 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _15594 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15594] = 26
                                                mem[_15594 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15594 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                        require stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                        stor106[address(arg1)].field_0--
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor[_12466]:
                                                _15730 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_15730] = 26
                                                mem[_15730 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _15730 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _16016 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_16016] = 26
                                                mem[_16016 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _16016 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            else:
                                if not sub_efc1a9bf[_12464].field_0:
                                    if not stor106[address(arg1)][2][_12464].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor[_12466]:
                                                    _15593 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15593] = 26
                                                    mem[_15593 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15593 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15855 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15855] = 26
                                                    mem[_15855 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _15855 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_12464].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _17018 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17018] = 26
                                                        mem[_17018 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17018 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _17421 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17421] = 26
                                                        mem[_17421 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17421 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_12464].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _17630 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17630] = 26
                                                        mem[_17630 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _17630 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _18028 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_18028] = 26
                                                        mem[_18028 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _18028 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _15853 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15853] = 26
                                                        mem[_15853 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _15853 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _16170 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16170] = 26
                                                        mem[_16170 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16170 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17418 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17418] = 26
                                                            mem[_17418 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17418 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17803 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17803] = 26
                                                            mem[_17803 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17803 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _18024 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18024] = 26
                                                            mem[_18024 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18024 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18477 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18477] = 26
                                                            mem[_18477 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18477 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            _12990 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_12990] = 30
                                            mem[_12990 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                                _13081 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _13081 + 68] = mem[idx + _12990 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_13081 + 68] = mem[_13081 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _13081 + -mem[64] + 100
                                            _13354 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13354] = 26
                                            mem[_13354 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13354 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _18481 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18481] = 26
                                                            mem[_18481 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18481 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _19072 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19072] = 26
                                                            mem[_19072 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19072 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19071 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19071] = 26
                                                            mem[_19071 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19071 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19734 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19734] = 26
                                                            mem[_19734 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19734 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21050 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21050] = 26
                                                                mem[_21050 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21050 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _21614 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21614] = 26
                                                                mem[_21614 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21614 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21613 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21613] = 26
                                                                mem[_21613 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21613 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22110 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22110] = 26
                                                                mem[_22110 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22110 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21879 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21879] = 26
                                                                mem[_21879 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21879 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _22339 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22339] = 26
                                                                mem[_22339 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22339 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22338 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22338] = 26
                                                                mem[_22338 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22338 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22862 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22862] = 26
                                                                mem[_22862 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22862 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not stor106[address(arg1)][2][_12464].field_0:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _15851 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15851] = 26
                                                        mem[_15851 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _15851 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _16163 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16163] = 26
                                                        mem[_16163 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16163 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17413 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17413] = 26
                                                            mem[_17413 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17413 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17795 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17795] = 26
                                                            mem[_17795 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17795 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _18022 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18022] = 26
                                                            mem[_18022 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18022 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18469 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18469] = 26
                                                            mem[_18469 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18469 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            _12989 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_12989] = 30
                                            mem[_12989 + 32] = 'SafeMath: subtraction overflow'
                                            if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                _13078 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _13078 + 68] = mem[idx + _12989 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_13078 + 68] = mem[_13078 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _13078 + -mem[64] + 100
                                            _13351 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13351] = 26
                                            mem[_13351 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13351 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _18473 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18473] = 26
                                                            mem[_18473 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18473 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _19054 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19054] = 26
                                                            mem[_19054 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19054 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19053 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19053] = 26
                                                            mem[_19053 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19053 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19717 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19717] = 26
                                                            mem[_19717 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19717 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21041 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21041] = 26
                                                                mem[_21041 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21041 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _21603 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21603] = 26
                                                                mem[_21603 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21603 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21602 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21602] = 26
                                                                mem[_21602 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21602 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22099 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22099] = 26
                                                                mem[_22099 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22099 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21873 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21873] = 26
                                                                mem[_21873 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21873 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _22330 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22330] = 26
                                                                mem[_22330 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22330 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22329 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22329] = 26
                                                                mem[_22329 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22329 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22844 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22844] = 26
                                                                mem[_22844 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22844 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _16161 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16161] = 26
                                                        mem[_16161 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16161 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _16565 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16565] = 26
                                                        mem[_16565 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16565 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17792 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17792] = 26
                                                            mem[_17792 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17792 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18225 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18225] = 26
                                                            mem[_18225 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18225 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _18465 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18465] = 26
                                                            mem[_18465 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18465 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19037 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19037] = 26
                                                            mem[_19037 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19037 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            _13077 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13077] = 30
                                            mem[_13077 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                _13193 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _13193 + 68] = mem[idx + _13077 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_13193 + 68] = mem[_13193 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _13193 + -mem[64] + 100
                                            _13579 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13579] = 26
                                            mem[_13579 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _13579 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            _19041 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19041] = 26
                                                            mem[_19041 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19041 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _19703 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19703] = 26
                                                            mem[_19703 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19703 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _19702 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19702] = 26
                                                            mem[_19702 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _19702 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _20383 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20383] = 26
                                                            mem[_20383 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _20383 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _21597 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21597] = 26
                                                                mem[_21597 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21597 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _22091 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22091] = 26
                                                                mem[_22091 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22091 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22090 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22090] = 26
                                                                mem[_22090 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22090 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22578 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22578] = 26
                                                                mem[_22578 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22578 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _22324 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22324] = 26
                                                                mem[_22324 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22324 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _22831 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22831] = 26
                                                                mem[_22831 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22831 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _22830 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_22830] = 26
                                                                mem[_22830 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _22830 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _23454 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_23454] = 26
                                                                mem[_23454 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _23454 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                            sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                else:
                    if stor106[address(arg1)][2][mem[(32 * idx) + 128]].field_0 <= sub_efc1a9bf[mem[(32 * idx) + 128]].field_768:
                        _12476 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_12476] = 0
                        mem[_12476 + 32] = 0
                        mem[_12476 + 64] = 0
                        mem[_12476 + 96] = 0
                        mem[0] = _12464
                        mem[32] = 104
                        _12482 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_12482] = sub_efc1a9bf[_12464].field_0
                        mem[_12482 + 32] = sub_efc1a9bf[_12464].field_256
                        mem[_12482 + 64] = sub_efc1a9bf[_12464].field_512
                        mem[_12482 + 96] = sub_efc1a9bf[_12464].field_768
                        _12483 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12483] = 32
                        mem[_12483 + 32] = 'Parameter value is out of bounds'
                        if stor[_12466] < sub_efc1a9bf[_12464].field_512:
                            _12492 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _12492 + 68] = mem[idx + _12483 + 32]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _12492 + -mem[64] + 100
                        if not sub_efc1a9bf[_12464].field_768:
                            _12500 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12500] = 32
                            mem[_12500 + 32] = 'Parameter value is out of bounds'
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_12464].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_12464].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor[_12466]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13461 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13461] = 26
                                                mem[_13461 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13461 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13725 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13725] = 26
                                                mem[_13725 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13725 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13724 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13724] = 26
                                                mem[_13724 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13724 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14103 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14103] = 26
                                                mem[_14103 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14103 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor[_12466]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13462 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13462] = 26
                                                mem[_13462 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13462 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13730 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13730] = 26
                                                mem[_13730 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13730 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13729 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13729] = 26
                                                mem[_13729 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13729 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14112 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14112] = 26
                                                mem[_14112 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14112 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                            else:
                                _12579 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12579] = 0
                                mem[_12579 + 32] = 0
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 2
                                _12604 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12604] = stor106[address(arg1)][2][_12464].field_0
                                mem[_12604 + 32] = stor106[address(arg1)][2][_12464].field_256
                                _12615 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12615] = 30
                                mem[_12615 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                                    _12652 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _12652 + 68] = mem[idx + _12615 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_12652 + 68] = mem[_12652 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _12652 + -mem[64] + 100
                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor[_12466]:
                                                _13744 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13744] = 26
                                                mem[_13744 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13744 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14133 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14133] = 26
                                                mem[_14133 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14133 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_12464].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor[_12466]:
                                                    _15314 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15314] = 26
                                                    mem[_15314 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15314 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15606 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15606] = 26
                                                    mem[_15606 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15606 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_12464].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor[_12466]:
                                                    _15746 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15746] = 26
                                                    mem[_15746 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15746 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16037 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16037] = 26
                                                    mem[_16037 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16037 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _15605 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15605] = 26
                                                        mem[_15605 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15605 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _15871 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15871] = 26
                                                        mem[_15871 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _15871 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17044 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17044] = 26
                                                            mem[_17044 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17044 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17445 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17445] = 26
                                                            mem[_17445 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17445 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17654 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17654] = 26
                                                            mem[_17654 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17654 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18046 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18046] = 26
                                                            mem[_18046 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18046 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _15869 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_15869] = 26
                                                            mem[_15869 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                s = 32
                                                                while s < 26:
                                                                    mem[s + mem[64] + 68] = mem[s + _15869 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16196 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16196] = 26
                                                            mem[_16196 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16196 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _17442 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17442] = 26
                                                                mem[_17442 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17442 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _17829 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17829] = 26
                                                                mem[_17829 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17829 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _18042 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18042] = 26
                                                                mem[_18042 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18042 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18506 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18506] = 26
                                                                mem[_18506 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18506 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _12996 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_12996] = 30
                                                mem[_12996 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                                    _13092 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13092 + 68] = mem[idx + _12996 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13092 + 68] = mem[_13092 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13092 + -mem[64] + 100
                                                _13370 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13370] = 26
                                                mem[_13370 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13370 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _18510 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18510] = 26
                                                                mem[_18510 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18510 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19124 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19124] = 26
                                                                mem[_19124 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19124 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19123 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19123] = 26
                                                                mem[_19123 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19123 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19788 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19788] = 26
                                                                mem[_19788 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19788 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21081 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21081] = 26
                                                                    mem[_21081 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21081 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _21645 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21645] = 26
                                                                    mem[_21645 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21645 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _21644 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21644] = 26
                                                                    mem[_21644 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21644 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22143 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22143] = 26
                                                                    mem[_22143 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22143 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21903 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21903] = 26
                                                                    mem[_21903 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21903 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22363 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22363] = 26
                                                                    mem[_22363 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22363 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22362 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22362] = 26
                                                                    mem[_22362 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22362 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22907 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22907] = 26
                                                                    mem[_22907 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22907 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _15867 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_15867] = 26
                                                            mem[_15867 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                s = 32
                                                                while s < 26:
                                                                    mem[s + mem[64] + 68] = mem[s + _15867 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16189 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16189] = 26
                                                            mem[_16189 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16189 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _17437 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17437] = 26
                                                                mem[_17437 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17437 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _17821 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17821] = 26
                                                                mem[_17821 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17821 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _18040 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18040] = 26
                                                                mem[_18040 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18040 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18498 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18498] = 26
                                                                mem[_18498 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18498 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _12995 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_12995] = 30
                                                mem[_12995 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13089 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13089 + 68] = mem[idx + _12995 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13089 + 68] = mem[_13089 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13089 + -mem[64] + 100
                                                _13367 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13367] = 26
                                                mem[_13367 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13367 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _18502 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18502] = 26
                                                                mem[_18502 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18502 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19106 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19106] = 26
                                                                mem[_19106 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19106 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19105 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19105] = 26
                                                                mem[_19105 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19105 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19771 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19771] = 26
                                                                mem[_19771 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19771 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21072 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21072] = 26
                                                                    mem[_21072 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21072 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _21634 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21634] = 26
                                                                    mem[_21634 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21634 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _21633 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21633] = 26
                                                                    mem[_21633 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21633 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22132 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22132] = 26
                                                                    mem[_22132 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22132 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21897 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21897] = 26
                                                                    mem[_21897 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21897 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22354 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22354] = 26
                                                                    mem[_22354 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22354 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22353 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22353] = 26
                                                                    mem[_22353 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22353 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22889 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22889] = 26
                                                                    mem[_22889 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22889 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _16187 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16187] = 26
                                                            mem[_16187 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16187 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16599 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16599] = 26
                                                            mem[_16599 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16599 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _17818 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17818] = 26
                                                                mem[_17818 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17818 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18266 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18266] = 26
                                                                mem[_18266 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18266 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _18494 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18494] = 26
                                                                mem[_18494 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18494 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19089 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19089] = 26
                                                                mem[_19089 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19089 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13088 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13088] = 30
                                                mem[_13088 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13203 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13203 + 68] = mem[idx + _13088 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13203 + 68] = mem[_13203 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13203 + -mem[64] + 100
                                                _13602 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13602] = 26
                                                mem[_13602 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13602 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _19093 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19093] = 26
                                                                mem[_19093 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19093 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19757 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19757] = 26
                                                                mem[_19757 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19757 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19756 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19756] = 26
                                                                mem[_19756 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19756 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20426 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20426] = 26
                                                                mem[_20426 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20426 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21628 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21628] = 26
                                                                    mem[_21628 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21628 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22124 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22124] = 26
                                                                    mem[_22124 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22124 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22123 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22123] = 26
                                                                    mem[_22123 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22123 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22609 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22609] = 26
                                                                    mem[_22609 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22609 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22348 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22348] = 26
                                                                    mem[_22348 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22348 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22876 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22876] = 26
                                                                    mem[_22876 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22876 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22875 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22875] = 26
                                                                    mem[_22875 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22875 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23510 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23510] = 26
                                                                    mem[_23510 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23510 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                        else:
                            _12512 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12512] = 32
                            mem[_12512 + 32] = 'Parameter value is out of bounds'
                            if stor[_12466] > sub_efc1a9bf[_12464].field_768:
                                _12521 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _12521 + 68] = mem[idx + _12512 + 32]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _12521 + -mem[64] + 100
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_12464].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_12464].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor[_12466]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13620 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13620] = 26
                                                mem[_13620 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13620 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13919 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13919] = 26
                                                mem[_13919 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13919 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13918 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13918] = 26
                                                mem[_13918 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13918 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14322 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14322] = 26
                                                mem[_14322 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14322 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor[_12466]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13621 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13621] = 26
                                                mem[_13621 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13621 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13924 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13924] = 26
                                                mem[_13924 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13924 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13923 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13923] = 26
                                                mem[_13923 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13923 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14331 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14331] = 26
                                                mem[_14331 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14331 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                            else:
                                _12606 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12606] = 0
                                mem[_12606 + 32] = 0
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 2
                                _12620 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12620] = stor106[address(arg1)][2][_12464].field_0
                                mem[_12620 + 32] = stor106[address(arg1)][2][_12464].field_256
                                _12638 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12638] = 30
                                mem[_12638 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                                    _12662 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _12662 + 68] = mem[idx + _12638 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_12662 + 68] = mem[_12662 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _12662 + -mem[64] + 100
                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor[_12466]:
                                                _13938 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13938] = 26
                                                mem[_13938 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13938 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14352 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14352] = 26
                                                mem[_14352 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14352 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_12464].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor[_12466]:
                                                    _15498 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15498] = 26
                                                    mem[_15498 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15498 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15753 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15753] = 26
                                                    mem[_15753 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15753 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_12464].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor[_12466]:
                                                    _15897 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15897] = 26
                                                    mem[_15897 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _15897 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16230 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16230] = 26
                                                    mem[_16230 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16230 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor[_12466]:
                                                        _15752 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15752] = 26
                                                        mem[_15752 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15752 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_12466] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _16046 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16046] = 26
                                                        mem[_16046 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16046 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17277 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17277] = 26
                                                            mem[_17277 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17277 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17669 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17669] = 26
                                                            mem[_17669 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17669 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _17865 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17865] = 26
                                                            mem[_17865 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17865 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18321 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18321] = 26
                                                            mem[_18321 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18321 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _16044 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16044] = 26
                                                            mem[_16044 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16044 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16417 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16417] = 26
                                                            mem[_16417 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16417 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _17666 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17666] = 26
                                                                mem[_17666 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17666 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18063 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18063] = 26
                                                                mem[_18063 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18063 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _18317 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18317] = 26
                                                                mem[_18317 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18317 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18838 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18838] = 26
                                                                mem[_18838 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18838 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13041 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13041] = 30
                                                mem[_13041 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                                    _13145 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13145 + 68] = mem[idx + _13041 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13145 + 68] = mem[_13145 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13145 + -mem[64] + 100
                                                _13481 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13481] = 26
                                                mem[_13481 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13481 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _18842 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18842] = 26
                                                                mem[_18842 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18842 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19466 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19466] = 26
                                                                mem[_19466 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19466 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19465 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19465] = 26
                                                                mem[_19465 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19465 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20146 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20146] = 26
                                                                mem[_20146 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20146 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21432 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21432] = 26
                                                                    mem[_21432 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21432 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _21927 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21927] = 26
                                                                    mem[_21927 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21927 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _21926 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21926] = 26
                                                                    mem[_21926 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21926 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22389 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22389] = 26
                                                                    mem[_22389 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22389 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22177 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22177] = 26
                                                                    mem[_22177 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22177 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22660 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22660] = 26
                                                                    mem[_22660 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22660 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22659 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22659] = 26
                                                                    mem[_22659 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22659 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23240 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23240] = 26
                                                                    mem[_23240 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23240 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _16042 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16042] = 26
                                                            mem[_16042 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16042 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16410 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16410] = 26
                                                            mem[_16410 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16410 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _17661 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17661] = 26
                                                                mem[_17661 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17661 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18055 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18055] = 26
                                                                mem[_18055 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18055 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _18315 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18315] = 26
                                                                mem[_18315 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18315 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18830 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18830] = 26
                                                                mem[_18830 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18830 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13040 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13040] = 30
                                                mem[_13040 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13142 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13142 + 68] = mem[idx + _13040 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13142 + 68] = mem[_13142 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13142 + -mem[64] + 100
                                                _13478 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13478] = 26
                                                mem[_13478 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13478 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _18834 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18834] = 26
                                                                mem[_18834 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18834 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19448 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19448] = 26
                                                                mem[_19448 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19448 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19447 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19447] = 26
                                                                mem[_19447 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19447 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20129 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20129] = 26
                                                                mem[_20129 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20129 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21423 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21423] = 26
                                                                    mem[_21423 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21423 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _21916 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21916] = 26
                                                                    mem[_21916 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21916 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _21915 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21915] = 26
                                                                    mem[_21915 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21915 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22378 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22378] = 26
                                                                    mem[_22378 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22378 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22171 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22171] = 26
                                                                    mem[_22171 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22171 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22651 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22651] = 26
                                                                    mem[_22651 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22651 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22650 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22650] = 26
                                                                    mem[_22650 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22650 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23222 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23222] = 26
                                                                    mem[_23222 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23222 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            _16408 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16408] = 26
                                                            mem[_16408 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16408 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_12466] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16832 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16832] = 26
                                                            mem[_16832 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16832 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _18052 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18052] = 26
                                                                mem[_18052 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18052 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18522 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18522] = 26
                                                                mem[_18522 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18522 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                _18826 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18826] = 26
                                                                mem[_18826 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18826 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19431 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19431] = 26
                                                                mem[_19431 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19431 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13141 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13141] = 30
                                                mem[_13141 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13291 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13291 + 68] = mem[idx + _13141 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13291 + 68] = mem[_13291 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13291 + -mem[64] + 100
                                                _13750 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13750] = 26
                                                mem[_13750 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13750 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor[_12466]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _19435 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19435] = 26
                                                                mem[_19435 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19435 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _20115 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20115] = 26
                                                                mem[_20115 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20115 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20114 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20114] = 26
                                                                mem[_20114 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20114 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_12466] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20795 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20795] = 26
                                                                mem[_20795 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20795 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21910 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21910] = 26
                                                                    mem[_21910 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21910 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22370 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22370] = 26
                                                                    mem[_22370 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22370 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22369 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22369] = 26
                                                                    mem[_22369 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22369 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22916 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22916] = 26
                                                                    mem[_22916 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22916 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor[_12466]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22645 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22645] = 26
                                                                    mem[_22645 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22645 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _23209 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23209] = 26
                                                                    mem[_23209 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23209 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_12466] / stor[_12466] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23208 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23208] = 26
                                                                    mem[_23208 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23208 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor[_12466] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_12466] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23845 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23845] = 26
                                                                    mem[_23845 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23845 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor[_12466]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor[_12466]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                    else:
                        _12484 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_12484] = 0
                        mem[_12484 + 32] = 0
                        mem[_12484 + 64] = 0
                        mem[_12484 + 96] = 0
                        mem[0] = _12464
                        mem[32] = 104
                        _12494 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_12494] = sub_efc1a9bf[_12464].field_0
                        mem[_12494 + 32] = sub_efc1a9bf[_12464].field_256
                        mem[_12494 + 64] = sub_efc1a9bf[_12464].field_512
                        mem[_12494 + 96] = sub_efc1a9bf[_12464].field_768
                        _12495 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12495] = 32
                        mem[_12495 + 32] = 'Parameter value is out of bounds'
                        if stor3[_12467] < sub_efc1a9bf[_12464].field_512:
                            _12504 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _12504 + 68] = mem[idx + _12495 + 32]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _12504 + -mem[64] + 100
                        if not sub_efc1a9bf[_12464].field_768:
                            _12513 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12513] = 32
                            mem[_12513 + 32] = 'Parameter value is out of bounds'
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_12464].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_12464].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor3[_12467]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13627 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13627] = 26
                                                mem[_13627 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13627 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13940 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13940] = 26
                                                mem[_13940 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13940 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13939 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13939] = 26
                                                mem[_13939 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13939 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14358 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14358] = 26
                                                mem[_14358 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14358 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor3[_12467]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13628 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13628] = 26
                                                mem[_13628 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13628 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13945 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13945] = 26
                                                mem[_13945 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13945 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _13944 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13944] = 26
                                                mem[_13944 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13944 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14367 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14367] = 26
                                                mem[_14367 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14367 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                            else:
                                _12607 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12607] = 0
                                mem[_12607 + 32] = 0
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 2
                                _12626 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12626] = stor106[address(arg1)][2][_12464].field_0
                                mem[_12626 + 32] = stor106[address(arg1)][2][_12464].field_256
                                _12639 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12639] = 30
                                mem[_12639 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                                    _12665 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _12665 + 68] = mem[idx + _12639 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_12665 + 68] = mem[_12665 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _12665 + -mem[64] + 100
                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor3[_12467]:
                                                _13959 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13959] = 26
                                                mem[_13959 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13959 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14388 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14388] = 26
                                                mem[_14388 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14388 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_12464].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor3[_12467]:
                                                    _15511 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15511] = 26
                                                    mem[_15511 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15511 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15765 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15765] = 26
                                                    mem[_15765 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15765 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_12464].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor3[_12467]:
                                                    _15913 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15913] = 26
                                                    mem[_15913 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _15913 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16251 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16251] = 26
                                                    mem[_16251 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16251 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor3[_12467]:
                                                        _15764 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15764] = 26
                                                        mem[_15764 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _15764 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor3[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _16062 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16062] = 26
                                                        mem[_16062 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16062 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _17303 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17303] = 26
                                                            mem[_17303 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17303 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17693 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17693] = 26
                                                            mem[_17693 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17693 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _17889 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17889] = 26
                                                            mem[_17889 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17889 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18339 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18339] = 26
                                                            mem[_18339 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18339 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _16060 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16060] = 26
                                                            mem[_16060 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16060 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16443 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16443] = 26
                                                            mem[_16443 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16443 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _17690 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17690] = 26
                                                                mem[_17690 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17690 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18089 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18089] = 26
                                                                mem[_18089 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18089 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _18335 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18335] = 26
                                                                mem[_18335 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18335 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18867 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18867] = 26
                                                                mem[_18867 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18867 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13047 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13047] = 30
                                                mem[_13047 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                                    _13156 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13156 + 68] = mem[idx + _13047 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13156 + 68] = mem[_13156 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13156 + -mem[64] + 100
                                                _13497 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13497] = 26
                                                mem[_13497 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13497 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _18871 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18871] = 26
                                                                mem[_18871 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18871 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19518 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19518] = 26
                                                                mem[_19518 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19518 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19517 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19517] = 26
                                                                mem[_19517 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19517 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20200 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20200] = 26
                                                                mem[_20200 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20200 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21463 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21463] = 26
                                                                    mem[_21463 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21463 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _21958 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21958] = 26
                                                                    mem[_21958 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21958 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _21957 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21957] = 26
                                                                    mem[_21957 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21957 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22422 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22422] = 26
                                                                    mem[_22422 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22422 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22201 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22201] = 26
                                                                    mem[_22201 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22201 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22684 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22684] = 26
                                                                    mem[_22684 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22684 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22683 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22683] = 26
                                                                    mem[_22683 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22683 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23285 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23285] = 26
                                                                    mem[_23285 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23285 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _16058 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16058] = 26
                                                            mem[_16058 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16058 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16436 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16436] = 26
                                                            mem[_16436 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16436 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _17685 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17685] = 26
                                                                mem[_17685 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17685 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18081 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18081] = 26
                                                                mem[_18081 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18081 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _18333 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18333] = 26
                                                                mem[_18333 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18333 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18859 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18859] = 26
                                                                mem[_18859 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18859 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13046 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13046] = 30
                                                mem[_13046 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13153 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13153 + 68] = mem[idx + _13046 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13153 + 68] = mem[_13153 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13153 + -mem[64] + 100
                                                _13494 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13494] = 26
                                                mem[_13494 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13494 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _18863 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18863] = 26
                                                                mem[_18863 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18863 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19500 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19500] = 26
                                                                mem[_19500 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19500 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19499 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19499] = 26
                                                                mem[_19499 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19499 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20183 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20183] = 26
                                                                mem[_20183 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20183 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21454 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21454] = 26
                                                                    mem[_21454 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21454 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _21947 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21947] = 26
                                                                    mem[_21947 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21947 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _21946 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21946] = 26
                                                                    mem[_21946 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21946 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22411 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22411] = 26
                                                                    mem[_22411 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22411 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22195 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22195] = 26
                                                                    mem[_22195 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22195 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22675 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22675] = 26
                                                                    mem[_22675 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22675 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22674 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22674] = 26
                                                                    mem[_22674 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22674 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23267 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23267] = 26
                                                                    mem[_23267 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23267 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _16434 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16434] = 26
                                                            mem[_16434 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16434 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16866 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16866] = 26
                                                            mem[_16866 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16866 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _18078 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18078] = 26
                                                                mem[_18078 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18078 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18563 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18563] = 26
                                                                mem[_18563 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18563 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _18855 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18855] = 26
                                                                mem[_18855 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18855 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19483 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19483] = 26
                                                                mem[_19483 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19483 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13152 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13152] = 30
                                                mem[_13152 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13301 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13301 + 68] = mem[idx + _13152 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13301 + 68] = mem[_13301 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13301 + -mem[64] + 100
                                                _13773 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13773] = 26
                                                mem[_13773 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13773 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _19487 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19487] = 26
                                                                mem[_19487 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19487 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _20169 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20169] = 26
                                                                mem[_20169 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20169 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20168 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20168] = 26
                                                                mem[_20168 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20168 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20838 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20838] = 26
                                                                mem[_20838 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20838 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21941 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21941] = 26
                                                                    mem[_21941 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21941 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22403 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22403] = 26
                                                                    mem[_22403 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22403 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22402 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22402] = 26
                                                                    mem[_22402 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22402 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22947 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22947] = 26
                                                                    mem[_22947 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22947 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22669 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22669] = 26
                                                                    mem[_22669 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22669 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _23254 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23254] = 26
                                                                    mem[_23254 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23254 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23253 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23253] = 26
                                                                    mem[_23253 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23253 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23901 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23901] = 26
                                                                    mem[_23901 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23901 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                        else:
                            _12524 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_12524] = 32
                            mem[_12524 + 32] = 'Parameter value is out of bounds'
                            if stor3[_12467] > sub_efc1a9bf[_12464].field_768:
                                _12532 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _12532 + 68] = mem[idx + _12524 + 32]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _12532 + -mem[64] + 100
                            mem[0] = _12464
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_12464].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 < sub_efc1a9bf[_12464].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_12464].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor3[_12467]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13791 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13791] = 26
                                                mem[_13791 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13791 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14172 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14172] = 26
                                                mem[_14172 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14172 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14171 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14171] = 26
                                                mem[_14171 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14171 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14599 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14599] = 26
                                                mem[_14599 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14599 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _12464
                                    mem[0] = _12464
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_12464].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                        mem[0] = _12464
                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_12464].field_0 = 0
                                    else:
                                        if not stor3[_12467]:
                                            if not sub_efc1a9bf[_12464].field_0:
                                                _13792 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13792] = 26
                                                mem[_13792 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13792 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14177 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14177] = 26
                                                mem[_14177 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14177 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_12464].field_0:
                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14176 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14176] = 26
                                                mem[_14176 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14176 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                            else:
                                                if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) < sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14608 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14608] = 26
                                                mem[_14608 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14608 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256
                                sub_efc1a9bf[_12464].field_256 += ext_call.return_data[0]
                            else:
                                _12628 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12628] = 0
                                mem[_12628 + 32] = 0
                                mem[0] = _12464
                                mem[32] = sha3(address(arg1), 106) + 2
                                _12644 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12644] = stor106[address(arg1)][2][_12464].field_0
                                mem[_12644 + 32] = stor106[address(arg1)][2][_12464].field_256
                                _12657 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_12657] = 30
                                mem[_12657 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_12464].field_256 > sub_efc1a9bf[_12464].field_256:
                                    _12679 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _12679 + 68] = mem[idx + _12657 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_12679 + 68] = mem[_12679 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _12679 + -mem[64] + 100
                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                            mem[0] = _12464
                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_12464].field_0 = 0
                                        else:
                                            if not stor3[_12467]:
                                                _14191 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14191] = 26
                                                mem[_14191 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14191 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _14629 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_14629] = 26
                                                mem[_14629 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _14629 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        mem[0] = _12464
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_12464].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor3[_12467]:
                                                    _15666 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15666] = 26
                                                    mem[_15666 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _15666 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _15920 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_15920] = 26
                                                    mem[_15920 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _15920 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _12464
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_12464].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                mem[0] = _12464
                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_12464].field_0 = 0
                                            else:
                                                if not stor3[_12467]:
                                                    _16088 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16088] = 26
                                                    mem[_16088 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16088 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _16477 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16477] = 26
                                                    mem[_16477 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _16477 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                else:
                                    if not sub_efc1a9bf[_12464].field_0:
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                    mem[0] = _12464
                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_12464].field_0 = 0
                                                else:
                                                    if not stor3[_12467]:
                                                        _15919 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_15919] = 26
                                                        mem[_15919 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _15919 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor3[_12467] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _16260 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16260] = 26
                                                        mem[_16260 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _16260 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                mem[0] = _12464
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_12464].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _17524 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17524] = 26
                                                            mem[_17524 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17524 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17904 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17904] = 26
                                                            mem[_17904 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17904 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_12464].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _18125 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18125] = 26
                                                            mem[_18125 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18125 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _18618 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_18618] = 26
                                                            mem[_18618 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _18618 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _16258 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16258] = 26
                                                            mem[_16258 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16258 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16688 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16688] = 26
                                                            mem[_16688 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16688 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _17901 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17901] = 26
                                                                mem[_17901 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17901 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18356 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18356] = 26
                                                                mem[_18356 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18356 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _18614 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18614] = 26
                                                                mem[_18614 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18614 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19217 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19217] = 26
                                                                mem[_19217 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19217 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13100 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13100] = 30
                                                mem[_13100 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > 0:
                                                    _13225 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13225 + 68] = mem[idx + _13100 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13225 + 68] = mem[_13225 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13225 + -mem[64] + 100
                                                _13647 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13647] = 26
                                                mem[_13647 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13647 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _19221 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19221] = 26
                                                                mem[_19221 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19221 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19895 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19895] = 26
                                                                mem[_19895 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19895 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19894 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19894] = 26
                                                                mem[_19894 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19894 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20576 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20576] = 26
                                                                mem[_20576 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20576 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21763 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21763] = 26
                                                                    mem[_21763 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21763 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22225 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22225] = 26
                                                                    mem[_22225 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22225 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22224 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22224] = 26
                                                                    mem[_22224 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22224 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22710 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22710] = 26
                                                                    mem[_22710 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22710 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22456 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22456] = 26
                                                                    mem[_22456 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22456 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22998 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22998] = 26
                                                                    mem[_22998 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22998 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22997 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22997] = 26
                                                                    mem[_22997 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22997 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23653 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23653] = 26
                                                                    mem[_23653 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23653 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * -1 * stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                    else:
                                        if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_0 != sub_efc1a9bf[_12464].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_12464].field_0:
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _16256 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16256] = 26
                                                            mem[_16256 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16256 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _16681 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16681] = 26
                                                            mem[_16681 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16681 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _17896 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_17896] = 26
                                                                mem[_17896 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _17896 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18348 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18348] = 26
                                                                mem[_18348 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18348 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _18612 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18612] = 26
                                                                mem[_18612 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18612 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19209 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19209] = 26
                                                                mem[_19209 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19209 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13099 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13099] = 30
                                                mem[_13099 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13222 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13222 + 68] = mem[idx + _13099 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13222 + 68] = mem[_13222 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13222 + -mem[64] + 100
                                                _13644 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13644] = 26
                                                mem[_13644 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13644 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _19213 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19213] = 26
                                                                mem[_19213 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19213 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _19877 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19877] = 26
                                                                mem[_19877 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19877 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19876 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19876] = 26
                                                                mem[_19876 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19876 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20559 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20559] = 26
                                                                mem[_20559 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20559 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _21754 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_21754] = 26
                                                                    mem[_21754 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _21754 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22214 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22214] = 26
                                                                    mem[_22214 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22214 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22213 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22213] = 26
                                                                    mem[_22213 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22213 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22699 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22699] = 26
                                                                    mem[_22699 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22699 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22450 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22450] = 26
                                                                    mem[_22450 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22450 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22989 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22989] = 26
                                                                    mem[_22989 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22989 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22988 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22988] = 26
                                                                    mem[_22988 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22988 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23635 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23635] = 26
                                                                    mem[_23635 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23635 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                        else:
                                            if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 / stor106[address(arg1)][2][_12464].field_0 != stor106[address(arg1)][2][_12464].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0 <= stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            _16679 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16679] = 26
                                                            mem[_16679 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _16679 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _17101 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17101] = 26
                                                            mem[_17101 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _17101 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _18345 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18345] = 26
                                                                mem[_18345 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18345 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _18883 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_18883] = 26
                                                                mem[_18883 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _18883 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                _19205 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19205] = 26
                                                                mem[_19205 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19205 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _19860 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19860] = 26
                                                                mem[_19860 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19860 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                            else:
                                                _13221 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13221] = 30
                                                mem[_13221 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0 > sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0:
                                                    _13395 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _13395 + 68] = mem[idx + _13221 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_13395 + 68] = mem[_13395 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _13395 + -mem[64] + 100
                                                _13965 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13965] = 26
                                                mem[_13965 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _13965 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                        stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                        mem[0] = _12464
                                                        stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_12464].field_0 = 0
                                                    else:
                                                        if not stor3[_12467]:
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                _19864 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_19864] = 26
                                                                mem[_19864 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _19864 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _20545 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20545] = 26
                                                                mem[_20545 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20545 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _20544 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_20544] = 26
                                                                mem[_20544 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _20544 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _21184 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_21184] = 26
                                                                mem[_21184 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _21184 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                mem[0] = _12464
                                                                stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                else:
                                                    mem[0] = _12464
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_12464].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22208 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22208] = 26
                                                                    mem[_22208 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22208 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _22691 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22691] = 26
                                                                    mem[_22691 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22691 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _22690 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22690] = 26
                                                                    mem[_22690 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22690 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23294 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23294] = 26
                                                                    mem[_23294 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23294 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_12464].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_12464].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_12464].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _12464
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_12464].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                            stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                            mem[0] = _12464
                                                            stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_12464].field_0 = 0
                                                        else:
                                                            if not stor3[_12467]:
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    _22983 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_22983] = 26
                                                                    mem[_22983 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _22983 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _23622 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23622] = 26
                                                                    mem[_23622 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23622 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_12467] / stor3[_12467] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _23621 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_23621] = 26
                                                                    mem[_23621 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _23621 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = ext_call.return_data[0] * stor3[_12467] / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256 != sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_12467] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _24230 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_24230] = 26
                                                                    mem[_24230 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _24230 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_12464].field_0 = stor3[_12467]
                                                                    mem[0] = _12464
                                                                    stor106[address(arg1)][2][_12464].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_12464].field_0 = (ext_call.return_data[0] * stor3[_12467]) + (sub_efc1a9bf[_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) - (stor106[address(arg1)][2][_12464].field_256 * (sub_efc1a9bf[_12464].field_256 * sub_efc1a9bf[_12464].field_0) - (stor106[address(arg1)][2][_12464].field_256 * stor106[address(arg1)][2][_12464].field_0) / sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
                                sub_efc1a9bf[_12464].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_12464].field_256 - stor106[address(arg1)][2][_12464].field_256
            idx = idx + 1
            s = _12464
            continue 
    else:
        mem[0] = sha3(address(arg1), 106)
        mem[128] = stor106[address(arg1)].field_0
        idx = 128
        s = 0
        while (32 * stor106[address(arg1)].field_0) + 96 > idx:
            mem[idx + 32] = stor106[address(arg1)][s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        mem[(32 * stor106[address(arg1)].field_0) + 132] = address(arg1)
        require ext_code.size(sub_acdd8243Address)
        staticcall sub_acdd8243Address.0x70a08231 with:
                gas gas_remaining wei
               args address(arg1)
        mem[(32 * stor106[address(arg1)].field_0) + 128] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[64] = (32 * stor106[address(arg1)].field_0) + ceil32(return_data.size) + 128
        require return_data.size >= 32
        idx = 0
        s = 0
        while idx < stor106[address(arg1)].field_0:
            require idx < mem[96]
            _39992 = mem[(32 * idx) + 128]
            _39994 = sha3(mem[(32 * idx) + 128], sha3(address(arg1), 106) + 2)
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 104
            _39995 = sha3(mem[(32 * idx) + 128], 104)
            if stor106[address(arg1)][2][mem[(32 * idx) + 128]].field_0 < sub_efc1a9bf[mem[(32 * idx) + 128]].field_512:
                _39996 = mem[64]
                mem[64] = mem[64] + 128
                mem[_39996] = 0
                mem[_39996 + 32] = 0
                mem[_39996 + 64] = 0
                mem[_39996 + 96] = 0
                mem[0] = _39992
                mem[32] = 104
                _39999 = mem[64]
                mem[64] = mem[64] + 128
                mem[_39999] = sub_efc1a9bf[_39992].field_0
                mem[_39999 + 32] = sub_efc1a9bf[_39992].field_256
                mem[_39999 + 64] = sub_efc1a9bf[_39992].field_512
                mem[_39999 + 96] = sub_efc1a9bf[_39992].field_768
                _40000 = mem[64]
                mem[64] = mem[64] + 64
                mem[_40000] = 32
                mem[_40000 + 32] = 'Parameter value is out of bounds'
                if stor2[_39995] < sub_efc1a9bf[_39992].field_512:
                    _40006 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    mem[mem[64] + 36] = 32
                    idx = 0
                    while idx < 32:
                        mem[idx + _40006 + 68] = mem[idx + _40000 + 32]
                        idx = idx + 32
                        continue 
                    revert with memory
                      from mem[64]
                       len _40006 + -mem[64] + 100
                if not sub_efc1a9bf[_39992].field_768:
                    _40013 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_40013] = 32
                    mem[_40013 + 32] = 'Parameter value is out of bounds'
                    mem[0] = _39992
                    mem[32] = sha3(address(arg1), 106) + 1
                    if not stor106[address(arg1)][1][_39992].field_0:
                        if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[0] = _39992
                        mem[32] = sha3(address(arg1), 106) + 1
                        if stor106[address(arg1)][1][_39992].field_0:
                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                mem[0] = _39992
                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_39992].field_0 = 0
                            else:
                                if not stor2[_39995]:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        _40839 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40839] = 26
                                        mem[_40839 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40839 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41038 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41038] = 26
                                        mem[_41038 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41038 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41037 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41037] = 26
                                        mem[_41037 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41037 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41326 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41326] = 26
                                        mem[_41326 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41326 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                        else:
                            stor106[address(arg1)].field_0++
                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                mem[0] = _39992
                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_39992].field_0 = 0
                            else:
                                if not stor2[_39995]:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        _40840 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40840] = 26
                                        mem[_40840 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40840 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41043 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41043] = 26
                                        mem[_41043 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41043 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41042 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41042] = 26
                                        mem[_41042 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41042 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41335 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41335] = 26
                                        mem[_41335 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41335 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                        sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                    else:
                        _40082 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40082] = 0
                        mem[_40082 + 32] = 0
                        mem[0] = _39992
                        mem[32] = sha3(address(arg1), 106) + 2
                        _40097 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40097] = stor106[address(arg1)][2][_39992].field_0
                        mem[_40097 + 32] = stor106[address(arg1)][2][_39992].field_256
                        _40114 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40114] = 30
                        mem[_40114 + 32] = 'SafeMath: subtraction overflow'
                        if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                            _40157 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 30
                            idx = 0
                            while idx < 30:
                                mem[idx + _40157 + 68] = mem[idx + _40114 + 32]
                                idx = idx + 32
                                continue 
                            mem[_40157 + 68] = mem[_40157 + 70 len 30]
                            revert with memory
                              from mem[64]
                               len _40157 + -mem[64] + 100
                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                            if ext_call.return_data[0] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if ext_call.return_data[0]:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                    mem[0] = _39992
                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_39992].field_0 = 0
                                else:
                                    if not stor2[_39995]:
                                        _41057 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41057] = 26
                                        mem[_41057 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41057 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41356 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41356] = 26
                                        mem[_41356 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41356 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            else:
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                if not stor106[address(arg1)][1][_39992].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor2[_39995]:
                                            _42585 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_42585] = 26
                                            mem[_42585 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _42585 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _42933 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_42933] = 26
                                            mem[_42933 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _42933 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                    require stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                    stor106[address(arg1)].field_0--
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor2[_39995]:
                                            _43087 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_43087] = 26
                                            mem[_43087 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _43087 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _43337 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_43337] = 26
                                            mem[_43337 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _43337 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                        else:
                            if not sub_efc1a9bf[_39992].field_0:
                                if not stor106[address(arg1)][2][_39992].field_0:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor2[_39995]:
                                                _42932 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_42932] = 26
                                                mem[_42932 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _42932 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor2[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _43200 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43200] = 26
                                                mem[_43200 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _43200 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_39992].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _44252 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_44252] = 26
                                                    mem[_44252 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _44252 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _44677 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_44677] = 26
                                                    mem[_44677 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _44677 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_39992].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _44886 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_44886] = 26
                                                    mem[_44886 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _44886 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _45270 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_45270] = 26
                                                    mem[_45270 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _45270 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _43198 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43198] = 26
                                                    mem[_43198 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43198 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43463 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43463] = 26
                                                    mem[_43463 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _43463 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _44674 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44674] = 26
                                                        mem[_44674 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44674 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45072 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45072] = 26
                                                        mem[_45072 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45072 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45266 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45266] = 26
                                                        mem[_45266 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45266 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45667 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45667] = 26
                                                        mem[_45667 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45667 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        _40473 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40473] = 30
                                        mem[_40473 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                            _40548 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _40548 + 68] = mem[idx + _40473 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_40548 + 68] = mem[_40548 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _40548 + -mem[64] + 100
                                        _40769 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40769] = 26
                                        mem[_40769 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40769 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        _45671 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45671] = 26
                                                        mem[_45671 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45671 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _46188 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46188] = 26
                                                        mem[_46188 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46188 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46187 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46187] = 26
                                                        mem[_46187 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46187 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46804 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46804] = 26
                                                        mem[_46804 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46804 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _48143 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48143] = 26
                                                            mem[_48143 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48143 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _48770 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48770] = 26
                                                            mem[_48770 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48770 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _48769 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48769] = 26
                                                            mem[_48769 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48769 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49316 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49316] = 26
                                                            mem[_49316 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49316 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _49063 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49063] = 26
                                                            mem[_49063 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49063 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49555 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49555] = 26
                                                            mem[_49555 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49555 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49554 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49554] = 26
                                                            mem[_49554 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49554 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50021 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50021] = 26
                                                            mem[_50021 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50021 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            else:
                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                if not stor106[address(arg1)][2][_39992].field_0:
                                    if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _43196 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43196] = 26
                                                    mem[_43196 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43196 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43456 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43456] = 26
                                                    mem[_43456 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _43456 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _44669 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44669] = 26
                                                        mem[_44669 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44669 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45064 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45064] = 26
                                                        mem[_45064 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45064 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45264 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45264] = 26
                                                        mem[_45264 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45264 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45659 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45659] = 26
                                                        mem[_45659 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45659 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        _40472 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40472] = 30
                                        mem[_40472 + 32] = 'SafeMath: subtraction overflow'
                                        if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            _40545 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _40545 + 68] = mem[idx + _40472 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_40545 + 68] = mem[_40545 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _40545 + -mem[64] + 100
                                        _40766 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40766] = 26
                                        mem[_40766 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40766 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        _45663 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45663] = 26
                                                        mem[_45663 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45663 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _46170 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46170] = 26
                                                        mem[_46170 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46170 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46169 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46169] = 26
                                                        mem[_46169 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46169 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46787 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46787] = 26
                                                        mem[_46787 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46787 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _48134 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48134] = 26
                                                            mem[_48134 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48134 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _48759 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48759] = 26
                                                            mem[_48759 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48759 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _48758 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48758] = 26
                                                            mem[_48758 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48758 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49305 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49305] = 26
                                                            mem[_49305 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49305 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _49057 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49057] = 26
                                                            mem[_49057 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49057 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49546 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49546] = 26
                                                            mem[_49546 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49546 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49545 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49545] = 26
                                                            mem[_49545 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49545 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50003 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50003] = 26
                                                            mem[_50003 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50003 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _43454 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43454] = 26
                                                    mem[_43454 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _43454 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43799 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43799] = 26
                                                    mem[_43799 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43799 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45061 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45061] = 26
                                                        mem[_45061 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45061 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45442 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45442] = 26
                                                        mem[_45442 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45442 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45655 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45655] = 26
                                                        mem[_45655 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45655 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46153 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46153] = 26
                                                        mem[_46153 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46153 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        _40544 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40544] = 30
                                        mem[_40544 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            _40637 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _40637 + 68] = mem[idx + _40544 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_40637 + 68] = mem[_40637 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _40637 + -mem[64] + 100
                                        _40934 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40934] = 26
                                        mem[_40934 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40934 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        _46157 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46157] = 26
                                                        mem[_46157 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46157 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _46773 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46773] = 26
                                                        mem[_46773 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46773 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46772 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46772] = 26
                                                        mem[_46772 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46772 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _47445 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_47445] = 26
                                                        mem[_47445 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _47445 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _48753 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48753] = 26
                                                            mem[_48753 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48753 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49297 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49297] = 26
                                                            mem[_49297 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49297 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49296 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49296] = 26
                                                            mem[_49296 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49296 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49761 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49761] = 26
                                                            mem[_49761 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49761 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _49540 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49540] = 26
                                                            mem[_49540 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49540 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49990 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49990] = 26
                                                            mem[_49990 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49990 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49989 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49989] = 26
                                                            mem[_49989 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49989 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50539 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50539] = 26
                                                            mem[_50539 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50539 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                        sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                else:
                    _40025 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_40025] = 32
                    mem[_40025 + 32] = 'Parameter value is out of bounds'
                    if stor2[_39995] > sub_efc1a9bf[_39992].field_768:
                        _40034 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _40034 + 68] = mem[idx + _40025 + 32]
                            idx = idx + 32
                            continue 
                        revert with memory
                          from mem[64]
                           len _40034 + -mem[64] + 100
                    mem[0] = _39992
                    mem[32] = sha3(address(arg1), 106) + 1
                    if not stor106[address(arg1)][1][_39992].field_0:
                        if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[0] = _39992
                        mem[32] = sha3(address(arg1), 106) + 1
                        if stor106[address(arg1)][1][_39992].field_0:
                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                mem[0] = _39992
                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_39992].field_0 = 0
                            else:
                                if not stor2[_39995]:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        _40952 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40952] = 26
                                        mem[_40952 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40952 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41195 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41195] = 26
                                        mem[_41195 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41195 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41194 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41194] = 26
                                        mem[_41194 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41194 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41535 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41535] = 26
                                        mem[_41535 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41535 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                        else:
                            stor106[address(arg1)].field_0++
                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                mem[0] = _39992
                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                mem[32] = 104
                                sub_efc1a9bf[_39992].field_0 = 0
                            else:
                                if not stor2[_39995]:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        _40953 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40953] = 26
                                        mem[_40953 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40953 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41200 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41200] = 26
                                        mem[_41200 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41200 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41199 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41199] = 26
                                        mem[_41199 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41199 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41544 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41544] = 26
                                        mem[_41544 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41544 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                        sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                    else:
                        _40099 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40099] = 0
                        mem[_40099 + 32] = 0
                        mem[0] = _39992
                        mem[32] = sha3(address(arg1), 106) + 2
                        _40119 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40119] = stor106[address(arg1)][2][_39992].field_0
                        mem[_40119 + 32] = stor106[address(arg1)][2][_39992].field_256
                        _40140 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40140] = 30
                        mem[_40140 + 32] = 'SafeMath: subtraction overflow'
                        if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                            _40174 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 30
                            idx = 0
                            while idx < 30:
                                mem[idx + _40174 + 68] = mem[idx + _40140 + 32]
                                idx = idx + 32
                                continue 
                            mem[_40174 + 68] = mem[_40174 + 70 len 30]
                            revert with memory
                              from mem[64]
                               len _40174 + -mem[64] + 100
                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                            if ext_call.return_data[0] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if ext_call.return_data[0]:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                    mem[0] = _39992
                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_39992].field_0 = 0
                                else:
                                    if not stor2[_39995]:
                                        _41214 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41214] = 26
                                        mem[_41214 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41214 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        _41565 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41565] = 26
                                        mem[_41565 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41565 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            else:
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                if not stor106[address(arg1)][1][_39992].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor2[_39995]:
                                            _42795 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_42795] = 26
                                            mem[_42795 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _42795 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _43094 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_43094] = 26
                                            mem[_43094 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _43094 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                    require stor106[address(arg1)].field_0
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                    stor106[address(arg1)].field_0--
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor2[_39995]:
                                            _43226 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_43226] = 26
                                            mem[_43226 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _43226 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _43497 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_43497] = 26
                                            mem[_43497 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                s = 32
                                                while s < 26:
                                                    mem[s + mem[64] + 68] = mem[s + _43497 + 32]
                                                    s = s + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                        else:
                            if not sub_efc1a9bf[_39992].field_0:
                                if not stor106[address(arg1)][2][_39992].field_0:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor2[_39995]:
                                                _43093 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43093] = 26
                                                mem[_43093 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _43093 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor2[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _43346 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43346] = 26
                                                mem[_43346 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _43346 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_39992].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _44495 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_44495] = 26
                                                    mem[_44495 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _44495 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _44901 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_44901] = 26
                                                    mem[_44901 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _44901 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_39992].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _45108 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_45108] = 26
                                                    mem[_45108 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _45108 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _45497 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_45497] = 26
                                                    mem[_45497 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _45497 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _43344 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43344] = 26
                                                    mem[_43344 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43344 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43649 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43649] = 26
                                                    mem[_43649 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43649 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _44898 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44898] = 26
                                                        mem[_44898 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44898 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45287 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45287] = 26
                                                        mem[_45287 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45287 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45493 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45493] = 26
                                                        mem[_45493 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45493 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45943 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45943] = 26
                                                        mem[_45943 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45943 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        _40510 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40510] = 30
                                        mem[_40510 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                            _40594 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _40594 + 68] = mem[idx + _40510 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_40594 + 68] = mem[_40594 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _40594 + -mem[64] + 100
                                        _40859 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40859] = 26
                                        mem[_40859 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40859 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        _45947 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45947] = 26
                                                        mem[_45947 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45947 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _46519 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46519] = 26
                                                        mem[_46519 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46519 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46518 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46518] = 26
                                                        mem[_46518 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46518 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _47172 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_47172] = 26
                                                        mem[_47172 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _47172 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _48506 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48506] = 26
                                                            mem[_48506 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48506 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49087 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49087] = 26
                                                            mem[_49087 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49087 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49086 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49086] = 26
                                                            mem[_49086 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49086 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49581 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49581] = 26
                                                            mem[_49581 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49581 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _49350 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49350] = 26
                                                            mem[_49350 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49350 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49812 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49812] = 26
                                                            mem[_49812 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49812 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49811 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49811] = 26
                                                            mem[_49811 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49811 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50315 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50315] = 26
                                                            mem[_50315 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50315 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            else:
                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                if not stor106[address(arg1)][2][_39992].field_0:
                                    if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _43342 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43342] = 26
                                                    mem[_43342 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43342 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43642 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43642] = 26
                                                    mem[_43642 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43642 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _44893 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44893] = 26
                                                        mem[_44893 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44893 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45279 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45279] = 26
                                                        mem[_45279 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45279 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45491 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45491] = 26
                                                        mem[_45491 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45491 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45935 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45935] = 26
                                                        mem[_45935 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45935 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        _40509 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40509] = 30
                                        mem[_40509 + 32] = 'SafeMath: subtraction overflow'
                                        if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            _40591 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _40591 + 68] = mem[idx + _40509 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_40591 + 68] = mem[_40591 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _40591 + -mem[64] + 100
                                        _40856 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40856] = 26
                                        mem[_40856 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _40856 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        _45939 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45939] = 26
                                                        mem[_45939 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45939 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _46501 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46501] = 26
                                                        mem[_46501 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46501 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46500 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46500] = 26
                                                        mem[_46500 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46500 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _47155 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_47155] = 26
                                                        mem[_47155 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _47155 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _48497 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_48497] = 26
                                                            mem[_48497 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _48497 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49076 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49076] = 26
                                                            mem[_49076 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49076 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49075 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49075] = 26
                                                            mem[_49075 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49075 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49570 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49570] = 26
                                                            mem[_49570 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49570 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _49344 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49344] = 26
                                                            mem[_49344 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49344 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49803 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49803] = 26
                                                            mem[_49803 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49803 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49802 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49802] = 26
                                                            mem[_49802 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49802 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50297 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50297] = 26
                                                            mem[_50297 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50297 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    _43640 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43640] = 26
                                                    mem[_43640 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43640 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor2[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _44034 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_44034] = 26
                                                    mem[_44034 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _44034 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45276 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45276] = 26
                                                        mem[_45276 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45276 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45683 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45683] = 26
                                                        mem[_45683 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45683 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        _45931 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45931] = 26
                                                        mem[_45931 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45931 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _46484 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46484] = 26
                                                        mem[_46484 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46484 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        _40590 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_40590] = 30
                                        mem[_40590 + 32] = 'SafeMath: subtraction overflow'
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                            _40702 = mem[64]
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 30
                                            idx = 0
                                            while idx < 30:
                                                mem[idx + _40702 + 68] = mem[idx + _40590 + 32]
                                                idx = idx + 32
                                                continue 
                                            mem[_40702 + 68] = mem[_40702 + 70 len 30]
                                            revert with memory
                                              from mem[64]
                                               len _40702 + -mem[64] + 100
                                        _41063 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_41063] = 26
                                        mem[_41063 + 32] = 'SafeMath: division by zero'
                                        if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _41063 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor2[_39995]:
                                                    if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        _46488 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_46488] = 26
                                                        mem[_46488 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _46488 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        _47141 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_47141] = 26
                                                        mem[_47141 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _47141 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _47140 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_47140] = 26
                                                        mem[_47140 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _47140 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor2[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _47822 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_47822] = 26
                                                        mem[_47822 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _47822 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _49070 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49070] = 26
                                                            mem[_49070 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49070 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _49562 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49562] = 26
                                                            mem[_49562 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49562 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _49561 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49561] = 26
                                                            mem[_49561 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49561 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50030 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50030] = 26
                                                            mem[_50030 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50030 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor2[_39995]:
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _49797 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_49797] = 26
                                                            mem[_49797 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _49797 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _50284 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50284] = 26
                                                            mem[_50284 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50284 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor2[_39995] / stor2[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50283 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50283] = 26
                                                            mem[_50283 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50283 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor2[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor2[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _50894 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_50894] = 26
                                                            mem[_50894 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _50894 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor2[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor2[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                        sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
            else:
                if sub_efc1a9bf[mem[(32 * idx) + 128]].field_768 <= 0:
                    _39997 = mem[64]
                    mem[64] = mem[64] + 128
                    mem[_39997] = 0
                    mem[_39997 + 32] = 0
                    mem[_39997 + 64] = 0
                    mem[_39997 + 96] = 0
                    mem[0] = _39992
                    mem[32] = 104
                    _40002 = mem[64]
                    mem[64] = mem[64] + 128
                    mem[_40002] = sub_efc1a9bf[_39992].field_0
                    mem[_40002 + 32] = sub_efc1a9bf[_39992].field_256
                    mem[_40002 + 64] = sub_efc1a9bf[_39992].field_512
                    mem[_40002 + 96] = sub_efc1a9bf[_39992].field_768
                    _40003 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_40003] = 32
                    mem[_40003 + 32] = 'Parameter value is out of bounds'
                    if stor[_39994] < sub_efc1a9bf[_39992].field_512:
                        _40008 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        mem[mem[64] + 36] = 32
                        idx = 0
                        while idx < 32:
                            mem[idx + _40008 + 68] = mem[idx + _40003 + 32]
                            idx = idx + 32
                            continue 
                        revert with memory
                          from mem[64]
                           len _40008 + -mem[64] + 100
                    if not sub_efc1a9bf[_39992].field_768:
                        _40016 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40016] = 32
                        mem[_40016 + 32] = 'Parameter value is out of bounds'
                        mem[0] = _39992
                        mem[32] = sha3(address(arg1), 106) + 1
                        if not stor106[address(arg1)][1][_39992].field_0:
                            if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            if stor106[address(arg1)][1][_39992].field_0:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                    mem[0] = _39992
                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_39992].field_0 = 0
                                else:
                                    if not stor[_39994]:
                                        if not sub_efc1a9bf[_39992].field_0:
                                            _40862 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40862] = 26
                                            mem[_40862 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40862 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41082 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41082] = 26
                                            mem[_41082 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41082 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_39992].field_0:
                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41081 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41081] = 26
                                            mem[_41081 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41081 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41378 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41378] = 26
                                            mem[_41378 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41378 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                            else:
                                stor106[address(arg1)].field_0++
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                    mem[0] = _39992
                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_39992].field_0 = 0
                                else:
                                    if not stor[_39994]:
                                        if not sub_efc1a9bf[_39992].field_0:
                                            _40863 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40863] = 26
                                            mem[_40863 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40863 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41087 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41087] = 26
                                            mem[_41087 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41087 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_39992].field_0:
                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41086 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41086] = 26
                                            mem[_41086 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41086 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41387 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41387] = 26
                                            mem[_41387 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41387 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                            sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                        else:
                            _40086 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40086] = 0
                            mem[_40086 + 32] = 0
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 2
                            _40104 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40104] = stor106[address(arg1)][2][_39992].field_0
                            mem[_40104 + 32] = stor106[address(arg1)][2][_39992].field_256
                            _40121 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40121] = 30
                            mem[_40121 + 32] = 'SafeMath: subtraction overflow'
                            if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                                _40161 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 30
                                idx = 0
                                while idx < 30:
                                    mem[idx + _40161 + 68] = mem[idx + _40121 + 32]
                                    idx = idx + 32
                                    continue 
                                mem[_40161 + 68] = mem[_40161 + 70 len 30]
                                revert with memory
                                  from mem[64]
                                   len _40161 + -mem[64] + 100
                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                if ext_call.return_data[0] < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if ext_call.return_data[0]:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor[_39994]:
                                            _41101 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41101] = 26
                                            mem[_41101 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41101 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41408 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41408] = 26
                                            mem[_41408 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41408 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    if not stor106[address(arg1)][1][_39992].field_0:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor[_39994]:
                                                _42630 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_42630] = 26
                                                mem[_42630 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _42630 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _42966 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_42966] = 26
                                                mem[_42966 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _42966 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                        require stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                        stor106[address(arg1)].field_0--
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor[_39994]:
                                                _43115 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43115] = 26
                                                mem[_43115 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _43115 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _43374 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43374] = 26
                                                mem[_43374 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    s = 32
                                                    while s < 26:
                                                        mem[s + mem[64] + 68] = mem[s + _43374 + 32]
                                                        s = s + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            else:
                                if not sub_efc1a9bf[_39992].field_0:
                                    if not stor106[address(arg1)][2][_39992].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor[_39994]:
                                                    _42965 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_42965] = 26
                                                    mem[_42965 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _42965 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43232 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43232] = 26
                                                    mem[_43232 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43232 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _44303 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44303] = 26
                                                        mem[_44303 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44303 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _44726 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44726] = 26
                                                        mem[_44726 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44726 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _44934 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44934] = 26
                                                        mem[_44934 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44934 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45314 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45314] = 26
                                                        mem[_45314 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45314 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43230 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43230] = 26
                                                        mem[_43230 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43230 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43510 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43510] = 26
                                                        mem[_43510 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43510 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _44723 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44723] = 26
                                                            mem[_44723 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44723 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45122 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45122] = 26
                                                            mem[_45122 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45122 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45310 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45310] = 26
                                                            mem[_45310 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45310 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45737 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45737] = 26
                                                            mem[_45737 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45737 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            _40481 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40481] = 30
                                            mem[_40481 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                                _40561 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _40561 + 68] = mem[idx + _40481 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_40561 + 68] = mem[_40561 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _40561 + -mem[64] + 100
                                            _40794 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40794] = 26
                                            mem[_40794 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40794 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _45741 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45741] = 26
                                                            mem[_45741 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45741 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _46273 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46273] = 26
                                                            mem[_46273 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46273 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46272 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46272] = 26
                                                            mem[_46272 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46272 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46887 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46887] = 26
                                                            mem[_46887 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46887 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _48220 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48220] = 26
                                                                mem[_48220 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48220 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _48842 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48842] = 26
                                                                mem[_48842 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48842 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48841 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48841] = 26
                                                                mem[_48841 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48841 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49373 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49373] = 26
                                                                mem[_49373 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49373 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _49118 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49118] = 26
                                                                mem[_49118 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49118 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49612 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49612] = 26
                                                                mem[_49612 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49612 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49611 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49611] = 26
                                                                mem[_49611 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49611 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50097 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50097] = 26
                                                                mem[_50097 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50097 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not stor106[address(arg1)][2][_39992].field_0:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43228 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43228] = 26
                                                        mem[_43228 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43228 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43503 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43503] = 26
                                                        mem[_43503 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43503 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _44718 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44718] = 26
                                                            mem[_44718 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44718 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45114 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45114] = 26
                                                            mem[_45114 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45114 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45308 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45308] = 26
                                                            mem[_45308 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45308 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45729 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45729] = 26
                                                            mem[_45729 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45729 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            _40480 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40480] = 30
                                            mem[_40480 + 32] = 'SafeMath: subtraction overflow'
                                            if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                _40558 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _40558 + 68] = mem[idx + _40480 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_40558 + 68] = mem[_40558 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _40558 + -mem[64] + 100
                                            _40791 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40791] = 26
                                            mem[_40791 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40791 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _45733 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45733] = 26
                                                            mem[_45733 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45733 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _46255 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46255] = 26
                                                            mem[_46255 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46255 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46254 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46254] = 26
                                                            mem[_46254 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46254 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46870 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46870] = 26
                                                            mem[_46870 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46870 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _48211 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48211] = 26
                                                                mem[_48211 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48211 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _48831 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48831] = 26
                                                                mem[_48831 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48831 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48830 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48830] = 26
                                                                mem[_48830 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48830 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49362 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49362] = 26
                                                                mem[_49362 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49362 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _49112 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49112] = 26
                                                                mem[_49112 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49112 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49603 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49603] = 26
                                                                mem[_49603 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49603 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49602 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49602] = 26
                                                                mem[_49602 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49602 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50079 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50079] = 26
                                                                mem[_50079 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50079 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43501 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43501] = 26
                                                        mem[_43501 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43501 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43856 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43856] = 26
                                                        mem[_43856 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43856 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45111 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45111] = 26
                                                            mem[_45111 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45111 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45501 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45501] = 26
                                                            mem[_45501 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45501 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45725 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45725] = 26
                                                            mem[_45725 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45725 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46238 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46238] = 26
                                                            mem[_46238 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46238 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            _40557 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40557] = 30
                                            mem[_40557 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                _40651 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _40651 + 68] = mem[idx + _40557 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_40651 + 68] = mem[_40651 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _40651 + -mem[64] + 100
                                            _40964 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40964] = 26
                                            mem[_40964 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40964 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _46242 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46242] = 26
                                                            mem[_46242 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46242 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _46856 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46856] = 26
                                                            mem[_46856 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46856 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46855 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46855] = 26
                                                            mem[_46855 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46855 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _47524 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_47524] = 26
                                                            mem[_47524 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _47524 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _48825 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48825] = 26
                                                                mem[_48825 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48825 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49354 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49354] = 26
                                                                mem[_49354 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49354 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49353 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49353] = 26
                                                                mem[_49353 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49353 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49816 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49816] = 26
                                                                mem[_49816 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49816 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _49597 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49597] = 26
                                                                mem[_49597 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49597 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _50066 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50066] = 26
                                                                mem[_50066 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50066 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50065 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50065] = 26
                                                                mem[_50065 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50065 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50625 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50625] = 26
                                                                mem[_50625 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50625 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                    else:
                        _40027 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40027] = 32
                        mem[_40027 + 32] = 'Parameter value is out of bounds'
                        if stor[_39994] > sub_efc1a9bf[_39992].field_768:
                            _40037 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _40037 + 68] = mem[idx + _40027 + 32]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _40037 + -mem[64] + 100
                        mem[0] = _39992
                        mem[32] = sha3(address(arg1), 106) + 1
                        if not stor106[address(arg1)][1][_39992].field_0:
                            if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            if stor106[address(arg1)][1][_39992].field_0:
                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                    mem[0] = _39992
                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_39992].field_0 = 0
                                else:
                                    if not stor[_39994]:
                                        if not sub_efc1a9bf[_39992].field_0:
                                            _40982 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40982] = 26
                                            mem[_40982 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40982 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41232 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41232] = 26
                                            mem[_41232 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41232 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_39992].field_0:
                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41231 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41231] = 26
                                            mem[_41231 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41231 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41595 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41595] = 26
                                            mem[_41595 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41595 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                            else:
                                stor106[address(arg1)].field_0++
                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                    mem[0] = _39992
                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                    mem[32] = 104
                                    sub_efc1a9bf[_39992].field_0 = 0
                                else:
                                    if not stor[_39994]:
                                        if not sub_efc1a9bf[_39992].field_0:
                                            _40983 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40983] = 26
                                            mem[_40983 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40983 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41237 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41237] = 26
                                            mem[_41237 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41237 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                    else:
                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not sub_efc1a9bf[_39992].field_0:
                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41236 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41236] = 26
                                            mem[_41236 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41236 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41604 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41604] = 26
                                            mem[_41604 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41604 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                            sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                        else:
                            _40106 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40106] = 0
                            mem[_40106 + 32] = 0
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 2
                            _40126 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40126] = stor106[address(arg1)][2][_39992].field_0
                            mem[_40126 + 32] = stor106[address(arg1)][2][_39992].field_256
                            _40142 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40142] = 30
                            mem[_40142 + 32] = 'SafeMath: subtraction overflow'
                            if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                                _40177 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 30
                                idx = 0
                                while idx < 30:
                                    mem[idx + _40177 + 68] = mem[idx + _40142 + 32]
                                    idx = idx + 32
                                    continue 
                                mem[_40177 + 68] = mem[_40177 + 70 len 30]
                                revert with memory
                                  from mem[64]
                                   len _40177 + -mem[64] + 100
                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                if ext_call.return_data[0] < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if ext_call.return_data[0]:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor[_39994]:
                                            _41251 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41251] = 26
                                            mem[_41251 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41251 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            _41625 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41625] = 26
                                            mem[_41625 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41625 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    if not stor106[address(arg1)][1][_39992].field_0:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor[_39994]:
                                                _42829 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_42829] = 26
                                                mem[_42829 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _42829 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _43122 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43122] = 26
                                                mem[_43122 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _43122 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                        require stor106[address(arg1)].field_0
                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                        stor106[address(arg1)].field_0--
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor[_39994]:
                                                _43258 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43258] = 26
                                                mem[_43258 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _43258 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _43544 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_43544] = 26
                                                mem[_43544 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _43544 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            else:
                                if not sub_efc1a9bf[_39992].field_0:
                                    if not stor106[address(arg1)][2][_39992].field_0:
                                        if ext_call.return_data[0] < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if ext_call.return_data[0]:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor[_39994]:
                                                    _43121 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43121] = 26
                                                    mem[_43121 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43121 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43383 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43383] = 26
                                                    mem[_43383 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _43383 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            if not stor106[address(arg1)][1][_39992].field_0:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _44546 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44546] = 26
                                                        mem[_44546 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44546 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _44949 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44949] = 26
                                                        mem[_44949 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44949 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                require stor106[address(arg1)].field_0
                                                stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                stor106[address(arg1)].field_0--
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                stor106[address(arg1)][1][_39992].field_0 = 0
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _45158 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45158] = 26
                                                        mem[_45158 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45158 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _45556 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_45556] = 26
                                                        mem[_45556 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _45556 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43381 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43381] = 26
                                                        mem[_43381 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _43381 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43698 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43698] = 26
                                                        mem[_43698 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43698 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _44946 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44946] = 26
                                                            mem[_44946 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44946 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45331 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45331] = 26
                                                            mem[_45331 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45331 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45552 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45552] = 26
                                                            mem[_45552 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45552 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46005 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46005] = 26
                                                            mem[_46005 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46005 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            _40518 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40518] = 30
                                            mem[_40518 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                                _40609 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _40609 + 68] = mem[idx + _40518 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_40609 + 68] = mem[_40609 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _40609 + -mem[64] + 100
                                            _40882 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40882] = 26
                                            mem[_40882 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40882 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _46009 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46009] = 26
                                                            mem[_46009 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46009 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _46600 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46600] = 26
                                                            mem[_46600 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46600 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46599 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46599] = 26
                                                            mem[_46599 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46599 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _47262 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_47262] = 26
                                                            mem[_47262 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _47262 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _48578 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48578] = 26
                                                                mem[_48578 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48578 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49142 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49142] = 26
                                                                mem[_49142 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49142 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49141 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49141] = 26
                                                                mem[_49141 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49141 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49638 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49638] = 26
                                                                mem[_49638 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49638 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _49407 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49407] = 26
                                                                mem[_49407 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49407 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49867 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49867] = 26
                                                                mem[_49867 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49867 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49866 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49866] = 26
                                                                mem[_49866 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49866 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50390 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50390] = 26
                                                                mem[_50390 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50390 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    if not stor106[address(arg1)][2][_39992].field_0:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43379 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43379] = 26
                                                        mem[_43379 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _43379 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43691 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43691] = 26
                                                        mem[_43691 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43691 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _44941 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44941] = 26
                                                            mem[_44941 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44941 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45323 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45323] = 26
                                                            mem[_45323 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45323 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45550 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45550] = 26
                                                            mem[_45550 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45550 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45997 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45997] = 26
                                                            mem[_45997 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45997 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            _40517 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40517] = 30
                                            mem[_40517 + 32] = 'SafeMath: subtraction overflow'
                                            if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                _40606 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _40606 + 68] = mem[idx + _40517 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_40606 + 68] = mem[_40606 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _40606 + -mem[64] + 100
                                            _40879 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40879] = 26
                                            mem[_40879 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _40879 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _46001 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46001] = 26
                                                            mem[_46001 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46001 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _46582 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46582] = 26
                                                            mem[_46582 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46582 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46581 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46581] = 26
                                                            mem[_46581 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46581 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _47245 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_47245] = 26
                                                            mem[_47245 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _47245 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _48569 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48569] = 26
                                                                mem[_48569 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48569 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49131 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49131] = 26
                                                                mem[_49131 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49131 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49130 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49130] = 26
                                                                mem[_49130 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49130 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49627 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49627] = 26
                                                                mem[_49627 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49627 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _49401 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49401] = 26
                                                                mem[_49401 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49401 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49858 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49858] = 26
                                                                mem[_49858 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49858 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49857 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49857] = 26
                                                                mem[_49857 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49857 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50372 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50372] = 26
                                                                mem[_50372 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50372 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43689 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43689] = 26
                                                        mem[_43689 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43689 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _44093 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_44093] = 26
                                                        mem[_44093 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _44093 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45320 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45320] = 26
                                                            mem[_45320 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45320 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45753 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45753] = 26
                                                            mem[_45753 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45753 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45993 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45993] = 26
                                                            mem[_45993 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45993 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46565 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46565] = 26
                                                            mem[_46565 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46565 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            _40605 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_40605] = 30
                                            mem[_40605 + 32] = 'SafeMath: subtraction overflow'
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                _40721 = mem[64]
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 30
                                                idx = 0
                                                while idx < 30:
                                                    mem[idx + _40721 + 68] = mem[idx + _40605 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                mem[_40721 + 68] = mem[_40721 + 70 len 30]
                                                revert with memory
                                                  from mem[64]
                                                   len _40721 + -mem[64] + 100
                                            _41107 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_41107] = 26
                                            mem[_41107 + 32] = 'SafeMath: division by zero'
                                            if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _41107 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            _46569 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46569] = 26
                                                            mem[_46569 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46569 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            _47231 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_47231] = 26
                                                            mem[_47231 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _47231 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _47230 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_47230] = 26
                                                            mem[_47230 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _47230 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _47911 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_47911] = 26
                                                            mem[_47911 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _47911 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _49125 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49125] = 26
                                                                mem[_49125 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49125 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _49619 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49619] = 26
                                                                mem[_49619 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49619 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _49618 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49618] = 26
                                                                mem[_49618 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49618 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50106 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50106] = 26
                                                                mem[_50106 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50106 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _49852 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_49852] = 26
                                                                mem[_49852 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _49852 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _50359 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50359] = 26
                                                                mem[_50359 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50359 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50358 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50358] = 26
                                                                mem[_50358 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50358 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _50982 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_50982] = 26
                                                                mem[_50982 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _50982 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                            sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                else:
                    if stor106[address(arg1)][2][mem[(32 * idx) + 128]].field_0 <= sub_efc1a9bf[mem[(32 * idx) + 128]].field_768:
                        _40004 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_40004] = 0
                        mem[_40004 + 32] = 0
                        mem[_40004 + 64] = 0
                        mem[_40004 + 96] = 0
                        mem[0] = _39992
                        mem[32] = 104
                        _40010 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_40010] = sub_efc1a9bf[_39992].field_0
                        mem[_40010 + 32] = sub_efc1a9bf[_39992].field_256
                        mem[_40010 + 64] = sub_efc1a9bf[_39992].field_512
                        mem[_40010 + 96] = sub_efc1a9bf[_39992].field_768
                        _40011 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40011] = 32
                        mem[_40011 + 32] = 'Parameter value is out of bounds'
                        if stor[_39994] < sub_efc1a9bf[_39992].field_512:
                            _40020 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _40020 + 68] = mem[idx + _40011 + 32]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _40020 + -mem[64] + 100
                        if not sub_efc1a9bf[_39992].field_768:
                            _40028 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40028] = 32
                            mem[_40028 + 32] = 'Parameter value is out of bounds'
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_39992].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_39992].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor[_39994]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _40989 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40989] = 26
                                                mem[_40989 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _40989 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41253 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41253] = 26
                                                mem[_41253 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41253 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41252 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41252] = 26
                                                mem[_41252 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41252 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41631 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41631] = 26
                                                mem[_41631 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41631 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor[_39994]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _40990 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40990] = 26
                                                mem[_40990 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _40990 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41258 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41258] = 26
                                                mem[_41258 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41258 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41257 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41257] = 26
                                                mem[_41257 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41257 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41640 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41640] = 26
                                                mem[_41640 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41640 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                            else:
                                _40107 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40107] = 0
                                mem[_40107 + 32] = 0
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 2
                                _40132 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40132] = stor106[address(arg1)][2][_39992].field_0
                                mem[_40132 + 32] = stor106[address(arg1)][2][_39992].field_256
                                _40143 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40143] = 30
                                mem[_40143 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                                    _40180 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _40180 + 68] = mem[idx + _40143 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_40180 + 68] = mem[_40180 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _40180 + -mem[64] + 100
                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor[_39994]:
                                                _41272 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41272] = 26
                                                mem[_41272 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41272 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41661 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41661] = 26
                                                mem[_41661 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41661 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_39992].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor[_39994]:
                                                    _42842 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_42842] = 26
                                                    mem[_42842 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _42842 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43134 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43134] = 26
                                                    mem[_43134 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43134 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_39992].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor[_39994]:
                                                    _43274 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43274] = 26
                                                    mem[_43274 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43274 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43565 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43565] = 26
                                                    mem[_43565 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43565 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43133 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43133] = 26
                                                        mem[_43133 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43133 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43399 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43399] = 26
                                                        mem[_43399 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _43399 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _44572 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44572] = 26
                                                            mem[_44572 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44572 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _44973 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44973] = 26
                                                            mem[_44973 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44973 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45182 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45182] = 26
                                                            mem[_45182 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45182 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45574 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45574] = 26
                                                            mem[_45574 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45574 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _43397 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43397] = 26
                                                            mem[_43397 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                s = 32
                                                                while s < 26:
                                                                    mem[s + mem[64] + 68] = mem[s + _43397 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _43724 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43724] = 26
                                                            mem[_43724 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43724 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _44970 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_44970] = 26
                                                                mem[_44970 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _44970 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45357 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45357] = 26
                                                                mem[_45357 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45357 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45570 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45570] = 26
                                                                mem[_45570 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45570 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46034 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46034] = 26
                                                                mem[_46034 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46034 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40524 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40524] = 30
                                                mem[_40524 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                                    _40620 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40620 + 68] = mem[idx + _40524 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40620 + 68] = mem[_40620 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40620 + -mem[64] + 100
                                                _40898 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40898] = 26
                                                mem[_40898 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _40898 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46038 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46038] = 26
                                                                mem[_46038 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46038 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _46652 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46652] = 26
                                                                mem[_46652 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46652 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46651 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46651] = 26
                                                                mem[_46651 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46651 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47316 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47316] = 26
                                                                mem[_47316 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47316 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _48609 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_48609] = 26
                                                                    mem[_48609 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _48609 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49173 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49173] = 26
                                                                    mem[_49173 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49173 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49172 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49172] = 26
                                                                    mem[_49172 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49172 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49671 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49671] = 26
                                                                    mem[_49671 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49671 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49431 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49431] = 26
                                                                    mem[_49431 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49431 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49891 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49891] = 26
                                                                    mem[_49891 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49891 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49890 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49890] = 26
                                                                    mem[_49890 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49890 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50435 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50435] = 26
                                                                    mem[_50435 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50435 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _43395 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43395] = 26
                                                            mem[_43395 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                s = 32
                                                                while s < 26:
                                                                    mem[s + mem[64] + 68] = mem[s + _43395 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _43717 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43717] = 26
                                                            mem[_43717 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43717 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _44965 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_44965] = 26
                                                                mem[_44965 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _44965 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45349 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45349] = 26
                                                                mem[_45349 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45349 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45568 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45568] = 26
                                                                mem[_45568 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45568 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46026 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46026] = 26
                                                                mem[_46026 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46026 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40523 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40523] = 30
                                                mem[_40523 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40617 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40617 + 68] = mem[idx + _40523 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40617 + 68] = mem[_40617 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40617 + -mem[64] + 100
                                                _40895 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40895] = 26
                                                mem[_40895 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _40895 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46030 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46030] = 26
                                                                mem[_46030 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46030 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _46634 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46634] = 26
                                                                mem[_46634 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46634 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46633 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46633] = 26
                                                                mem[_46633 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46633 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47299 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47299] = 26
                                                                mem[_47299 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47299 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _48600 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_48600] = 26
                                                                    mem[_48600 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _48600 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49162 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49162] = 26
                                                                    mem[_49162 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49162 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49161 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49161] = 26
                                                                    mem[_49161 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49161 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49660 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49660] = 26
                                                                    mem[_49660 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49660 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49425 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49425] = 26
                                                                    mem[_49425 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49425 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49882 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49882] = 26
                                                                    mem[_49882 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49882 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49881 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49881] = 26
                                                                    mem[_49881 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49881 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50417 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50417] = 26
                                                                    mem[_50417 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50417 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _43715 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43715] = 26
                                                            mem[_43715 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43715 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _44127 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44127] = 26
                                                            mem[_44127 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44127 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45346 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45346] = 26
                                                                mem[_45346 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45346 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45794 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45794] = 26
                                                                mem[_45794 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45794 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _46022 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46022] = 26
                                                                mem[_46022 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46022 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46617 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46617] = 26
                                                                mem[_46617 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46617 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40616 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40616] = 30
                                                mem[_40616 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40731 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40731 + 68] = mem[idx + _40616 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40731 + 68] = mem[_40731 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40731 + -mem[64] + 100
                                                _41130 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41130] = 26
                                                mem[_41130 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41130 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46621 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46621] = 26
                                                                mem[_46621 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46621 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _47285 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47285] = 26
                                                                mem[_47285 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47285 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47284 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47284] = 26
                                                                mem[_47284 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47284 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47954 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47954] = 26
                                                                mem[_47954 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47954 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49156 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49156] = 26
                                                                    mem[_49156 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49156 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49652 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49652] = 26
                                                                    mem[_49652 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49652 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49651 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49651] = 26
                                                                    mem[_49651 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49651 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50137 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50137] = 26
                                                                    mem[_50137 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50137 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49876 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49876] = 26
                                                                    mem[_49876 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49876 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50404 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50404] = 26
                                                                    mem[_50404 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50404 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50403 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50403] = 26
                                                                    mem[_50403 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50403 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _51038 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51038] = 26
                                                                    mem[_51038 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51038 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                        else:
                            _40040 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40040] = 32
                            mem[_40040 + 32] = 'Parameter value is out of bounds'
                            if stor[_39994] > sub_efc1a9bf[_39992].field_768:
                                _40049 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _40049 + 68] = mem[idx + _40040 + 32]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _40049 + -mem[64] + 100
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_39992].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_39992].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor[_39994]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _41148 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41148] = 26
                                                mem[_41148 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41148 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41447 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41447] = 26
                                                mem[_41447 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41447 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41446 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41446] = 26
                                                mem[_41446 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41446 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41850 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41850] = 26
                                                mem[_41850 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41850 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor[_39994]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _41149 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41149] = 26
                                                mem[_41149 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41149 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41452 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41452] = 26
                                                mem[_41452 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41452 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41451 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41451] = 26
                                                mem[_41451 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41451 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41859 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41859] = 26
                                                mem[_41859 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41859 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                            else:
                                _40134 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40134] = 0
                                mem[_40134 + 32] = 0
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 2
                                _40148 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40148] = stor106[address(arg1)][2][_39992].field_0
                                mem[_40148 + 32] = stor106[address(arg1)][2][_39992].field_256
                                _40166 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40166] = 30
                                mem[_40166 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                                    _40190 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _40190 + 68] = mem[idx + _40166 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_40190 + 68] = mem[_40190 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _40190 + -mem[64] + 100
                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor[_39994]:
                                                _41466 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41466] = 26
                                                mem[_41466 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41466 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41880 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41880] = 26
                                                mem[_41880 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41880 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_39992].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor[_39994]:
                                                    _43026 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43026] = 26
                                                    mem[_43026 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43026 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43281 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43281] = 26
                                                    mem[_43281 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43281 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_39992].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor[_39994]:
                                                    _43425 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43425] = 26
                                                    mem[_43425 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _43425 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43758 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43758] = 26
                                                    mem[_43758 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43758 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor[_39994]:
                                                        _43280 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43280] = 26
                                                        mem[_43280 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43280 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor[_39994] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43574 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43574] = 26
                                                        mem[_43574 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43574 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _44805 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44805] = 26
                                                            mem[_44805 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44805 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45197 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45197] = 26
                                                            mem[_45197 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45197 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _45393 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45393] = 26
                                                            mem[_45393 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45393 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45849 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45849] = 26
                                                            mem[_45849 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45849 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _43572 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43572] = 26
                                                            mem[_43572 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43572 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _43945 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43945] = 26
                                                            mem[_43945 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43945 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45194 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45194] = 26
                                                                mem[_45194 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45194 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45591 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45591] = 26
                                                                mem[_45591 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45591 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45845 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45845] = 26
                                                                mem[_45845 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45845 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46366 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46366] = 26
                                                                mem[_46366 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46366 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40569 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40569] = 30
                                                mem[_40569 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                                    _40673 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40673 + 68] = mem[idx + _40569 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40673 + 68] = mem[_40673 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40673 + -mem[64] + 100
                                                _41009 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41009] = 26
                                                mem[_41009 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41009 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46370 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46370] = 26
                                                                mem[_46370 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46370 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _46994 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46994] = 26
                                                                mem[_46994 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46994 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46993 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46993] = 26
                                                                mem[_46993 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46993 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47674 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47674] = 26
                                                                mem[_47674 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47674 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _48960 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_48960] = 26
                                                                    mem[_48960 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _48960 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49455 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49455] = 26
                                                                    mem[_49455 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49455 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49454 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49454] = 26
                                                                    mem[_49454 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49454 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49917 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49917] = 26
                                                                    mem[_49917 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49917 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49705 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49705] = 26
                                                                    mem[_49705 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49705 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50188 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50188] = 26
                                                                    mem[_50188 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50188 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50187 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50187] = 26
                                                                    mem[_50187 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50187 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50768 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50768] = 26
                                                                    mem[_50768 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50768 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _43570 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43570] = 26
                                                            mem[_43570 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43570 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _43938 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43938] = 26
                                                            mem[_43938 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43938 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45189 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45189] = 26
                                                                mem[_45189 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45189 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45583 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45583] = 26
                                                                mem[_45583 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45583 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45843 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45843] = 26
                                                                mem[_45843 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45843 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46358 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46358] = 26
                                                                mem[_46358 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46358 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40568 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40568] = 30
                                                mem[_40568 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40670 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40670 + 68] = mem[idx + _40568 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40670 + 68] = mem[_40670 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40670 + -mem[64] + 100
                                                _41006 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41006] = 26
                                                mem[_41006 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41006 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46362 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46362] = 26
                                                                mem[_46362 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46362 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _46976 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46976] = 26
                                                                mem[_46976 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46976 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46975 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46975] = 26
                                                                mem[_46975 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46975 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47657 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47657] = 26
                                                                mem[_47657 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47657 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _48951 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_48951] = 26
                                                                    mem[_48951 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _48951 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49444 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49444] = 26
                                                                    mem[_49444 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49444 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49443 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49443] = 26
                                                                    mem[_49443 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49443 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49906 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49906] = 26
                                                                    mem[_49906 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49906 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49699 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49699] = 26
                                                                    mem[_49699 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49699 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50179 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50179] = 26
                                                                    mem[_50179 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50179 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50178 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50178] = 26
                                                                    mem[_50178 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50178 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50750 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50750] = 26
                                                                    mem[_50750 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50750 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            _43936 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43936] = 26
                                                            mem[_43936 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43936 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor[_39994] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _44360 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44360] = 26
                                                            mem[_44360 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44360 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _45580 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45580] = 26
                                                                mem[_45580 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45580 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46050 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46050] = 26
                                                                mem[_46050 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46050 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                _46354 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46354] = 26
                                                                mem[_46354 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46354 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46959 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46959] = 26
                                                                mem[_46959 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46959 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40669 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40669] = 30
                                                mem[_40669 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40819 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40819 + 68] = mem[idx + _40669 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40819 + 68] = mem[_40819 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40819 + -mem[64] + 100
                                                _41278 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41278] = 26
                                                mem[_41278 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41278 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor[_39994]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46963 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46963] = 26
                                                                mem[_46963 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46963 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _47643 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47643] = 26
                                                                mem[_47643 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47643 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47642 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47642] = 26
                                                                mem[_47642 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47642 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor[_39994] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48323 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48323] = 26
                                                                mem[_48323 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48323 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49438 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49438] = 26
                                                                    mem[_49438 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49438 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49898 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49898] = 26
                                                                    mem[_49898 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49898 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49897 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49897] = 26
                                                                    mem[_49897 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49897 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50444 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50444] = 26
                                                                    mem[_50444 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50444 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor[_39994]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _50173 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50173] = 26
                                                                    mem[_50173 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50173 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50737 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50737] = 26
                                                                    mem[_50737 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50737 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor[_39994] / stor[_39994] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50736 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50736] = 26
                                                                    mem[_50736 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50736 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor[_39994] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor[_39994] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _51373 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51373] = 26
                                                                    mem[_51373 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51373 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor[_39994]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor[_39994]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                    else:
                        _40012 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_40012] = 0
                        mem[_40012 + 32] = 0
                        mem[_40012 + 64] = 0
                        mem[_40012 + 96] = 0
                        mem[0] = _39992
                        mem[32] = 104
                        _40022 = mem[64]
                        mem[64] = mem[64] + 128
                        mem[_40022] = sub_efc1a9bf[_39992].field_0
                        mem[_40022 + 32] = sub_efc1a9bf[_39992].field_256
                        mem[_40022 + 64] = sub_efc1a9bf[_39992].field_512
                        mem[_40022 + 96] = sub_efc1a9bf[_39992].field_768
                        _40023 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_40023] = 32
                        mem[_40023 + 32] = 'Parameter value is out of bounds'
                        if stor3[_39995] < sub_efc1a9bf[_39992].field_512:
                            _40032 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            mem[mem[64] + 36] = 32
                            idx = 0
                            while idx < 32:
                                mem[idx + _40032 + 68] = mem[idx + _40023 + 32]
                                idx = idx + 32
                                continue 
                            revert with memory
                              from mem[64]
                               len _40032 + -mem[64] + 100
                        if not sub_efc1a9bf[_39992].field_768:
                            _40041 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40041] = 32
                            mem[_40041 + 32] = 'Parameter value is out of bounds'
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_39992].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_39992].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor3[_39995]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _41155 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41155] = 26
                                                mem[_41155 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41155 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41468 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41468] = 26
                                                mem[_41468 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41468 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41467 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41467] = 26
                                                mem[_41467 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41467 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41886 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41886] = 26
                                                mem[_41886 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41886 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor3[_39995]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _41156 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41156] = 26
                                                mem[_41156 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41156 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41473 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41473] = 26
                                                mem[_41473 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41473 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41472 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41472] = 26
                                                mem[_41472 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41472 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41895 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41895] = 26
                                                mem[_41895 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41895 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                            else:
                                _40135 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40135] = 0
                                mem[_40135 + 32] = 0
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 2
                                _40154 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40154] = stor106[address(arg1)][2][_39992].field_0
                                mem[_40154 + 32] = stor106[address(arg1)][2][_39992].field_256
                                _40167 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40167] = 30
                                mem[_40167 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                                    _40193 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _40193 + 68] = mem[idx + _40167 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_40193 + 68] = mem[_40193 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _40193 + -mem[64] + 100
                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor3[_39995]:
                                                _41487 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41487] = 26
                                                mem[_41487 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41487 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41916 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41916] = 26
                                                mem[_41916 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41916 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_39992].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor3[_39995]:
                                                    _43039 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43039] = 26
                                                    mem[_43039 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43039 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43293 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43293] = 26
                                                    mem[_43293 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43293 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_39992].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor3[_39995]:
                                                    _43441 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43441] = 26
                                                    mem[_43441 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _43441 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43779 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43779] = 26
                                                    mem[_43779 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43779 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor3[_39995]:
                                                        _43292 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43292] = 26
                                                        mem[_43292 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43292 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor3[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43590 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43590] = 26
                                                        mem[_43590 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43590 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _44831 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44831] = 26
                                                            mem[_44831 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44831 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45221 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45221] = 26
                                                            mem[_45221 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45221 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _45417 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45417] = 26
                                                            mem[_45417 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45417 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45867 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45867] = 26
                                                            mem[_45867 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45867 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _43588 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43588] = 26
                                                            mem[_43588 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43588 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _43971 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43971] = 26
                                                            mem[_43971 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43971 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45218 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45218] = 26
                                                                mem[_45218 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45218 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45617 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45617] = 26
                                                                mem[_45617 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45617 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45863 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45863] = 26
                                                                mem[_45863 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45863 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46395 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46395] = 26
                                                                mem[_46395 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46395 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40575 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40575] = 30
                                                mem[_40575 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                                    _40684 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40684 + 68] = mem[idx + _40575 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40684 + 68] = mem[_40684 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40684 + -mem[64] + 100
                                                _41025 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41025] = 26
                                                mem[_41025 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41025 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46399 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46399] = 26
                                                                mem[_46399 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46399 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _47046 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47046] = 26
                                                                mem[_47046 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47046 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47045 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47045] = 26
                                                                mem[_47045 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47045 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47728 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47728] = 26
                                                                mem[_47728 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47728 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _48991 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_48991] = 26
                                                                    mem[_48991 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _48991 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49486 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49486] = 26
                                                                    mem[_49486 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49486 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49485 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49485] = 26
                                                                    mem[_49485 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49485 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49950 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49950] = 26
                                                                    mem[_49950 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49950 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49729 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49729] = 26
                                                                    mem[_49729 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49729 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50212 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50212] = 26
                                                                    mem[_50212 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50212 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50211 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50211] = 26
                                                                    mem[_50211 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50211 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50813 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50813] = 26
                                                                    mem[_50813 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50813 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _43586 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43586] = 26
                                                            mem[_43586 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43586 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _43964 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43964] = 26
                                                            mem[_43964 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43964 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45213 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45213] = 26
                                                                mem[_45213 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45213 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45609 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45609] = 26
                                                                mem[_45609 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45609 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45861 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45861] = 26
                                                                mem[_45861 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45861 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46387 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46387] = 26
                                                                mem[_46387 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46387 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40574 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40574] = 30
                                                mem[_40574 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40681 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40681 + 68] = mem[idx + _40574 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40681 + 68] = mem[_40681 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40681 + -mem[64] + 100
                                                _41022 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41022] = 26
                                                mem[_41022 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41022 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46391 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46391] = 26
                                                                mem[_46391 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46391 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _47028 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47028] = 26
                                                                mem[_47028 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47028 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47027 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47027] = 26
                                                                mem[_47027 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47027 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47711 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47711] = 26
                                                                mem[_47711 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47711 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _48982 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_48982] = 26
                                                                    mem[_48982 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _48982 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49475 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49475] = 26
                                                                    mem[_49475 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49475 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49474 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49474] = 26
                                                                    mem[_49474 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49474 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49939 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49939] = 26
                                                                    mem[_49939 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49939 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49723 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49723] = 26
                                                                    mem[_49723 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49723 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50203 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50203] = 26
                                                                    mem[_50203 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50203 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50202 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50202] = 26
                                                                    mem[_50202 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50202 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50795 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50795] = 26
                                                                    mem[_50795 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50795 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _43962 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43962] = 26
                                                            mem[_43962 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43962 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _44394 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44394] = 26
                                                            mem[_44394 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44394 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45606 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45606] = 26
                                                                mem[_45606 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45606 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46091 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46091] = 26
                                                                mem[_46091 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46091 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _46383 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46383] = 26
                                                                mem[_46383 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46383 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47011 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47011] = 26
                                                                mem[_47011 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47011 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40680 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40680] = 30
                                                mem[_40680 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40829 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40829 + 68] = mem[idx + _40680 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40829 + 68] = mem[_40829 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40829 + -mem[64] + 100
                                                _41301 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41301] = 26
                                                mem[_41301 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41301 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _47015 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47015] = 26
                                                                mem[_47015 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47015 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _47697 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47697] = 26
                                                                mem[_47697 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47697 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47696 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47696] = 26
                                                                mem[_47696 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47696 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48366 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48366] = 26
                                                                mem[_48366 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48366 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49469 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49469] = 26
                                                                    mem[_49469 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49469 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49931 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49931] = 26
                                                                    mem[_49931 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49931 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49930 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49930] = 26
                                                                    mem[_49930 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49930 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50475 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50475] = 26
                                                                    mem[_50475 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50475 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _50197 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50197] = 26
                                                                    mem[_50197 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50197 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50782 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50782] = 26
                                                                    mem[_50782 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50782 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50781 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50781] = 26
                                                                    mem[_50781 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50781 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _51429 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51429] = 26
                                                                    mem[_51429 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51429 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                        else:
                            _40052 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_40052] = 32
                            mem[_40052 + 32] = 'Parameter value is out of bounds'
                            if stor3[_39995] > sub_efc1a9bf[_39992].field_768:
                                _40060 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                mem[mem[64] + 36] = 32
                                idx = 0
                                while idx < 32:
                                    mem[idx + _40060 + 68] = mem[idx + _40052 + 32]
                                    idx = idx + 32
                                    continue 
                                revert with memory
                                  from mem[64]
                                   len _40060 + -mem[64] + 100
                            mem[0] = _39992
                            mem[32] = sha3(address(arg1), 106) + 1
                            if not stor106[address(arg1)][1][_39992].field_0:
                                if ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 < sub_efc1a9bf[_39992].field_256:
                                    revert with 0, 'SafeMath: addition overflow'
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 1
                                if stor106[address(arg1)][1][_39992].field_0:
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor3[_39995]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _41319 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41319] = 26
                                                mem[_41319 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41319 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41700 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41700] = 26
                                                mem[_41700 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41700 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41699 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41699] = 26
                                                mem[_41699 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41699 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _42127 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_42127] = 26
                                                mem[_42127 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _42127 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                else:
                                    stor106[address(arg1)].field_0++
                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = _39992
                                    mem[0] = _39992
                                    mem[32] = sha3(address(arg1), 106) + 1
                                    stor106[address(arg1)][1][_39992].field_0 = stor106[address(arg1)].field_0
                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                        mem[0] = _39992
                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                        mem[32] = 104
                                        sub_efc1a9bf[_39992].field_0 = 0
                                    else:
                                        if not stor3[_39995]:
                                            if not sub_efc1a9bf[_39992].field_0:
                                                _41320 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41320] = 26
                                                mem[_41320 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41320 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41705 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41705] = 26
                                                mem[_41705 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41705 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                        else:
                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not sub_efc1a9bf[_39992].field_0:
                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _41704 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41704] = 26
                                                mem[_41704 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41704 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                            else:
                                                if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) < sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _42136 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_42136] = 26
                                                mem[_42136 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _42136 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256
                                sub_efc1a9bf[_39992].field_256 += ext_call.return_data[0]
                            else:
                                _40156 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40156] = 0
                                mem[_40156 + 32] = 0
                                mem[0] = _39992
                                mem[32] = sha3(address(arg1), 106) + 2
                                _40172 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40172] = stor106[address(arg1)][2][_39992].field_0
                                mem[_40172 + 32] = stor106[address(arg1)][2][_39992].field_256
                                _40185 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_40185] = 30
                                mem[_40185 + 32] = 'SafeMath: subtraction overflow'
                                if stor106[address(arg1)][2][_39992].field_256 > sub_efc1a9bf[_39992].field_256:
                                    _40207 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _40207 + 68] = mem[idx + _40185 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_40207 + 68] = mem[_40207 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _40207 + -mem[64] + 100
                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                    if ext_call.return_data[0] < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if ext_call.return_data[0]:
                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                            mem[0] = _39992
                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                            mem[32] = 104
                                            sub_efc1a9bf[_39992].field_0 = 0
                                        else:
                                            if not stor3[_39995]:
                                                _41719 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41719] = 26
                                                mem[_41719 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41719 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                _42157 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_42157] = 26
                                                mem[_42157 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _42157 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        mem[0] = _39992
                                        mem[32] = sha3(address(arg1), 106) + 1
                                        if not stor106[address(arg1)][1][_39992].field_0:
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor3[_39995]:
                                                    _43194 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43194] = 26
                                                    mem[_43194 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43194 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _43448 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43448] = 26
                                                    mem[_43448 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        s = 32
                                                        while s < 26:
                                                            mem[s + mem[64] + 68] = mem[s + _43448 + 32]
                                                            s = s + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                            require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                            stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                            require stor106[address(arg1)].field_0
                                            stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                            stor106[address(arg1)].field_0--
                                            mem[0] = _39992
                                            mem[32] = sha3(address(arg1), 106) + 1
                                            stor106[address(arg1)][1][_39992].field_0 = 0
                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                mem[0] = _39992
                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                mem[32] = 104
                                                sub_efc1a9bf[_39992].field_0 = 0
                                            else:
                                                if not stor3[_39995]:
                                                    _43616 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_43616] = 26
                                                    mem[_43616 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _43616 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    _44005 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_44005] = 26
                                                    mem[_44005 + 32] = 'SafeMath: division by zero'
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = 32
                                                        mem[mem[64] + 36] = 26
                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                        idx = 32
                                                        while idx < 26:
                                                            mem[idx + mem[64] + 68] = mem[idx + _44005 + 32]
                                                            idx = idx + 32
                                                            continue 
                                                        revert with 0, 'SafeMath: division by zero'
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                else:
                                    if not sub_efc1a9bf[_39992].field_0:
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if ext_call.return_data[0] < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if ext_call.return_data[0]:
                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                    mem[0] = _39992
                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                    mem[32] = 104
                                                    sub_efc1a9bf[_39992].field_0 = 0
                                                else:
                                                    if not stor3[_39995]:
                                                        _43447 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43447] = 26
                                                        mem[_43447 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            s = 32
                                                            while s < 26:
                                                                mem[s + mem[64] + 68] = mem[s + _43447 + 32]
                                                                s = s + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                        if ext_call.return_data[0] * stor3[_39995] < 0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        _43788 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_43788] = 26
                                                        mem[_43788 + 32] = 'SafeMath: division by zero'
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = 32
                                                            mem[mem[64] + 36] = 26
                                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                            idx = 32
                                                            while idx < 26:
                                                                mem[idx + mem[64] + 68] = mem[idx + _43788 + 32]
                                                                idx = idx + 32
                                                                continue 
                                                            revert with 0, 'SafeMath: division by zero'
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                mem[0] = _39992
                                                mem[32] = sha3(address(arg1), 106) + 1
                                                if not stor106[address(arg1)][1][_39992].field_0:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _45052 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45052] = 26
                                                            mem[_45052 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45052 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _45432 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45432] = 26
                                                            mem[_45432 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45432 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                    require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                    stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                    require stor106[address(arg1)].field_0
                                                    stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                    stor106[address(arg1)].field_0--
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    stor106[address(arg1)][1][_39992].field_0 = 0
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _45653 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_45653] = 26
                                                            mem[_45653 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _45653 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _46146 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_46146] = 26
                                                            mem[_46146 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _46146 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if 0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _43786 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43786] = 26
                                                            mem[_43786 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43786 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _44216 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44216] = 26
                                                            mem[_44216 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44216 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45429 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45429] = 26
                                                                mem[_45429 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45429 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45884 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45884] = 26
                                                                mem[_45884 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45884 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _46142 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46142] = 26
                                                                mem[_46142 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46142 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46745 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46745] = 26
                                                                mem[_46745 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46745 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40628 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40628] = 30
                                                mem[_40628 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > 0:
                                                    _40753 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40753 + 68] = mem[idx + _40628 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40753 + 68] = mem[_40753 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40753 + -mem[64] + 100
                                                _41175 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41175] = 26
                                                mem[_41175 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41175 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46749 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46749] = 26
                                                                mem[_46749 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46749 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _47423 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47423] = 26
                                                                mem[_47423 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47423 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47422 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47422] = 26
                                                                mem[_47422 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47422 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48104 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48104] = 26
                                                                mem[_48104 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48104 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49291 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49291] = 26
                                                                    mem[_49291 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49291 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49753 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49753] = 26
                                                                    mem[_49753 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49753 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49752 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49752] = 26
                                                                    mem[_49752 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49752 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50238 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50238] = 26
                                                                    mem[_50238 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50238 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49984 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49984] = 26
                                                                    mem[_49984 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49984 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50526 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50526] = 26
                                                                    mem[_50526 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50526 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50525 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50525] = 26
                                                                    mem[_50525 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50525 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _51181 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51181] = 26
                                                                    mem[_51181 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51181 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * -1 * stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                    else:
                                        if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_0 != sub_efc1a9bf[_39992].field_256:
                                            revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not stor106[address(arg1)][2][_39992].field_0:
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= 0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _43784 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_43784] = 26
                                                            mem[_43784 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _43784 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _44209 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44209] = 26
                                                            mem[_44209 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44209 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45424 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45424] = 26
                                                                mem[_45424 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45424 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _45876 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45876] = 26
                                                                mem[_45876 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45876 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _46140 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46140] = 26
                                                                mem[_46140 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46140 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46737 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46737] = 26
                                                                mem[_46737 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46737 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40627 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40627] = 30
                                                mem[_40627 + 32] = 'SafeMath: subtraction overflow'
                                                if 0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40750 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40750 + 68] = mem[idx + _40627 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40750 + 68] = mem[_40750 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40750 + -mem[64] + 100
                                                _41172 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41172] = 26
                                                mem[_41172 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41172 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _46741 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46741] = 26
                                                                mem[_46741 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46741 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _47405 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47405] = 26
                                                                mem[_47405 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47405 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47404 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47404] = 26
                                                                mem[_47404 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47404 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48087 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48087] = 26
                                                                mem[_48087 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48087 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49282 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49282] = 26
                                                                    mem[_49282 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49282 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _49742 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49742] = 26
                                                                    mem[_49742 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49742 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _49741 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49741] = 26
                                                                    mem[_49741 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49741 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50227 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50227] = 26
                                                                    mem[_50227 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50227 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49978 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49978] = 26
                                                                    mem[_49978 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49978 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50517 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50517] = 26
                                                                    mem[_50517 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50517 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50516 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50516] = 26
                                                                    mem[_50516 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50516 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _51163 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51163] = 26
                                                                    mem[_51163 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51163 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                        else:
                                            if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 / stor106[address(arg1)][2][_39992].field_0 != stor106[address(arg1)][2][_39992].field_256:
                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0 <= stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0:
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            _44207 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44207] = 26
                                                            mem[_44207 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44207 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            _44629 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_44629] = 26
                                                            mem[_44629 + 32] = 'SafeMath: division by zero'
                                                            if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 32
                                                                mem[mem[64] + 36] = 26
                                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                idx = 32
                                                                while idx < 26:
                                                                    mem[idx + mem[64] + 68] = mem[idx + _44629 + 32]
                                                                    idx = idx + 32
                                                                    continue 
                                                                revert with 0, 'SafeMath: division by zero'
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _45873 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_45873] = 26
                                                                mem[_45873 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _45873 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _46411 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46411] = 26
                                                                mem[_46411 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46411 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                _46733 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_46733] = 26
                                                                mem[_46733 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _46733 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _47388 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47388] = 26
                                                                mem[_47388 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47388 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                            else:
                                                _40749 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_40749] = 30
                                                mem[_40749 + 32] = 'SafeMath: subtraction overflow'
                                                if stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0 > sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0:
                                                    _40923 = mem[64]
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 30
                                                    idx = 0
                                                    while idx < 30:
                                                        mem[idx + _40923 + 68] = mem[idx + _40749 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    mem[_40923 + 68] = mem[_40923 + 70 len 30]
                                                    revert with memory
                                                      from mem[64]
                                                       len _40923 + -mem[64] + 100
                                                _41493 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_41493] = 26
                                                mem[_41493 + 32] = 'SafeMath: division by zero'
                                                if not sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _41493 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                if ext_call.return_data[0] < 0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if ext_call.return_data[0]:
                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                        stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                        mem[0] = _39992
                                                        stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                        mem[32] = 104
                                                        sub_efc1a9bf[_39992].field_0 = 0
                                                    else:
                                                        if not stor3[_39995]:
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                _47392 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_47392] = 26
                                                                mem[_47392 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _47392 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                _48073 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48073] = 26
                                                                mem[_48073 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48073 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                        else:
                                                            if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                            if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48072 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48072] = 26
                                                                mem[_48072 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48072 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                _48712 = mem[64]
                                                                mem[64] = mem[64] + 64
                                                                mem[_48712] = 26
                                                                mem[_48712 + 32] = 'SafeMath: division by zero'
                                                                if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                    mem[mem[64] + 4] = 32
                                                                    mem[mem[64] + 36] = 26
                                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                    idx = 32
                                                                    while idx < 26:
                                                                        mem[idx + mem[64] + 68] = mem[idx + _48712 + 32]
                                                                        idx = idx + 32
                                                                        continue 
                                                                    revert with 0, 'SafeMath: division by zero'
                                                                stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                mem[0] = _39992
                                                                stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                mem[32] = 104
                                                                sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                else:
                                                    mem[0] = _39992
                                                    mem[32] = sha3(address(arg1), 106) + 1
                                                    if not stor106[address(arg1)][1][_39992].field_0:
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _49736 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_49736] = 26
                                                                    mem[_49736 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _49736 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _50219 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50219] = 26
                                                                    mem[_50219 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50219 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50218 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50218] = 26
                                                                    mem[_50218 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50218 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _50822 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50822] = 26
                                                                    mem[_50822 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50822 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                    else:
                                                        require stor106[address(arg1)].field_0 - 1 < stor106[address(arg1)].field_0
                                                        require stor106[address(arg1)][1][_39992].field_0 - 1 < stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)][1][_39992].field_0].field_0 = stor106[address(arg1)][stor106[address(arg1)].field_0].field_0
                                                        stor106[address(arg1)][1][stor106[address(arg1)][stor106[address(arg1)].field_0].field_0].field_0 = stor106[address(arg1)][1][_39992].field_0
                                                        require stor106[address(arg1)].field_0
                                                        stor106[address(arg1)][stor106[address(arg1)].field_0].field_0 = 0
                                                        stor106[address(arg1)].field_0--
                                                        mem[0] = _39992
                                                        mem[32] = sha3(address(arg1), 106) + 1
                                                        stor106[address(arg1)][1][_39992].field_0 = 0
                                                        if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                            stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                            mem[0] = _39992
                                                            stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                            mem[32] = 104
                                                            sub_efc1a9bf[_39992].field_0 = 0
                                                        else:
                                                            if not stor3[_39995]:
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    _50511 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_50511] = 26
                                                                    mem[_50511 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _50511 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = 0 / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    _51150 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51150] = 26
                                                                    mem[_51150 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51150 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                            else:
                                                                if ext_call.return_data[0] * stor3[_39995] / stor3[_39995] != ext_call.return_data[0]:
                                                                    revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                if not (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _51149 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51149] = 26
                                                                    mem[_51149 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51149 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = ext_call.return_data[0] * stor3[_39995] / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                                                else:
                                                                    if (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256 != sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        revert with 0, 32, 33, 0x25536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                                    if ext_call.return_data[0] * stor3[_39995] < 0:
                                                                        revert with 0, 'SafeMath: addition overflow'
                                                                    _51758 = mem[64]
                                                                    mem[64] = mem[64] + 64
                                                                    mem[_51758] = 26
                                                                    mem[_51758 + 32] = 'SafeMath: division by zero'
                                                                    if not ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256:
                                                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[mem[64] + 4] = 32
                                                                        mem[mem[64] + 36] = 26
                                                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                                        idx = 32
                                                                        while idx < 26:
                                                                            mem[idx + mem[64] + 68] = mem[idx + _51758 + 32]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 'SafeMath: division by zero'
                                                                    stor106[address(arg1)][2][_39992].field_0 = stor3[_39995]
                                                                    mem[0] = _39992
                                                                    stor106[address(arg1)][2][_39992].field_256 = ext_call.return_data[0]
                                                                    mem[32] = 104
                                                                    sub_efc1a9bf[_39992].field_0 = (ext_call.return_data[0] * stor3[_39995]) + (sub_efc1a9bf[_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) - (stor106[address(arg1)][2][_39992].field_256 * (sub_efc1a9bf[_39992].field_256 * sub_efc1a9bf[_39992].field_0) - (stor106[address(arg1)][2][_39992].field_256 * stor106[address(arg1)][2][_39992].field_0) / sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256) / ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
                                sub_efc1a9bf[_39992].field_256 = ext_call.return_data[0] + sub_efc1a9bf[_39992].field_256 - stor106[address(arg1)][2][_39992].field_256
            idx = idx + 1
            s = _39992
            continue 
}



}
